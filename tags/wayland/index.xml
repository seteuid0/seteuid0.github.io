<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>wayland on seteuid0's blog</title><link>/tags/wayland/</link><description>Recent content in wayland on seteuid0's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>This is a customized copyright.</copyright><lastBuildDate>Tue, 27 Feb 2018 12:19:05 +0000</lastBuildDate><atom:link href="/tags/wayland/index.xml" rel="self" type="application/rss+xml"/><item><title>[转]linux图形显示相关内容</title><link>/posts/%e8%bd%aclinux%e5%9b%be%e5%bd%a2%e6%98%be%e7%a4%ba%e7%9b%b8%e5%85%b3%e5%86%85%e5%ae%b9/</link><pubDate>Tue, 27 Feb 2018 12:19:05 +0000</pubDate><guid>/posts/%e8%bd%aclinux%e5%9b%be%e5%bd%a2%e6%98%be%e7%a4%ba%e7%9b%b8%e5%85%b3%e5%86%85%e5%ae%b9/</guid><description>1. 前言 图形子系统是linux系统中比较复杂的子系统之一：对下，它要管理形态各异的、性能各异的显示相关的器件；对上，它要向应用程序提供易用的、友好的、功能强大的图形用户界面（GUI）。因此，它是linux系统中少有的、和用户空间程序（甚至是用户）息息相关的一个子系统。 本文是图形子系统分析文章的第一篇，也是提纲挈领的一篇，将会从整体上，对linux显示子系统做一个简单的概述，进而罗列出显示子系统的软件构成，后续的文章将会围绕这些软件一一展开分析。 注1：本文所有的描述将以原生linux系统为例（如Ubuntu、Debian等），对其它基于linux的系统（如Android），部分内容会不适用。 注2：本文很多图片都是从网上搜集而来的（很多是从维基百科）。虽然蜗窝的宗旨是用自己的语言表述，尽量自己画图，但是linux图形子系统太复杂了，蜗蜗的理解有限，而老外的图画的实在太好，蜗蜗觉得，再怎么努力，也画不出更好的了，因此本着为读者负责的态度，就直接copy了。
2. 概念介绍 2.1 GUI（Graphical User Interface，图形用户界面） linux图形子系统的本质，是提供图形化的人机交互（human-computer interaction）界面，也即常说的GUI（Graphical User Interface）。而人机交互的本质，是人脑通过人的输出设备（动作、声音等），控制电脑的输入设备，电脑经过一系列的处理后，经由电脑的输出设备将结果输出，人脑再通过人的输入设备接收电脑的输出，最终实现“人脑&amp;lt;&amp;ndash;&amp;gt;电脑”之间的人机交互。下面一幅摘自维基百科的图片（可从“这里”查看比较清晰的SVG格式的原始图片），对上述过程做了很好的总结：
该图以一个非常前卫的应用场景&amp;mdash;-虚拟现实（VR，Virtual Reality）游戏，说明了以图形化为主的人机交互过程： 1）人脑通过动作、声音（对人脑而言，是output），控制电脑的输入设备，包括键盘、鼠标、操作杆、麦克风、游戏手柄（包含加速度计、陀螺仪等传感器）。 2）电脑通过输入设备，接收人脑的指令，这些指令经过kernel Input subsystem、Middleware Gesture/Speech recognition等软件的处理，转换成应用程序（Game）可以识别的、有意义的信息。 3）应用程序（Game）根据输入信息，做出相应的反馈，主要包括图像和声音。对VR游戏而言，可能需要3D rendering，这可以借助openGL及其相应的用户空间driver实现。 4）应用程序的反馈，经由kernel的Video subsystem（如DRM/KMS）、audio subsystem（如ALSA），输出到电脑的输出设备上，包括显示设备（2D/3D）、扬声器/耳机（3D Positional Audio）、游戏手柄（力的反馈）等。 5）输出到显示设备上时，可能会经过图形加速模块（Graphics accelerator）。 注3：图中提到了VR场景的典型帧率（1280×800@95fps for VR），这是一个非常庞大的信息输出，要求图形子系统能10.5ms的时间内，生成并输出一帧，以RGBA的数据格式为例，每秒需要处理的数据量是1280x800x95x4x8=3.11296Gb，压力和挑战是相当大的（更不用提1080P了）。
有关GUI更为详细的解释，请参考：https://en.wikipedia.org/wiki/Graphical_user_interface。
2.2 Windowing system（窗口系统） 窗口系统，是GUI的一种（也是当前计算机设备、智能设备广泛使用的一种），以WIMP （windows、icons、menus、pointer) 的形式，提供人机交互接口。Linux系统中有很多窗口系统的实现，如X Window System、Wayland、Android SurfaceFlinger等，虽然形态各异，但思路大致相同，包含如下要点：
1）一般都使用client-server架构，server（称作display server，或者windows server、compositor等等）管理所有输入设备，以及用于输出的显示设备。 2）应用程序作为display server的一个client，在自己窗口（window）中运行，并绘制自己的GUI。 3）client的绘图请求，都会提交给display server，display server响应并处理这些请求，以一定的规则混合、叠加，最终在有限的输出资源上（屏幕），显示多个应用程序的GUI。 3）display server和自己的client之间，通过某种类型的通信协议交互，该通信协议通常称作display server protocol。 4）display server protocol可以是基于网络的，甚至是网络透明的（network transparent），如X Window System所使用的。也可以是其它类型的，如Android SurfaceFlinger所使用的binder。
有关Windowing system的详细解释，请参考：https://en.</description></item><item><title>Fedora20启用wayland</title><link>/posts/fedora20_enable_wayland/</link><pubDate>Sat, 30 Nov 2013 10:10:00 +0000</pubDate><guid>/posts/fedora20_enable_wayland/</guid><description>wayland开发正如火如荼，不久的将来就会代替现在的x，好奇就再f20上实验了以下，方法如下：更新xorg-x11-server,xorg-x11-drv-intel 和mutter-wayland然后有2中方法启用：1、在一个虚拟终端执行“mutter-wayland &amp;ndash;wayland&amp;quot;2、切换到控制台，登陆有执行,gnome-session &amp;ndash;session=gnome-wayland现在当然还有一些bug，而且只支持intel的显卡？毕竟还没有开发完成。。。</description></item><item><title>[zz]wayland and fedora</title><link>/posts/zzwayland_and_fedora/</link><pubDate>Thu, 28 Nov 2013 12:16:00 +0000</pubDate><guid>/posts/zzwayland_and_fedora/</guid><description>Wayland and Fedora Matthias Clasen Wed Mar 20 12:29:28 UTC 2013 Previous message:rawhide report: 20130320 changesNext message:Wayland and FedoraMessages sorted by: [ date ] [ thread ] [ subject ] [ author ]</description></item><item><title>[zz]Red Hat正与Intel紧密协作，力争在Fedora 21中默认加入Wayland</title><link>/posts/zz_red_hat_are_working_in_close_collaboration_with_intel_and_strive_to_default_in_fedora_21_added_wayland/</link><pubDate>Fri, 15 Nov 2013 05:55:00 +0000</pubDate><guid>/posts/zz_red_hat_are_working_in_close_collaboration_with_intel_and_strive_to_default_in_fedora_21_added_wayland/</guid><description>Red Hat正与Intel紧密协作，力争在Fedora 21中默认加入Wayland2013-9-22 12:45| 发布者: linux| 查看数: 190| 评论数: 3|赞0摘要: 为了使Wayland支持GNOME，Red Hat与Intel的开发者紧密合作，希望能为Wayland加入Fedora21做好及时准备。 Ubuntu曾企图征服FOSS（Free and Open Source Software自由和开源软件）世界的秘密计划被Intel的一纸声明挫败 &amp;hellip;为了使Wayland支持GNOME，Red Hat与Intel的开发者紧密合作，希望能为Wayland加入Fedora21做好及时准备。Ubuntu曾企图征服FOSS（Free and Open Source Software自由和开源软件）世界的秘密计划被Intel的一纸声明挫败，至少到现在为止，Ubuntu仍未能翻身。但如今，Intel开发者的真正计划也被揭露了。抛开那些戏剧化的剧情，实际上Intel为Wayland的未来投入巨资已不是秘密，Intel的开发者们正加紧与Red Hat的合作，争取将GNOME Shell变为一个&amp;quot;码农&amp;quot;（译注，意指GNOME Shell只完成表层的外围工作）。来自Red Hat的Christian Schaller在他的个人博客中写道：“我们在Red Hat的团队一直在和我们的同行Intel紧密协作，合并并稳固相关的补丁包，保证Wayland能够支持GNOME，同时查看堆栈中还有哪些地方需要进一步改进。”看起来这个小组当前的目标是为Fedora 20准备一个足够的技术预览版本，至少目前是这样。这不是一个正式项目，但至少应该会给人们一个值得期待的idea。Ubuntu13.10预定于10月份发布，在这个特殊的时间点上，Canonical是否会急切的使出全力力推Mir，目前还并不明朗。Schaller在他的博客中还写道，“因此，一旦确信用户不会感到负面影响，我们才会最终用Wayland替代X服务器。所以，在Fedora 21中默认采用Wayland还是X服务器，这仍然是一个悬而未决的问题。”这场显示服务端之间的“战争”即将决出一个赢家，那就是终端用户。为了提供更好的用户体验，决战双方，Intel和Canonical都更加充满斗志。无论谁胜谁负，最终受益的都将是我们这些用户。 via:http://news.softpedia.com/news/Red-Hat-and-Intel-Working-Closely-to-Bring-Wayland-as-Default-for-Fedora-21-383119.shtml</description></item></channel></rss>