<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>fedora on seteuid0's blog</title><link>/tags/fedora/</link><description>Recent content in fedora on seteuid0's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>This is a customized copyright.</copyright><lastBuildDate>Sun, 29 Jul 2018 15:45:50 +0000</lastBuildDate><atom:link href="/tags/fedora/index.xml" rel="self" type="application/rss+xml"/><item><title>After upgrade to Fedora 28 cannot set locale</title><link>/posts/after-upgrade-to-fedora-28-cannot-set-locale/</link><pubDate>Sun, 29 Jul 2018 15:45:50 +0000</pubDate><guid>/posts/after-upgrade-to-fedora-28-cannot-set-locale/</guid><description>升级F28以后出现类似如下错误``` [root@KlausPC opt]# LC_ALL=C [root@KlausPC opt]# LC_ALL=CX -bash: warning: setlocale: LC_ALL: cannot change locale (CX): No such file or directory [root@KlausPC opt]# LC_ALL=de_DE.utf8 -bash: warning: setlocale: LC_ALL: cannot change locale (de_DE.utf8): No such file or directory [root@KlausPC opt]# exit logout [testuser@KlausPC ~]$ LC_ALL=de_DE.utf8 bash: warning: setlocale: LC_ALL: cannot change locale (de_DE.utf8): No such file or directory [testuser@KlausPC ~]$ su - Password: -bash: Warnung: setlocale: LC_TIME: Kann die Standorteinstellungen nicht ��ndern (de_DE.</description></item><item><title>firewalld配置到虚拟机的端口转发</title><link>/posts/firewalld%e9%85%8d%e7%bd%ae%e5%88%b0%e8%99%9a%e6%8b%9f%e6%9c%ba%e7%9a%84%e7%ab%af%e5%8f%a3%e8%bd%ac%e5%8f%91/</link><pubDate>Tue, 29 May 2018 02:57:58 +0000</pubDate><guid>/posts/firewalld%e9%85%8d%e7%bd%ae%e5%88%b0%e8%99%9a%e6%8b%9f%e6%9c%ba%e7%9a%84%e7%ab%af%e5%8f%a3%e8%bd%ac%e5%8f%91/</guid><description>场景如下，假定服务器有公网IP，不同的业务可能运行到不同的虚拟机上，通过在服务器上配置不同的端口转发使请求转发到不同的虚拟机中。 实验环境如下：
host： fedora27 guest: fedora27，ip是192.0.2.55 步骤：``` #获取当前zone firewall-cmd &amp;ndash;get-active-zones #假定获取的zone为external,fedora返回的是FedoraWorkstation firewall-cmd &amp;ndash;zone=external &amp;ndash;add-masquerade #把host上的22端口转到192.0.2.55地址的2055端口 firewall-cmd &amp;ndash;zone=external &amp;ndash;add-forward-port=port=22:proto=tcp:toport=2055:toaddr=192.0.2.55 firewall-cmd &amp;ndash;reload #需要确认ip_forward处于开启状态 net.ipv4.ip_forward = 1 检查虚拟机的防火墙开起来对应的端口，或者干脆关闭防火墙。 #其他的命令 firewall-cmd &amp;ndash;zone=external &amp;ndash;add-forward-port=port=22:proto=tcp:toport=3753 firewall-cmd &amp;ndash;zone=external &amp;ndash;add-forward-port=port=22:proto=tcp:toaddr=192.0.2.55 查看： firewall-cmd &amp;ndash;list-all firewall-cmd &amp;ndash;zone=external &amp;ndash;list-forward-ports 当然也可以使用qemu来实现端口转发，这里就不展开了。</description></item><item><title>Fedora 26无法锁屏</title><link>/posts/fedora-26%e6%97%a0%e6%b3%95%e9%94%81%e5%b1%8f/</link><pubDate>Wed, 26 Jul 2017 10:54:05 +0000</pubDate><guid>/posts/fedora-26%e6%97%a0%e6%b3%95%e9%94%81%e5%b1%8f/</guid><description>Lock screen doesn&amp;rsquo;t work after upgrading to F26 It doesn&amp;rsquo;t work when SUPER+L, when suspending or when hibernating, in GNOME. Any idea on how to solve this? UPDATE/SOLVED: OK, it was disabled in dconf, although I didn&amp;rsquo;t do it, so I post the solution here in case someone looks for it, learnt from here:``` gsettings set org.gnome.desktop.lockdown disable-lock-screen false</description></item><item><title>Fedora 25 vim右键无菜单解决办法</title><link>/posts/fedora-25-vim%e5%8f%b3%e9%94%ae%e6%97%a0%e8%8f%9c%e5%8d%95%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95/</link><pubDate>Thu, 29 Dec 2016 17:03:46 +0000</pubDate><guid>/posts/fedora-25-vim%e5%8f%b3%e9%94%ae%e6%97%a0%e8%8f%9c%e5%8d%95%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95/</guid><description>不知道什么时候开始，fedora 25里vim右键菜单突然消失了，而且点击右键时切换到“视图”模式。平常也只是使用一些简单的vim，感觉基本够用了。现在看不折腾不行了，搜索、试验了下。方法如下：
Stop sourcing $VIMRUNTIME/vimrc_example.vim. Add set mouse-=a to .vimrc as you did. Use another shortcuts. E.g. Shift + Insert, Shift + right click, or etc. (It depends on your terminal software.) 我是创建了一个~/.vimrc文件：set mouse-=a 问题解决。 参考：https://github.com/vim/vim/issues/1326</description></item><item><title>Fedora23上无法运行vmware解决办法</title><link>/posts/fedora23_vmware_run_error/</link><pubDate>Sat, 30 Apr 2016 05:51:17 +0000</pubDate><guid>/posts/fedora23_vmware_run_error/</guid><description>运行如下脚本：``` #!/bin/bash cp -aiv /usr/lib64/libgio-2.0.so.0.4600.2 /usr/lib/vmware/lib/libgio-2.0.so.0/libgio-2.0.so.0
cp -aiv /usr/lib64/libglib-2.0.so.0.4600.2 /usr/lib/vmware/lib/libglib-2.0.so.0/libglib-2.0.so.0
cp -aiv /usr/lib64/libgmodule-2.0.so.0.4600.2 /usr/lib/vmware/lib/libgmodule-2.0.so.0/libgmodule-2.0.so.0
cp -aiv /usr/lib64/libgobject-2.0.so.0.4600.2 /usr/lib/vmware/lib/libgobject-2.0.so.0/libgobject-2.0.so.0
cp -aiv /usr/lib64/libgthread-2.0.so.0.4600.2 /usr/lib/vmware/lib/libgthread-2.0.so.0/libgthread-2.0.so.0</description></item><item><title>简要ClamAV安装、使用与实现分析</title><link>/posts/clamav_use_implement/</link><pubDate>Thu, 06 Mar 2014 10:52:57 +0000</pubDate><guid>/posts/clamav_use_implement/</guid><description>ClamAV使用广泛且开源的杀毒软件，支持windows、linux、Unix等主流操作系统，除自身具有病毒查杀功能外，还支持邮件、http代理扫描等插件方式。
安装 由于ClamAV的广泛使用，很多发行版的源里都有clamav，只需要使用相应的包管理工具进行安装即可。如fedora或ubuntu下只需执行：
yum install -y clamav-* sudo apt-get install clamav-*
但然，你也可以源码包安装，网上有很多教程，这里就不在多说。
使用 杀毒软件最终要的当然是病毒库，使用前当然是更新最新的病毒库。
freshclam
ClamAv有2种使用模式，单个程序查杀和前、后台模式查杀。 clamscan就是单个程序查杀的程序，它调用libclamav库完成对指定目录、文件的扫描检查。 clamd、clamdscan是前、后台模式的查杀工具。从名字就可以看出clamd是提供查杀服务的daemon程序，clamdscan是调用查杀服务的客户端。 最简单的使用方式就是命令后加你要扫描的文件或目录，如：
 clamdscan ～/
ClamAv当然也支持很多参数进行扫描定制，这里略过。 除了命令行的工具外还有很多第三方的图形化工具，如clamtk，更多的见：http://www.clamav.net/lang/en/download/third-party-tools/3rdparty-gui/
实现分析 ClamAv实现的是最原始的特征码扫描，而加载特征码库与实现扫描功能的代码都在libclamav库中实现，两种使用模式都是调用该库完成对应的扫描功能。 libclamav库API提供了病毒扫描的各种函数接口。从病毒中提取的特征字符串被用一定的格式组织在一起并加上签名保护就形成了病毒库，clamav使用的病毒库一般后缀为.cvd文件。 libclamav库的病毒扫描法使用Aho-Corasick精确字符串匹配算法，将病毒库中的特征码与文件中的字符串进行比较，以确定文件中是否有字符串精确匹配上病毒库中的特征码，从而确定是否感染病毒。 Aho-Corasick在Boyer-Moore算法基础上进行了的多种改进，Boyer Moore算法对要搜索的字符串进行逆序字符比较，当被搜索的字符串中的字符在特征字符串中不存在时，将跳过搜索字符串中一个子段。Boyer Moore算法还利用上一次比较的结果来确定下一次的比较位置，Boyer Moore算法与线性搜索比起来每次移动的步长比较多，线性搜索每次移动一个字符，因此，Boyer Moore算法比线性搜索快得多。Aho-Corasick通过创建一种状态图并采用由软件实现的有限状态机来确定字符串在文本中的位置，消除了搜索性能与字符串数量的相关性。 当然ClamAV必须实现相应的两个算法，看如下数据结构：
struct cli_matcher { unsigned int type; /* Extended Boyer-Moore */ uint8_t *bm_shift; struct cli_bm_patt **bm_suffix, **bm_pattab; uint32_t *soff, soff_len; /* for PE section sigs */ uint32_t bm_offmode, bm_patterns, bm_reloff_num, bm_absoff_num; /* HASH */ struct cli_hash_patt hm; /* Extended Aho-Corasick */ uint32_t ac_partsigs, ac_nodes, ac_patterns, ac_lsigs; struct cli_ac_lsig **ac_lsigtable; struct cli_ac_node *ac_root, **ac_nodetable; struct cli_ac_patt **ac_pattable; struct cli_ac_patt **ac_reloff; uint32_t ac_reloff_num, ac_absoff_num; uint8_t ac_mindepth, ac_maxdepth; struct filter *filter; uint16_t maxpatlen; uint8_t ac_only; #ifdef USE_MPOOL mpool_t *mempool; #endif };</description></item><item><title>file not recognized: File truncated错误解决办法</title><link>/posts/file-not-recognized-file-truncated%e9%94%99%e8%af%af%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95/</link><pubDate>Mon, 03 Mar 2014 02:30:17 +0000</pubDate><guid>/posts/file-not-recognized-file-truncated%e9%94%99%e8%af%af%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95/</guid><description>使用rpmbuild重新编译clamav，遇到了：file not recognized: File truncated。感觉不像时程序代码问题，找到以下解决办法：
when the compilation line looks like:c++ -Dmylib\_EXPORTS -Wall -Werror -g -fPIC -I/home/user/dev/mygit/build -I/home/user/dev/mygit/src -o CMakeFiles/mylib.dir/MyCppClass.cpp.o -c /home/user/dev/mygit/src/MyCppClass.cppcomes from the fact that, as stated, the generated object (.o) file is empty (or just truncated). A quick look can also tell it:ls -l CMakeFiles/mylib.dir/Now, when the issue remains even though you re-run the compilation line, it may come from the fact that the object (.o) file is empty/truncated within the compilation cache (ccache) itself.</description></item><item><title>cvechecker实现原理分析</title><link>/posts/cvechecker%e5%ae%9e%e7%8e%b0%e5%88%86%e6%9e%90/</link><pubDate>Thu, 27 Feb 2014 09:00:20 +0000</pubDate><guid>/posts/cvechecker%e5%ae%9e%e7%8e%b0%e5%88%86%e6%9e%90/</guid><description>cvechecker是由Sven Vermeulen编写的可以用来扫描检查系统软件cve情况的软件，在SF上的下载量非常高。自己在fedora上使用了下，对比yum的信息发现存在比较严重的漏报和误报，抽空分析了下其实现方式，总结如下 。 使用过cvechecker的用户都会猜测使用的是nist的cve(Common Vulnerabilities and Exposures)[1]信息获取软件的cve列表，但是怎么和系统上的软件联系在一起呢？ 各个发行版都有自己的软件包管理系统，如redhat系列的rpm、yum。redhat、fedora负责维护rhel和fedora上各个软件包的cve信息，当执行软件包升级时，使用新的软件包替换存在cve的软件包。基于deb包的ubuntu和debian类似。因此，在特定的发行版中，只需要通过包管理器便可知道软件包的版本号，再辅以发行版提供的漏洞信息或者直接使用类似yum update的方式升级便可知道当前版本的CVE信息。 cvechecker是怎么做的呢？Sven没有依赖于包版本管理器，而是直接通过查找软件包的版本号，然后构造CPE（Common Platform Enumeration）[2]信息，通过在cve数据库中查找给CPE信息来提取CVE信息。 每个软件包都包含了众多的软件，如ls和cat都属于coreutils,那么如何从系统软件列表差找到软件包列表及版本号便是Sven方法的关键所在。通过查看代码发现，Sven自己维护了一个软件包和各个命令的映射关系表。（https://raw.github.com/sjvermeu/cvechecker/master/versions.dat）内容类似与：
,perlivp,1,perlivp$,# perlivp v([0-9][0-9]*(\.[0-9]+)+),a,perl,perl,\1,,, ,libvorbis.so,1,libvorbis.so.*,Xiph.Org libVorbis ([0-9][0-9]*(\.[0-9]+)+),a,xiph,libvorbis,\1,,,
看过cvechecker帮助文档的用户都知道，用户自己也可以定义添加这种映射表，而默认的映射表是由Sven自己维护的，默认只有650条，因此这里就是漏报的一处主要原因。 这个隐射表解决了从命令到软件包的映射，但怎么获取软件包的版本号呢？继续看代码：
/** * Here is where the various version extraction methods are supported. * We currently still only support a single method (1, which is the * &amp;ldquo;strings -n 3 &amp;rdquo; command execution) but now we can see if we can * support additional methods as well. */ if (filetype == 1) { char buffer[BUFFERSIZE]; int ret; zero_string(buffer, BUFFERSIZE); ret = strings_extract_version(ws, &amp;amp;preg, pmatch, &amp;amp;cpe_data); if (ret == 0) { add_to_sqlite_database(ws, cpe_data); cpe_to_string(buffer, BUFFERSIZE, cpe_data); fprintf(stdout, &amp;quot; - Found match for %s/%s:\t%s\n&amp;quot;, ws-&amp;gt;currentdir, ws-&amp;gt;currentfile, buffer); }; } else { fprintf(stderr, &amp;quot; !</description></item><item><title>linux编程中由_GNU_SOURCE未声明所导致的问题</title><link>/posts/linux%e7%bc%96%e7%a8%8b%e4%b8%ad%e7%94%b1_gnu_source%e6%9c%aa%e5%a3%b0%e6%98%8e%e6%89%80%e5%af%bc%e8%87%b4%e7%9a%84%e9%97%ae%e9%a2%98/</link><pubDate>Fri, 21 Feb 2014 08:54:45 +0000</pubDate><guid>/posts/linux%e7%bc%96%e7%a8%8b%e4%b8%ad%e7%94%b1_gnu_source%e6%9c%aa%e5%a3%b0%e6%98%8e%e6%89%80%e5%af%bc%e8%87%b4%e7%9a%84%e9%97%ae%e9%a2%98/</guid><description>今天在写程序的时候遇到了如下的错误，核对了半天，感觉头文件已经包含，后来发现是缺少了#define _GNU_SOURCE
gcc example.c -o example example.c: 在函数‘call’中: example.c:58:17: 错误：数组元素的类型不完全 struct mmsghdr msgs[VLEN]; example.c: In function &amp;lsquo;call&amp;rsquo;: example.c:59:17: error: array type has incomplete element type struct mmsghdr msgs[VLEN];
查看/usr/include下面的定义发现原因。 由于mmsghdr是recvmmsg所需要的，而recvmmsg只在linux中存在，所以在sys/socket.h中有如下定义：
#ifdef __USE_GNU /* For `recvmmsg' and `sendmmsg'. */ struct mmsghdr { struct msghdr msg_hdr; /* Actual message header. */ unsigned int msg_len; /* Number of received or sent bytes for the entry. */ }; #endif
在features.h文件中可以看到</description></item><item><title>开发PHP扩展（extension)或模块(module)简介</title><link>/posts/%e5%bc%80%e5%8f%91php%e6%89%a9%e5%b1%95%ef%bc%88extension%e6%88%96%e6%a8%a1%e5%9d%97module%e7%ae%80%e4%bb%8b/</link><pubDate>Tue, 31 Dec 2013 02:17:57 +0000</pubDate><guid>/posts/%e5%bc%80%e5%8f%91php%e6%89%a9%e5%b1%95%ef%bc%88extension%e6%88%96%e6%a8%a1%e5%9d%97module%e7%ae%80%e4%bb%8b/</guid><description>PHP的插件分为两种:PHP extensions 和Zend Extensions.其中PHP extensions 被当作modules，而Zend extensions被当作extensions.这两个的主要差异在于Engine中注册了不同的钩子。（当然在插件代码编写和使用的配置文件中也存在一定差异，这是后话）
环境搭建 首先需要搭建基础的php环境，我采用Fedora自带的库，然后下载系统对应的rpm源码包编译后使用，这样就可以保证和系统自带版本一致。
yundownload &amp;ndash;source php rpm -ivh php-*.src.rpm Cd ~/rpmbuild/SPEC/ rpmbuild -ba php.spec
这样就有了php的源码环境。
代码编写 开发PHP插件可以使用源码中的ext_skel快速的生成框架代码，只需要简单的修改框架代码就可以生成一个可用的PHP插件。 最简单的使用模式就是 Php_src/ext/ext_skel &amp;ndash;extname=module 执行后生成了由你制定的module关联的几个文件，module.c和php_module.h,以及config.m4工程配置文件 对应的修改这几个文件就可以了。 如果是要开发zend_extension则记得添加如下内容
/* This is a Zend extension */ #ifndef ZEND_EXT_API #define ZEND_EXT_API ZEND_DLEXPORT #endif ZEND_EXTENSION(); ZEND_DLEXPORT zend_extension zend_extension_entry = {
编译测试 编译测试： 执行phpize生成configure文件 然后执行./configure和make 将module目录下的so文件拷贝到你要的目录，然后配置一个php配置文件 添加extension=path/module_name.so,如果是zend extensions，则是 Zend_extension=path/module_name.so 这样，就可以开始你的调试之旅了。</description></item><item><title>Fedora20上安装wps</title><link>/posts/fedora20%e4%b8%8a%e5%ae%89%e8%a3%85wps/</link><pubDate>Sat, 28 Dec 2013 08:26:49 +0000</pubDate><guid>/posts/fedora20%e4%b8%8a%e5%ae%89%e8%a3%85wps/</guid><description>日常使用难免需要用到处理文档，以下介绍如何在feodra20类似的系统上安装wps
下载最新版本的wps linux版本 可以从http://community.wps.cn/download/中下载。 例如wget http://wdl1.cache.wps.cn/wps/download/Linux/unstable/kingsoft-office-9.1.0.4244-0.1.a12p3.i686.rpm 3. 使用yum安装该rpm包（当然可以不下载，直接使用网络地址安装） sudo yum install kingsoft-office-9.1.0.4244-0.1.a12p3.i686.rpm 4.下载font文件，可以使用http://pan.baidu.com/share/link?shareid=3371036765&amp;amp;uk=505215462 rpm2cpio ../symbol-fonts-1.2-1.noarch.rpm |cpio -dium sudo cp -r usr/share/fonts/symbol-fonts/ /usr/share/fonts/ （详情参见http://linuxsec.net/?p=78） 可以了，开始使用吧。</description></item><item><title>Fedora20启用wayland</title><link>/posts/fedora20_enable_wayland/</link><pubDate>Sat, 30 Nov 2013 10:10:00 +0000</pubDate><guid>/posts/fedora20_enable_wayland/</guid><description>wayland开发正如火如荼，不久的将来就会代替现在的x，好奇就再f20上实验了以下，方法如下：更新xorg-x11-server,xorg-x11-drv-intel 和mutter-wayland然后有2中方法启用：1、在一个虚拟终端执行“mutter-wayland &amp;ndash;wayland&amp;quot;2、切换到控制台，登陆有执行,gnome-session &amp;ndash;session=gnome-wayland现在当然还有一些bug，而且只支持intel的显卡？毕竟还没有开发完成。。。</description></item><item><title>[zz]wayland and fedora</title><link>/posts/zzwayland_and_fedora/</link><pubDate>Thu, 28 Nov 2013 12:16:00 +0000</pubDate><guid>/posts/zzwayland_and_fedora/</guid><description>Wayland and Fedora Matthias Clasen Wed Mar 20 12:29:28 UTC 2013 Previous message:rawhide report: 20130320 changesNext message:Wayland and FedoraMessages sorted by: [ date ] [ thread ] [ subject ] [ author ]</description></item><item><title>[zz]Red Hat正与Intel紧密协作，力争在Fedora 21中默认加入Wayland</title><link>/posts/zz_red_hat_are_working_in_close_collaboration_with_intel_and_strive_to_default_in_fedora_21_added_wayland/</link><pubDate>Fri, 15 Nov 2013 05:55:00 +0000</pubDate><guid>/posts/zz_red_hat_are_working_in_close_collaboration_with_intel_and_strive_to_default_in_fedora_21_added_wayland/</guid><description>Red Hat正与Intel紧密协作，力争在Fedora 21中默认加入Wayland2013-9-22 12:45| 发布者: linux| 查看数: 190| 评论数: 3|赞0摘要: 为了使Wayland支持GNOME，Red Hat与Intel的开发者紧密合作，希望能为Wayland加入Fedora21做好及时准备。 Ubuntu曾企图征服FOSS（Free and Open Source Software自由和开源软件）世界的秘密计划被Intel的一纸声明挫败 &amp;hellip;为了使Wayland支持GNOME，Red Hat与Intel的开发者紧密合作，希望能为Wayland加入Fedora21做好及时准备。Ubuntu曾企图征服FOSS（Free and Open Source Software自由和开源软件）世界的秘密计划被Intel的一纸声明挫败，至少到现在为止，Ubuntu仍未能翻身。但如今，Intel开发者的真正计划也被揭露了。抛开那些戏剧化的剧情，实际上Intel为Wayland的未来投入巨资已不是秘密，Intel的开发者们正加紧与Red Hat的合作，争取将GNOME Shell变为一个&amp;quot;码农&amp;quot;（译注，意指GNOME Shell只完成表层的外围工作）。来自Red Hat的Christian Schaller在他的个人博客中写道：“我们在Red Hat的团队一直在和我们的同行Intel紧密协作，合并并稳固相关的补丁包，保证Wayland能够支持GNOME，同时查看堆栈中还有哪些地方需要进一步改进。”看起来这个小组当前的目标是为Fedora 20准备一个足够的技术预览版本，至少目前是这样。这不是一个正式项目，但至少应该会给人们一个值得期待的idea。Ubuntu13.10预定于10月份发布，在这个特殊的时间点上，Canonical是否会急切的使出全力力推Mir，目前还并不明朗。Schaller在他的博客中还写道，“因此，一旦确信用户不会感到负面影响，我们才会最终用Wayland替代X服务器。所以，在Fedora 21中默认采用Wayland还是X服务器，这仍然是一个悬而未决的问题。”这场显示服务端之间的“战争”即将决出一个赢家，那就是终端用户。为了提供更好的用户体验，决战双方，Intel和Canonical都更加充满斗志。无论谁胜谁负，最终受益的都将是我们这些用户。 via:http://news.softpedia.com/news/Red-Hat-and-Intel-Working-Closely-to-Bring-Wayland-as-Default-for-Fedora-21-383119.shtml</description></item><item><title>[zz]Fedora 18 安装fcitx</title><link>/posts/zz_fedora_18_install_fcitx/</link><pubDate>Wed, 06 Nov 2013 16:16:00 +0000</pubDate><guid>/posts/zz_fedora_18_install_fcitx/</guid><description>之前配置过fcitx,后来系统升级下就无法使用了，一直看不到输入选词框。后来就采用ibus了。看到了下面的文章，有空再配下。用ibus用了一段时间后苦于对其输入准确性的蛋疼换了fcitx，感觉fcitx-cloudpinyin + fcitx-sunpinyin+搜狗词库的体验要比ibus好很多了。下面给上安装方法。1、卸载ibus相关组件感觉这个没啥好说的，命令类似yum remove ibus*啥的自己看着搞，注意别误卸载一些其他重要软件就好2、安装 fcitx fcitx-sunpinyin fcitx-cloudpinyinsudo yum -y install fcitx fcitx-sunpinyin fcitx-cloudpinyin fcitx-config这里安装config是为了配置方便，既然已经决定在图形下了，也没必要非得去用vim修改配置文件这种方法对吧，虽然vim修改起来定制性更多，但是感觉config提供的功能已经足够了3、在自己的.bashrc文件里添加fcitx相关条目，同时在gnome里给fcitx添加开机启动.bashrc里的内容如下:export XMODIFIERS=@im=fcitxexport QT_IM_MODULE=ximexport GTK_IM_MODULE=xim然后alt+f2 输入gnome-session-properties，添加一个启动条目，名称命令都是fcitx4、注销或者重启后应该就ok了。</description></item><item><title>[zz]fedora18升级到fedora19</title><link>/posts/zz_fedora18_upgraded_to_fedora19/</link><pubDate>Wed, 06 Nov 2013 16:08:00 +0000</pubDate><guid>/posts/zz_fedora18_upgraded_to_fedora19/</guid><description>升级fedora 18到fedora 19猫终于发布了，之前看过gnome 3.8的介绍视频，感觉比3.6比起来要好太多了，所以很期待，全新安装也太麻烦，所以准备升级安装。fedora提供有升级工具fedup，升级起来还是比较方便的。下面结合官方文档和自己升级的经验说说升级流程。1、准备工作首先把系统彻底的更新一遍sudo yum -y upgrade安装fedupsudo yum -y install fedup2、开始升级这里要分两部，首先下载更新需要的包，有三个途径可以选择，网络，本地镜像，或者做好的启动光、U盘，这里我用网络更新，这也是官方推荐的更新方式，因为这样可以直接更新到目前最新的包sudo fedup &amp;ndash;network 19下载完毕后会提示你结果，正常的话就会提示你让你重启reboot接下来就比较漫长了，一切都不用管，以为内fedup会在你的grub.cfg里添加一个入口，不管你之前默认的是那个，只要你不在reboot前更新你的grub.cfg，那就可以放手喝杯茶静静的等了，开始升级的时候就是一个fedora蓝水滴呼吸闪烁下方一个进度条，进度条滚完再等一会，然后可能会重启，之后就能进入fedora 19了。但是这里要注意的是，如果你装了闭源驱动的话，我是nvidia的闭源驱动，在进度条滚完后可能会卡死，这里没什么，等一会，没反映强制关机就好了，关机时候不会听到硬盘急停的声音，说明进度条滚完确实要重启的，只不过我们因为驱动被卡在重启那里不动了。。不过要记得重启后赶快重装驱动，省得一些不比要的麻烦。3、清理工作这里比较恶心的就是fedup可能在更新完后不能正确清理，只能手动来清理了sudo fedup &amp;ndash;resetbootloadersudo fedup &amp;ndash;clean这样grub.cfg和升级后的一些临时文件就能清理掉一些，接着sudo yum clean allsudo yum distro-sync来把包都更成最新的，然后要清理fedora 18的残留内核，因为是版本升级，所以18的内核就都没用了，都要清掉，命令如下:sudo package-cleanup &amp;ndash;oldkernels &amp;ndash;count 1成功后升级你的配置文件，如果不失败，估计是你装得什么东西还对内核有依赖，yum删掉后再清除内核，然后更新grub2配置文件sudo grub2-mkconfig -o /boot/grub2/grub.cfg更新你的grub2配置文件,重启reboot如果发现grub2变得很丑的话，进入系统后sudo yum -y reinstall gurb2*sudo grub2-mkconfig -o /boot/grub2/grub/cfg这样就能解决问题然后再更新一边你的配置文件sudo grub2-mkconfig -o /boot/grub2/grub/cfg重启看看，是不是一切都回到原样了～哈哈到这里升级就搞定了。值得说的是gnome 3.8里面im-chooser依然是不能用的。我是升级安装，不知到这个玩意在19的liveCD里还有没有。但是顶部状态栏现在即使只有一个输入源的情况下依然显示输入法图标，为输入和设置添加不少方便。启动器可以通过dconf-tool来自己创建app folder，不过名字却要是那几个给定的名字，我只能一个个的试，现在可用的有DeveloperTools,Office,Accessories,总之和win Eng里的名字都差不多，自己慢慢去搞吧，这里就说这么多了，和猫玩去咯～</description></item><item><title>[zz]Fedora 18的变化</title><link>/posts/zz_changes_in_fedora_18/</link><pubDate>Thu, 19 Sep 2013 15:39:00 +0000</pubDate><guid>/posts/zz_changes_in_fedora_18/</guid><description>fedora每次发布新版本都会发生巨变，本次变化&amp;ndash;/etc/sysconfig 已停止使用/etc/sysconfig/clock 由 /etc/localtime 代替/etc/sysconfig/i18n 已由 /etc/locale.conf 代替/etc/sysconfig/keyboard 变为 /etc/vconsole.conf主机名配置由 /etc/sysconfig/network 移至 /etc/hostnameFedora 18 支持 UEFI 安全引导。即在启用了安全引导的计算机上能够引导 Fedora.有工具可让管理员创建自定义证书，以签署本地环境下对 GRUB 和内核的修改。通过默认启用 rngd 改善了随机数生成。使用 SELinux 和 virt-sandbox 后，服务可在安全沙盒中运行，即使是 root 用户也是如此。virt-sandbox-service 软件包将创建挂载点和 libvirt 容器。现在有了 libseccomp 库，提供给应用程序一个简单的方式来减少误用内核 kernel syscall 过滤器带来的伤害。得益于此，虚拟机软件比如 QEMU/KVM 已经开始使用 libseccomp 了。usermode,一个为无特权用户提供特权访问的封装器，已经被更好的 polkit 所取代。Fedora 18 将 Kerberos 证书缓存的标准位置变更到 /run/user/$UID 来增强安全性并简化用于 NFSv4 的缓存的定位。Fedora 的 Kerberos 支持将允许用户维护适用于多个身份的证书，且允许GSSAPI 客户端代码可以依据目标服务和主机名自动选择证书。无特权用户能否使用 halt（8）， poweroff（8） 和 reboot（8） 命令现在由 polkit 控制。参看 /usr/share/polkit-1/actions/org.freedesktop.login1.policy 中的行为描述。将不再使用放置在 /etc/pam.d/{halt,poweroff,reboot} 中的 PAM 配置文件。里面的内容，如果有的话，也将被忽略。Fedora 18 新增 FedFS,该程序用来为多个文件服务器提供一致的命名空间。/tmp 默认会位于 tempfs.</description></item><item><title>Fedora19上安装rdo-openstack-havana</title><link>/posts/fedora19_install_rdo-openstack-havana/</link><pubDate>Tue, 10 Sep 2013 12:19:00 +0000</pubDate><guid>/posts/fedora19_install_rdo-openstack-havana/</guid><description>最小化安装fedora19,只使用fedora源，把update和update-testing关掉。更新系统（好像也没有必要）后按照文档进行安装。我安装了havana版本安装后再更新解决horizon报错问题。详情见：https://bugzilla.redhat.com/show_bug.cgi?id=1000391这样系统就可以使用了floating ip好像还有点问题，等解决了再更新。</description></item><item><title>fedora19中使用wps：No necessary symbol fonts</title><link>/posts/fedora19_use_the_wps_no_necessary_symbol_fonts/</link><pubDate>Wed, 21 Aug 2013 08:15:00 +0000</pubDate><guid>/posts/fedora19_use_the_wps_no_necessary_symbol_fonts/</guid><description>1下载如下内容文件名： symbol-fonts-1.2-1.noarch.rpmbox网盘下载链接： https://app.box.com/s/wmsdpn8x9qpcbcnekke1金山快盘下载链接： http://www.kuaipan.cn/file/id_19418406138675465.htm百度网盘下载链接： http://pan.baidu.com/share/link?shareid=3371036765&amp;amp;uk=505215462文件大小： 246 KB (252,171 字节)md5码： 4a7649c69e15983a6e69c31f38f64c62sha1码： 9d00e765169bba5f1351cf7f21a15ae3e26dcb082、把rpm包里面的文件解到mkdir /usr/share/fonts/symbol-fonts目录rpm2cpio ~/下载/symbol-fonts-1.2-1.noarch.rpm |cpio -idum然后执行fc-cache -fv再打开wps就没有问题了。参考地址：http://community.wps.cn/wiki/No_necessary_symbol_fontshttp://bbs.wps.cn/thread-22355435-1-1.html</description></item><item><title>fedora19系统t430s使用小红帽</title><link>/posts/fedora19_system_t430s_use_little_red_riding_hood/</link><pubDate>Tue, 20 Aug 2013 15:19:00 +0000</pubDate><guid>/posts/fedora19_system_t430s_use_little_red_riding_hood/</guid><description>执行以下命令，或者放入开机启动的脚本中即可：set -euid=$(xinput list | sed -n &amp;lsquo;/TPPS/2 IBM TrackPoint/s/.*id=([0-9]+).*/1/p&amp;rsquo;)emu=$(xinput list-props &amp;ldquo;$id&amp;rdquo; | sed -n &amp;lsquo;/Evdev Wheel Emulation (/s/.*(([0-9]+)).*/1/p&amp;rsquo;)but=$(xinput list-props &amp;ldquo;$id&amp;rdquo; | sed -n &amp;lsquo;/Evdev Wheel Emulation Button (/s/.*(([0-9]+)).*/1/p&amp;rsquo;)axs=$(xinput list-props &amp;ldquo;$id&amp;rdquo; | sed -n &amp;lsquo;/Evdev Wheel Emulation Axes (/s/.*(([0-9]+)).*/1/p&amp;rsquo;)xinput set-int-prop &amp;ldquo;$id&amp;rdquo; &amp;ldquo;$emu&amp;rdquo; 8 1xinput set-int-prop &amp;ldquo;$id&amp;rdquo; &amp;ldquo;$but&amp;rdquo; 8 2不同的型号可能值不同，可以通过工具gpointing-device-settings设置。</description></item><item><title>rhel6.4/Fedora18/19上kerberos安装实验</title><link>/posts/kerberos_install_experimental_rhel64fedora1819/</link><pubDate>Wed, 31 Jul 2013 06:05:00 +0000</pubDate><guid>/posts/kerberos_install_experimental_rhel64fedora1819/</guid><description>在rhel6.4上安装kerberos实验，理解kerberos原理。安装步骤如下：安装krb，yum install krb5-*修改hosts文件：添加ip kerberos.example.com kerberos主要是修改主机名，修改host是为了找到地址在fedora18/19等系统还需要修改/etc/hostname，添加主机名：kerberos.example.com在rhel的系统中在 /etc/sysconfig/network文件中如果以上修改有误，可能会提示默认的krb配置基本就可以使用了，krb初始化kdb5_util create -r EXAMPLE.COM -s启动服务service krb5kdc start安装完毕，可以使用你的Krb服务了。测试方法：创建一个sample的principal，用来给服务程序使用kadmin.local:addprinc sample/kerberos.example.com@EXAMPLE.COMkadmin.local:ktadd -k /etc/krb5.keytab sample/kerberos.example.com@EXAMPLE.COM创建一个用户的principalkadmin.local:addprinc test1/kerberos.example.com@EXAMPLE.COM运行测试服务程序：sserver -p 8899 -s sample登录系统，执行kinit获取principal:kinit test1/kerberos.example.comklist查看相关内容sclient kerberos.example.com 8899 sample返回success，说明配置正确。其他测试程序1、sim_serversim_server -p 8888 -s samplesim_client -p 8888 -h kerberos.example.com -m hello2、uuserver修改/etc/services添加uu-sample 8888/tcp #uu-sample添加一个新的pricipal,使用该principal登录，然后执行uuserver用另外一个principal登录，然后执行uuclient kerberos.example.com message</description></item><item><title>install vmware 9.0.2 on fedora 19</title><link>/posts/install_vmware_902_on_fedora_19/</link><pubDate>Tue, 30 Jul 2013 13:20:00 +0000</pubDate><guid>/posts/install_vmware_902_on_fedora_19/</guid><description>不能用，需要修改vmware的驱动，在http://forums.fedoraforum.org/showthread.php?t=292907找到了解决办法，内容如下。Re: vmware player 5.0.2 onf fc19 (3.10.3-300.fc19.x86_64) - who got it running?I have 5.0.2 running. To get it running at all, I first had to do a tweak to the /usr/bin/vmplayer file to allow VMPlayer to run in Fedora 19.1. Open /usr/bin/vmplayer in nano or other text editor of your choice, using sudo or su.2. Look for the lines that read as follows:Code:3. Add the following after the above lines:Code:4. Save the file.</description></item><item><title>fedora-Rawhide</title><link>/posts/fedora-rawhide/</link><pubDate>Tue, 18 Dec 2012 06:17:00 +0000</pubDate><guid>/posts/fedora-rawhide/</guid><description>Rawhide is the name given to the current development head of Fedora. It consists of a package repository called &amp;ldquo;rawhide&amp;rdquo; and contains the latest build of all Fedora packages updated on a daily basis. Nightly builds are also available during the early portion of the Fedora Release Life Cycle.Rawhide is the name given to the current development head of Fedora. It consists of a package repository called &amp;ldquo;rawhide&amp;rdquo; and contains the latest build of all Fedora packages updated on a daily basis.</description></item><item><title>fedora18试用</title><link>/posts/fedora18_trial/</link><pubDate>Mon, 19 Nov 2012 15:01:00 +0000</pubDate><guid>/posts/fedora18_trial/</guid><description>fedora18马上就要beta了，今天试用了一下alpha，果然bug多啊</description></item><item><title>fedora18-new features-syscall filters</title><link>/posts/fedora18-new_features-syscall_filters/</link><pubDate>Fri, 16 Nov 2012 06:29:00 +0000</pubDate><guid>/posts/fedora18-new_features-syscall_filters/</guid><description>看fedora18的新特性列表，发现了syscall filters功能，感觉挺有意思，然后用空尝试一下。Syscall FiltersSummarySyscall filtering is a security mechanism that allows applications to define which syscalls they should be allowed to execute.OwnerName: Cole RobinsonEmail: crobinso@redhat.comName: Paul MooreEmail: pmoore@redhat.comCurrent statusTargeted release: Fedora 18Last updated: August 16, 2012Percentage of completion: 100%Detailed DescriptionThe syscall filtering concept, and the motivation behind it, is fairly simple; the Linux Kernel supports a very large number of system calls (syscalls), over 300 on x86_64 for the 64 bit implementations alone, with applications typically requiring only a very small subset of these syscalls to function normally.</description></item></channel></rss>