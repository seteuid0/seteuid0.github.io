<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>openvswitch on seteuid0's blog</title><link>/tags/openvswitch/</link><description>Recent content in openvswitch on seteuid0's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>This is a customized copyright.</copyright><lastBuildDate>Wed, 07 Dec 2016 16:16:21 +0000</lastBuildDate><atom:link href="/tags/openvswitch/index.xml" rel="self" type="application/rss+xml"/><item><title>[ZZ]openvswitch学习笔记</title><link>/posts/zzopenvswitch%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0/</link><pubDate>Wed, 07 Dec 2016 16:16:21 +0000</pubDate><guid>/posts/zzopenvswitch%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0/</guid><description>场景： 创建一个Virtual Switch,支持VLAN，支持MAC-Learning 包含下面四个Port：
P1, truck port P2, VLAN 20 P3, P4 VLAN 30 包含五个flow table:``` Table 0: Admission control.
Table 1: VLAN input processing. Table 2: Learn source MAC and VLAN for ingress port. Table 3: Look up learned port for destination MAC and VLAN. Table 4: Output processing 首先创建一个bridge sudo ovs-vsctl add-br helloworld -- set bridge helloworld fail-mode=secure 然后我们查看这个bridge $ sudo ovs-vsctl show c24322e6-8453-402a-afaf-64757ef231e9 Bridge helloworld fail\_mode: secure Port helloworld Interface helloworld type: internal ovs\_version: &amp;quot;2.</description></item><item><title>[转]基于 Open vSwitch 的 OpenFlow 实践</title><link>/posts/%e8%bd%ac%e5%9f%ba%e4%ba%8e-open-vswitch-%e7%9a%84-openflow-%e5%ae%9e%e8%b7%b5-2/</link><pubDate>Tue, 06 Dec 2016 12:41:29 +0000</pubDate><guid>/posts/%e8%bd%ac%e5%9f%ba%e4%ba%8e-open-vswitch-%e7%9a%84-openflow-%e5%ae%9e%e8%b7%b5-2/</guid><description>Open vSwitch 概述 Open vSwitch（下面简称为 OVS）是由 Nicira Networks 主导的，运行在虚拟化平台（例如 KVM，Xen）上的虚拟交换机。在虚拟化平台上，OVS 可以为动态变化的端点提供 2 层交换功能，很好的控制虚拟网络中的访问策略、网络隔离、流量监控等等。 OVS 遵循 Apache 2.0 许可证, 能同时支持多种标准的管理接口和协议。OVS 也提供了对 OpenFlow 协议的支持，用户可以使用任何支持 OpenFlow 协议的控制器对 OVS 进行远程管理控制。
Open vSwitch 概述 在 OVS 中, 有几个非常重要的概念：
Bridge: Bridge 代表一个以太网交换机（Switch），一个主机中可以创建一个或者多个 Bridge 设备。 Port: 端口与物理交换机的端口概念类似，每个 Port 都隶属于一个 Bridge。 Interface: 连接到 Port 的网络接口设备。在通常情况下，Port 和 Interface 是一对一的关系, 只有在配置 Port 为 bond 模式后，Port 和 Interface 是一对多的关系。 Controller: OpenFlow 控制器。OVS 可以同时接受一个或者多个 OpenFlow 控制器的管理。 datapath: 在 OVS 中，datapath 负责执行数据交换，也就是把从接收端口收到的数据包在流表中进行匹配，并执行匹配到的动作。 Flow table: 每个 datapath 都和一个“flow table”关联，当 datapath 接收到数据之后， OVS 会在 flow table 中查找可以匹配的 flow，执行对应的操作, 例如转发数据到另外的端口。 Open vSwitch 实验环境配置 OVS 可以安装在主流的 Linux 操作系统中，用户可以选择直接安装编译好的软件包，或者下载源码进行编译安装。 在我们的实验环境中，使用的操作系统是 64 位 Ubuntu Server 12.</description></item><item><title>[转]基于 Open vSwitch 的 OpenFlow 实践</title><link>/posts/%e8%bd%ac%e5%9f%ba%e4%ba%8e-open-vswitch-%e7%9a%84-openflow-%e5%ae%9e%e8%b7%b5/</link><pubDate>Tue, 06 Dec 2016 08:22:52 +0000</pubDate><guid>/posts/%e8%bd%ac%e5%9f%ba%e4%ba%8e-open-vswitch-%e7%9a%84-openflow-%e5%ae%9e%e8%b7%b5/</guid><description>Open vSwitch 概述 Open vSwitch（下面简称为 OVS）是由 Nicira Networks 主导的，运行在虚拟化平台（例如 KVM，Xen）上的虚拟交换机。在虚拟化平台上，OVS 可以为动态变化的端点提供 2 层交换功能，很好的控制虚拟网络中的访问策略、网络隔离、流量监控等等。 OVS 遵循 Apache 2.0 许可证, 能同时支持多种标准的管理接口和协议。OVS 也提供了对 OpenFlow 协议的支持，用户可以使用任何支持 OpenFlow 协议的控制器对 OVS 进行远程管理控制。
Open vSwitch 概述 在 OVS 中, 有几个非常重要的概念：
Bridge: Bridge 代表一个以太网交换机（Switch），一个主机中可以创建一个或者多个 Bridge 设备。 Port: 端口与物理交换机的端口概念类似，每个 Port 都隶属于一个 Bridge。 Interface: 连接到 Port 的网络接口设备。在通常情况下，Port 和 Interface 是一对一的关系, 只有在配置 Port 为 bond 模式后，Port 和 Interface 是一对多的关系。 Controller: OpenFlow 控制器。OVS 可以同时接受一个或者多个 OpenFlow 控制器的管理。 datapath: 在 OVS 中，datapath 负责执行数据交换，也就是把从接收端口收到的数据包在流表中进行匹配，并执行匹配到的动作。 Flow table: 每个 datapath 都和一个“flow table”关联，当 datapath 接收到数据之后， OVS 会在 flow table 中查找可以匹配的 flow，执行对应的操作, 例如转发数据到另外的端口。 Open vSwitch 实验环境配置 OVS 可以安装在主流的 Linux 操作系统中，用户可以选择直接安装编译好的软件包，或者下载源码进行编译安装。 在我们的实验环境中，使用的操作系统是 64 位 Ubuntu Server 12.</description></item></channel></rss>