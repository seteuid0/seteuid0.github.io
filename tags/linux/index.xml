<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on seteuid0's blog</title><link>/tags/linux/</link><description>Recent content in linux on seteuid0's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This is a customized copyright.</copyright><lastBuildDate>Mon, 29 Jul 2013 17:13:00 +0000</lastBuildDate><atom:link href="/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>[zz]RHEL 5/6 差异：时间处理机制</title><link>/posts/zz_rhel_56_difference_time_handling_mechanism/</link><pubDate>Mon, 29 Jul 2013 17:13:00 +0000</pubDate><guid>/posts/zz_rhel_56_difference_time_handling_mechanism/</guid><description>when you use different linux system,you will find the time&amp;rsquo;s different between the systems,here is the reason.RHEL 5/6 差异：时间处理机制06.29.2012, 系统服务 , by Roger.RHEL 5/6 差异：时间处理机制作者：Roger简介本文介绍了在 RHEL5 和 RHEL 6 两个版本系统中，对待时间的差异。目的在于帮助我们了解系统，应对OS升级的改动。概述RHEL 5/6 时间机制差异类别RHEL 5RHEL 6建议Anaconda 参数timezone &amp;ndash;utc修改/etc/sysconfig/clock修改/etc/adjtime对用户透明，不用调整开机初始化脚本，硬件时钟到系统时钟/etc/rc.d/rc.sysinit传参调用hwclock内核直接读取rtc_cmos获取时间/etc/sysconfig/clock需要区分关机脚本，系统时钟到硬件时钟/etc/rc.d/init.d/halt传参数调用hwclock/etc/rc.d/init.d/halt直接调用hwclock/etc/sysconfig/clock需要区分NTP软件包一个包：ntp-4.2.2p1-9.el5_3.2三个包：ntp-4.2.4p8-2.el6.centos.i686ntp-perl-4.2.4p8-2.el6.centos.i686ntpdate-4.2.4p8-2.el6.centos.i686RHEL 6 把 RHEL 5 一个包拆成了三个RHEL 6 建议三个包都安装ntpd启动脚本一个脚本：/etc/rc.d/init.d/ntpd两个脚本：/etc/rc.d/init.d/ntpd/etc/rc.d/init.d/ntpdateRHEL 6 中添加了ntpdate启动脚本，相当于额外多了一个服务，需要注意RHEL 5 与 RHEL 6 中，时间这块，外围软件包改动并不大，例如hwclock，NTP。改动比较大的是：Anaconda安装系统时，timezone &amp;ndash;utc的处理方式。开机读取硬件时钟的机制。关机写入硬件时钟的机制。linux 时间存储 原理分析首先需要了解的概念：硬件时钟系统时钟其次，BIOS里硬件时钟存的仅是一个UNIX时间戳。这个时间戳，有UTC时钟和LOCAL时钟两钟存法。UTC时间LOCAL时间（本地时间）注意点：我们所说的system clock use UTC (timezone &amp;ndash;utc) 实际上就是指BIOS里的时钟存法。与系统的“时区”没有关系。这点不要混淆。这里举一个你常见的例子：笔记本双系统，win+linux，如果linux使用了UTC时间，那么两个系统就会差8小时。原因：Unix规范里BIOS时钟存UTC时间戳，但windows改成了只支持存LOCAL时间戳（就是你墙上的时间），而linux两个格式都支持。这时，如果你linux使用了UTC时间，就会把BIOS的时间戳当作UTC时间，而你的windows把BIOS时间戳当作LOCAL时间。所以无论你怎么调，两个系统时间都不会一致。hwclock说到linux下的时钟，一定不能忽略hwclock，硬件时钟和系统时钟的互写就全靠它了。后续我们详解hwclock的工作机制。推荐看 man clock。开机对时钟的处理我们电脑关机状态时，硬件上的晶振会持续保存一个时间，这个时间就是硬件时钟。进入BIOS便可以看到。开机后，系统将硬件时钟读入系统，然后开始维持时间的增长。硬件时钟仅开机读取一次，由于进入了OS，我们有很多途径让时钟更准确，比如NTP等，这时的硬件时钟对我们是没有用的。关机对时钟的处理要关机了，系统会把时间写入硬件时钟，相当于更新硬件时钟。RHEL 5/6 都是/etc/rc.d/init.d/halt调用hwclock来写入硬件时钟，细节上略有不同，但都是做一样的事情。hwclockRHEL 5/6 中hwclock机制并没有变化：这里需要注意的是：hwclock维护一个文件，/etc/adjtime，用来确定硬件时钟是UTC还是LOCAL。hwclock原理分析：我们直接执行hwclock，就是读取硬件时钟。01[root@centos6 install]# strace -e trace=open hwclock02open(&amp;quot;/etc/ld.so.cache&amp;quot;, O_RDONLY) = 303open(&amp;quot;/lib/libaudit.</description></item></channel></rss>