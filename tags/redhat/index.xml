<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>redhat on seteuid0's blog</title><link>/tags/redhat/</link><description>Recent content in redhat on seteuid0's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>This is a customized copyright.</copyright><lastBuildDate>Thu, 27 Feb 2014 09:00:20 +0000</lastBuildDate><atom:link href="/tags/redhat/index.xml" rel="self" type="application/rss+xml"/><item><title>cvechecker实现原理分析</title><link>/posts/cvechecker%e5%ae%9e%e7%8e%b0%e5%88%86%e6%9e%90/</link><pubDate>Thu, 27 Feb 2014 09:00:20 +0000</pubDate><guid>/posts/cvechecker%e5%ae%9e%e7%8e%b0%e5%88%86%e6%9e%90/</guid><description>cvechecker是由Sven Vermeulen编写的可以用来扫描检查系统软件cve情况的软件，在SF上的下载量非常高。自己在fedora上使用了下，对比yum的信息发现存在比较严重的漏报和误报，抽空分析了下其实现方式，总结如下 。 使用过cvechecker的用户都会猜测使用的是nist的cve(Common Vulnerabilities and Exposures)[1]信息获取软件的cve列表，但是怎么和系统上的软件联系在一起呢？ 各个发行版都有自己的软件包管理系统，如redhat系列的rpm、yum。redhat、fedora负责维护rhel和fedora上各个软件包的cve信息，当执行软件包升级时，使用新的软件包替换存在cve的软件包。基于deb包的ubuntu和debian类似。因此，在特定的发行版中，只需要通过包管理器便可知道软件包的版本号，再辅以发行版提供的漏洞信息或者直接使用类似yum update的方式升级便可知道当前版本的CVE信息。 cvechecker是怎么做的呢？Sven没有依赖于包版本管理器，而是直接通过查找软件包的版本号，然后构造CPE（Common Platform Enumeration）[2]信息，通过在cve数据库中查找给CPE信息来提取CVE信息。 每个软件包都包含了众多的软件，如ls和cat都属于coreutils,那么如何从系统软件列表差找到软件包列表及版本号便是Sven方法的关键所在。通过查看代码发现，Sven自己维护了一个软件包和各个命令的映射关系表。（https://raw.github.com/sjvermeu/cvechecker/master/versions.dat）内容类似与：
,perlivp,1,perlivp$,# perlivp v([0-9][0-9]*(\.[0-9]+)+),a,perl,perl,\1,,, ,libvorbis.so,1,libvorbis.so.*,Xiph.Org libVorbis ([0-9][0-9]*(\.[0-9]+)+),a,xiph,libvorbis,\1,,,
看过cvechecker帮助文档的用户都知道，用户自己也可以定义添加这种映射表，而默认的映射表是由Sven自己维护的，默认只有650条，因此这里就是漏报的一处主要原因。 这个隐射表解决了从命令到软件包的映射，但怎么获取软件包的版本号呢？继续看代码：
/** * Here is where the various version extraction methods are supported. * We currently still only support a single method (1, which is the * &amp;ldquo;strings -n 3 &amp;rdquo; command execution) but now we can see if we can * support additional methods as well. */ if (filetype == 1) { char buffer[BUFFERSIZE]; int ret; zero_string(buffer, BUFFERSIZE); ret = strings_extract_version(ws, &amp;amp;preg, pmatch, &amp;amp;cpe_data); if (ret == 0) { add_to_sqlite_database(ws, cpe_data); cpe_to_string(buffer, BUFFERSIZE, cpe_data); fprintf(stdout, &amp;quot; - Found match for %s/%s:\t%s\n&amp;quot;, ws-&amp;gt;currentdir, ws-&amp;gt;currentfile, buffer); }; } else { fprintf(stderr, &amp;quot; !</description></item><item><title>[zz]redhat/centos 6.3 搭建git/gitosis/gitweb详细过程</title><link>/posts/zzredhatcentos-6-3-%e6%90%ad%e5%bb%bagitgitosisgitweb%e8%af%a6%e7%bb%86%e8%bf%87%e7%a8%8b/</link><pubDate>Thu, 13 Feb 2014 00:53:51 +0000</pubDate><guid>/posts/zzredhatcentos-6-3-%e6%90%ad%e5%bb%bagitgitosisgitweb%e8%af%a6%e7%bb%86%e8%bf%87%e7%a8%8b/</guid><description>1. gitweb安装
 注意：redhat的iso源是没有gitweb安装包，但是centos的源中有，在上一篇文章中给出了如何让redhat使用centos的源，那么，只需采用如下命令即可安装。
# yum install gitweb 2. gitweb配置
 gitweb默认安装到了/var/www/git下，其配置文件在/etc/gitweb.conf下，另外，httpd的配置文件/etc/httpd/conf.d/git.conf。
（1）修改/etc/gitweb.conf
$projectroot = &amp;ldquo;/var/www/git&amp;rdquo; //将projectroot修改为/var/www/git (2)修改/etc/httpd/conf.d/git.conf
Alias /git /var/www/git &amp;lt;Directory /var/www/git&amp;gt; Allow from all AllowOverride all Order allow,deny Options +ExecCGI AddHandler cgi-script .cgi DirectoryIndex gitweb.cgi SetEnv GITWEB_CONFIG /etc/gitweb.conf Dav On RewriteEngine Off （3）重启httpd
/etc/init.d/httpd restart （4）将gitosis仓库连接到/var/www/git下，完成web显示
ln -s /home/git/repositories/test_repo.git /var/www/git/ (5)通过浏览器浏览
http://xxxx/git/
注意： 如果git clone http://xxx/git/test_repo.git时出现git update-server-info错误，则在test_repos.</description></item><item><title>[zz]Red Hat正与Intel紧密协作，力争在Fedora 21中默认加入Wayland</title><link>/posts/zz_red_hat_are_working_in_close_collaboration_with_intel_and_strive_to_default_in_fedora_21_added_wayland/</link><pubDate>Fri, 15 Nov 2013 05:55:00 +0000</pubDate><guid>/posts/zz_red_hat_are_working_in_close_collaboration_with_intel_and_strive_to_default_in_fedora_21_added_wayland/</guid><description>Red Hat正与Intel紧密协作，力争在Fedora 21中默认加入Wayland2013-9-22 12:45| 发布者: linux| 查看数: 190| 评论数: 3|赞0摘要: 为了使Wayland支持GNOME，Red Hat与Intel的开发者紧密合作，希望能为Wayland加入Fedora21做好及时准备。 Ubuntu曾企图征服FOSS（Free and Open Source Software自由和开源软件）世界的秘密计划被Intel的一纸声明挫败 &amp;hellip;为了使Wayland支持GNOME，Red Hat与Intel的开发者紧密合作，希望能为Wayland加入Fedora21做好及时准备。Ubuntu曾企图征服FOSS（Free and Open Source Software自由和开源软件）世界的秘密计划被Intel的一纸声明挫败，至少到现在为止，Ubuntu仍未能翻身。但如今，Intel开发者的真正计划也被揭露了。抛开那些戏剧化的剧情，实际上Intel为Wayland的未来投入巨资已不是秘密，Intel的开发者们正加紧与Red Hat的合作，争取将GNOME Shell变为一个&amp;quot;码农&amp;quot;（译注，意指GNOME Shell只完成表层的外围工作）。来自Red Hat的Christian Schaller在他的个人博客中写道：“我们在Red Hat的团队一直在和我们的同行Intel紧密协作，合并并稳固相关的补丁包，保证Wayland能够支持GNOME，同时查看堆栈中还有哪些地方需要进一步改进。”看起来这个小组当前的目标是为Fedora 20准备一个足够的技术预览版本，至少目前是这样。这不是一个正式项目，但至少应该会给人们一个值得期待的idea。Ubuntu13.10预定于10月份发布，在这个特殊的时间点上，Canonical是否会急切的使出全力力推Mir，目前还并不明朗。Schaller在他的博客中还写道，“因此，一旦确信用户不会感到负面影响，我们才会最终用Wayland替代X服务器。所以，在Fedora 21中默认采用Wayland还是X服务器，这仍然是一个悬而未决的问题。”这场显示服务端之间的“战争”即将决出一个赢家，那就是终端用户。为了提供更好的用户体验，决战双方，Intel和Canonical都更加充满斗志。无论谁胜谁负，最终受益的都将是我们这些用户。 via:http://news.softpedia.com/news/Red-Hat-and-Intel-Working-Closely-to-Bring-Wayland-as-Default-for-Fedora-21-383119.shtml</description></item></channel></rss>