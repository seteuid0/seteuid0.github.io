<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dbus on seteuid0's blog</title><link>/tags/dbus/</link><description>Recent content in dbus on seteuid0's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This is a customized copyright.</copyright><lastBuildDate>Tue, 19 Nov 2013 12:37:00 +0000</lastBuildDate><atom:link href="/tags/dbus/index.xml" rel="self" type="application/rss+xml"/><item><title>dbus学习总结</title><link>/posts/dbus_learning_summary-2/</link><pubDate>Tue, 19 Nov 2013 12:37:00 +0000</pubDate><guid>/posts/dbus_learning_summary-2/</guid><description>dbus使用的人比较多，在csdn上有几个人都介绍的比较详细，跟着走一次基本就可以掌握。推介http://blog.csdn.net/flowingflying/article/details/5512222系列的。可以掌握dbus-binding相关的使用方式，比较简单。对于method通信方式中，2端的连接，核心见如下的API：12345DBUS_EXPORT DBusMessage * dbus_message_new_method_call ( const char * destination,const char * path,const char * iface,const char * method) 也就是必须要知道对方的destination (也就是bus name,object path,interface name和method。一个程序因该对应一个bus name,连接dbus-daemon的时候请求获得，一个应用可以有几个object path。interface 就是可以比较好的将method分类，方便使用。</description></item><item><title>Dbus学习总结</title><link>/posts/dbus_learning_summary/</link><pubDate>Tue, 19 Nov 2013 12:34:00 +0000</pubDate><guid>/posts/dbus_learning_summary/</guid><description>dbus使用的人比较多，在csdn上有几个人都介绍的比较详细，跟着走一次基本就可以掌握。推介http://blog.csdn.net/flowingflying/article/details/5512222系列的。可以掌握dbus-binding相关的使用方式，比较简单。对于method通信方式中，2端的连接，核心见如下的API：也就是必须要知道对方的destination (也就是bus name,object path,interface name和method。一个程序因该对应一个bus name,连接dbus-daemon的时候请求获得，一个应用可以有几个object path。interface 就是可以比较好的将method分类，方便使用。</description></item></channel></rss>