<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rockchip on seteuid0's blog</title><link>/tags/rockchip/</link><description>Recent content in rockchip on seteuid0's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>This is a customized copyright.</copyright><lastBuildDate>Sat, 02 Nov 2019 08:55:07 +0000</lastBuildDate><atom:link href="/tags/rockchip/index.xml" rel="self" type="application/rss+xml"/><item><title>Rockchip linux sdk buildroot使用记录</title><link>/posts/rockchip-linux-sdk-buildroot%e4%bd%bf%e7%94%a8%e8%ae%b0%e5%bd%95/</link><pubDate>Sat, 02 Nov 2019 08:55:07 +0000</pubDate><guid>/posts/rockchip-linux-sdk-buildroot%e4%bd%bf%e7%94%a8%e8%ae%b0%e5%bd%95/</guid><description>Rockchip Linux SDK里面的buildroot可以制作一个简洁的rootfs，但按照文档还是有一些问题，以下是使用时大致的一个记录及代码修改记录。 SDK从 http://opensource.rock-chips.com/wiki_Linux_SDK 获取。http://opensource.rock-chips.com/wiki_Source 里面有使用方法。 先要获取repogit clone https://github.com/rockchip-linux/repo mkdir linux cd linux而后同步代码，我这里使用的是RK3399的代码，由于网络原因可能会有超时发生，可以使用后面的脚本进行多次获取。``` ../repo/repo init &amp;ndash;repo-url=https://github.com/rockchip-linux/repo -u https://github.com/rockchip-linux/manifests -b master -m rk3399_linux_release.xml ../repo/repo sync
#!/bin/sh ../repo/repo sync -c while \[ $? -ne 0 \] ; do ../repo/repo sync -c; done ```代码就绪后就可以开始动手编译了。``` #cd u-boot #./make.sh evb-rk3399 $ source buildroot/build/envsetup.sh You're building on Linux Lunch menu...pick a combo: 1. rockchip\_rk3308\_release 2. rockchip\_rk3308\_debug 3. rockchip\_rk3308\_robot\_release 4. rockchip\_rk3308\_robot\_debug 5. rockchip\_rk3308\_mini\_release Which would you like?</description></item></channel></rss>