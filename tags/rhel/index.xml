<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rhel on seteuid0's blog</title><link>/tags/rhel/</link><description>Recent content in rhel on seteuid0's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This is a customized copyright.</copyright><lastBuildDate>Wed, 31 Jul 2013 06:05:00 +0000</lastBuildDate><atom:link href="/tags/rhel/index.xml" rel="self" type="application/rss+xml"/><item><title>rhel6.4/Fedora18/19上kerberos安装实验</title><link>/posts/kerberos_install_experimental_rhel64fedora1819/</link><pubDate>Wed, 31 Jul 2013 06:05:00 +0000</pubDate><guid>/posts/kerberos_install_experimental_rhel64fedora1819/</guid><description>在rhel6.4上安装kerberos实验，理解kerberos原理。安装步骤如下：安装krb，yum install krb5-*修改hosts文件：添加ip kerberos.example.com kerberos主要是修改主机名，修改host是为了找到地址在fedora18/19等系统还需要修改/etc/hostname，添加主机名：kerberos.example.com在rhel的系统中在 /etc/sysconfig/network文件中如果以上修改有误，可能会提示默认的krb配置基本就可以使用了，krb初始化kdb5_util create -r EXAMPLE.COM -s启动服务service krb5kdc start安装完毕，可以使用你的Krb服务了。测试方法：创建一个sample的principal，用来给服务程序使用kadmin.local:addprinc sample/kerberos.example.com@EXAMPLE.COMkadmin.local:ktadd -k /etc/krb5.keytab sample/kerberos.example.com@EXAMPLE.COM创建一个用户的principalkadmin.local:addprinc test1/kerberos.example.com@EXAMPLE.COM运行测试服务程序：sserver -p 8899 -s sample登录系统，执行kinit获取principal:kinit test1/kerberos.example.comklist查看相关内容sclient kerberos.example.com 8899 sample返回success，说明配置正确。其他测试程序1、sim_serversim_server -p 8888 -s samplesim_client -p 8888 -h kerberos.example.com -m hello2、uuserver修改/etc/services添加uu-sample 8888/tcp #uu-sample添加一个新的pricipal,使用该principal登录，然后执行uuserver用另外一个principal登录，然后执行uuclient kerberos.example.com message</description></item><item><title>[zz]RHEL 5/6 差异：时间处理机制</title><link>/posts/zz_rhel_56_difference_time_handling_mechanism/</link><pubDate>Mon, 29 Jul 2013 17:13:00 +0000</pubDate><guid>/posts/zz_rhel_56_difference_time_handling_mechanism/</guid><description>when you use different linux system,you will find the time&amp;rsquo;s different between the systems,here is the reason.RHEL 5/6 差异：时间处理机制06.29.2012, 系统服务 , by Roger.RHEL 5/6 差异：时间处理机制作者：Roger简介本文介绍了在 RHEL5 和 RHEL 6 两个版本系统中，对待时间的差异。目的在于帮助我们了解系统，应对OS升级的改动。概述RHEL 5/6 时间机制差异类别RHEL 5RHEL 6建议Anaconda 参数timezone &amp;ndash;utc修改/etc/sysconfig/clock修改/etc/adjtime对用户透明，不用调整开机初始化脚本，硬件时钟到系统时钟/etc/rc.d/rc.sysinit传参调用hwclock内核直接读取rtc_cmos获取时间/etc/sysconfig/clock需要区分关机脚本，系统时钟到硬件时钟/etc/rc.d/init.d/halt传参数调用hwclock/etc/rc.d/init.d/halt直接调用hwclock/etc/sysconfig/clock需要区分NTP软件包一个包：ntp-4.2.2p1-9.el5_3.2三个包：ntp-4.2.4p8-2.el6.centos.i686ntp-perl-4.2.4p8-2.el6.centos.i686ntpdate-4.2.4p8-2.el6.centos.i686RHEL 6 把 RHEL 5 一个包拆成了三个RHEL 6 建议三个包都安装ntpd启动脚本一个脚本：/etc/rc.d/init.d/ntpd两个脚本：/etc/rc.d/init.d/ntpd/etc/rc.d/init.d/ntpdateRHEL 6 中添加了ntpdate启动脚本，相当于额外多了一个服务，需要注意RHEL 5 与 RHEL 6 中，时间这块，外围软件包改动并不大，例如hwclock，NTP。改动比较大的是：Anaconda安装系统时，timezone &amp;ndash;utc的处理方式。开机读取硬件时钟的机制。关机写入硬件时钟的机制。linux 时间存储 原理分析首先需要了解的概念：硬件时钟系统时钟其次，BIOS里硬件时钟存的仅是一个UNIX时间戳。这个时间戳，有UTC时钟和LOCAL时钟两钟存法。UTC时间LOCAL时间（本地时间）注意点：我们所说的system clock use UTC (timezone &amp;ndash;utc) 实际上就是指BIOS里的时钟存法。与系统的“时区”没有关系。这点不要混淆。这里举一个你常见的例子：笔记本双系统，win+linux，如果linux使用了UTC时间，那么两个系统就会差8小时。原因：Unix规范里BIOS时钟存UTC时间戳，但windows改成了只支持存LOCAL时间戳（就是你墙上的时间），而linux两个格式都支持。这时，如果你linux使用了UTC时间，就会把BIOS的时间戳当作UTC时间，而你的windows把BIOS时间戳当作LOCAL时间。所以无论你怎么调，两个系统时间都不会一致。hwclock说到linux下的时钟，一定不能忽略hwclock，硬件时钟和系统时钟的互写就全靠它了。后续我们详解hwclock的工作机制。推荐看 man clock。开机对时钟的处理我们电脑关机状态时，硬件上的晶振会持续保存一个时间，这个时间就是硬件时钟。进入BIOS便可以看到。开机后，系统将硬件时钟读入系统，然后开始维持时间的增长。硬件时钟仅开机读取一次，由于进入了OS，我们有很多途径让时钟更准确，比如NTP等，这时的硬件时钟对我们是没有用的。关机对时钟的处理要关机了，系统会把时间写入硬件时钟，相当于更新硬件时钟。RHEL 5/6 都是/etc/rc.d/init.d/halt调用hwclock来写入硬件时钟，细节上略有不同，但都是做一样的事情。hwclockRHEL 5/6 中hwclock机制并没有变化：这里需要注意的是：hwclock维护一个文件，/etc/adjtime，用来确定硬件时钟是UTC还是LOCAL。hwclock原理分析：我们直接执行hwclock，就是读取硬件时钟。01[root@centos6 install]# strace -e trace=open hwclock02open(&amp;quot;/etc/ld.so.cache&amp;quot;, O_RDONLY) = 303open(&amp;quot;/lib/libaudit.</description></item><item><title>【zz】红帽RHEL7新功能前瞻</title><link>/posts/zz_preview_new_features_of_red_hat_rhel7/</link><pubDate>Sat, 01 Dec 2012 09:17:00 +0000</pubDate><guid>/posts/zz_preview_new_features_of_red_hat_rhel7/</guid><description>http://www.serverwatch.com/server-trends/the-future-of-red-hat-enterprise-linux-7.htmlhttp://www.linuxdiyf.com/viewarticle.php?id=298912来源：51CTO差不多从2011年8月以来，红帽就一直在暗示有关红帽企业级Linux 7（RHEL 7）的各种情况。在红帽最近于波士顿举行的峰会活动（Summit Event）期间，这家Linux开发商极其详细地透露了下一代Linux会提供什么样的功能特性。RHEL 6在2010年11月正式发布。由于红帽企业级Linux大概每隔两年会有一次重大更新，RHEL 7定于2013年某个时候发布。红帽公司Linux工程副总裁Tim Burke强调，除了集成开发工具方面的改进外，RHEL 7的几个重要主题还包括数据中心运营效率、虚拟化和云计算等方面的改进。Burke说：“目前的状况是，我们现已完成了产品规划工作；会在2013年上半年发布RHEL7公共测试版。”不过，用户没必要等到2013年。Burke证实，RHEL 7的许多新的功能特性已出现在最近发布的Fedora 17中，还有一些新的RHEL 7功能特性会出现在定于今年年底之前发布的Fedora 18中。有望出现在版本7中的新的功能特性包括：全面支持目前RHEL 6中的几项预览技术；Linux容器虚拟化（Container virtualization）；新的SELinux及安全方面的其他改进。至于存储方面，逻辑卷管理器（LVM）快照在RHEL 7中也将得到全面支持，之前它被证实为是RHEL 6中的一项预览技术。LVM还将因LVM自动精简配置功能的推出而得到提升。只有数据被写入时，精简逻辑卷才耗用卷组空间——数据被丢弃后，随后就会返回该空间。从文件系统的角度来看，RHEL 7用户将来可以在ext4、xfs和Btrfs之间进行选择。Btrfs目前同样处于技术预览阶段，提供了新的回退和快照功能，而Ext4（目前Linux的默认文件系统）不具备这些功能。用户界面RHEL 7还将采用一种新的用户界面。红帽开发人员Denise Duman解释，新的界面采用了中心辐射式（hub and spoke）模型。所以现在有三个主要的中心（hub），再也不需要进行大量的配置以便启动和运行起来，而不是有14个屏幕。另外，安装系统所需的内存占用空间已大幅缩减，所需的最小内存空间是512 MB；这样一来，就能支持比较小的访客系统。在桌面端，RHEL 7还提供了GNOME 3用户体验，这对RHEL用户来说将是全新的体验。红帽的开发人员Jonathan Bandford说：“Gnome 3是一个巨大的改变，我们在这方面已作了一些激动人心的改进。”原文：The Future of Red Hat Enterprise Linux 7</description></item></channel></rss>