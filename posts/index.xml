<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on seteuid0's blog</title><link>/posts/</link><description>Recent content in Posts on seteuid0's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This is a customized copyright.</copyright><lastBuildDate>Sun, 18 Apr 2021 11:16:32 +0800</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>First Post</title><link>/posts/first-post/</link><pubDate>Sun, 18 Apr 2021 11:16:32 +0800</pubDate><guid>/posts/first-post/</guid><description>hello world</description></item><item><title>Run macOS on QEMU/KVM</title><link>/posts/run-macos-on-qemu-kvm/</link><pubDate>Wed, 18 Dec 2019 13:17:15 +0000</pubDate><guid>/posts/run-macos-on-qemu-kvm/</guid><description>有需要跑macOS，遂找资料进行下初期的技术验证。看了一些网页后大多都基于https://github.com/kholia/OSX-KVM 来做，简单验证流程如下： 使用fedora30系统（系统运行qemu的操作省略）``` git clone https://github.com/kholia/OSX-KVM.git cd OSX-KVM ./fetch-macOS.py
ProductID Version Build Post Date Title 1 041-91758 10.13.6 17G66 2019-10-19 macOS High Sierra 2 041-88800 10.14.4 18E2034 2019-10-23 macOS Mojave 3 061-26589 10.14.6 18G103 2019-10-14 macOS Mojave 4 061-10700 10.15.2 19C57 2019-12-10 macOS Catalina 5 041-90855 10.13.5 17F66a 2019-10-23 Install macOS High Sierra Beta 6 061-26578 10.14.5 18F2059 2019-10-14 macOS Mojave 7 061-44345 10.15.2 19C39d 2019-11-15 macOS Catalina Beta Choose a product to download (1-7): 2</description></item><item><title>Rockchip linux sdk buildroot使用记录</title><link>/posts/rockchip-linux-sdk-buildroot%e4%bd%bf%e7%94%a8%e8%ae%b0%e5%bd%95/</link><pubDate>Sat, 02 Nov 2019 08:55:07 +0000</pubDate><guid>/posts/rockchip-linux-sdk-buildroot%e4%bd%bf%e7%94%a8%e8%ae%b0%e5%bd%95/</guid><description>Rockchip Linux SDK里面的buildroot可以制作一个简洁的rootfs，但按照文档还是有一些问题，以下是使用时大致的一个记录及代码修改记录。 SDK从 http://opensource.rock-chips.com/wiki_Linux_SDK 获取。http://opensource.rock-chips.com/wiki_Source 里面有使用方法。 先要获取repogit clone https://github.com/rockchip-linux/repo mkdir linux cd linux而后同步代码，我这里使用的是RK3399的代码，由于网络原因可能会有超时发生，可以使用后面的脚本进行多次获取。``` ../repo/repo init &amp;ndash;repo-url=https://github.com/rockchip-linux/repo -u https://github.com/rockchip-linux/manifests -b master -m rk3399_linux_release.xml ../repo/repo sync
#!/bin/sh ../repo/repo sync -c while \[ $? -ne 0 \] ; do ../repo/repo sync -c; done ```代码就绪后就可以开始动手编译了。``` #cd u-boot #./make.sh evb-rk3399 $ source buildroot/build/envsetup.sh You're building on Linux Lunch menu...pick a combo: 1. rockchip\_rk3308\_release 2. rockchip\_rk3308\_debug 3. rockchip\_rk3308\_robot\_release 4. rockchip\_rk3308\_robot\_debug 5. rockchip\_rk3308\_mini\_release Which would you like?</description></item><item><title>[ZZ]v4l2的学习建议和流程解析</title><link>/posts/zzv4l2%e7%9a%84%e5%ad%a6%e4%b9%a0%e5%bb%ba%e8%ae%ae%e5%92%8c%e6%b5%81%e7%a8%8b%e8%a7%a3%e6%9e%90/</link><pubDate>Tue, 20 Aug 2019 13:28:31 +0000</pubDate><guid>/posts/zzv4l2%e7%9a%84%e5%ad%a6%e4%b9%a0%e5%bb%ba%e8%ae%ae%e5%92%8c%e6%b5%81%e7%a8%8b%e8%a7%a3%e6%9e%90/</guid><description>最近设计摄像头相关工作，之前虽然断断续续对V4L有些了解但不系统，在网上搜索了下发现V4L2应用还是非常广泛，所以资料也非常多，转载一片整理的比较全面的，就不重复造轮子了。 原文地址：https://www.cnblogs.com/silence-hust/p/4464291.html v4l2，一开始听到这个名词的时候，以为又是一个很难很难的模块，涉及到视频的处理，后来在网上各种找资料后，才发现其实v4l2已经分装好了驱动程序，只要我们根据需要调用相应的接口和函数，从而实现视频的获取和处理。只要认真的看几篇文章就对v4l2有一定的了解了，由于是第一次接触，网上的资料良莠不齐，难得可以找到几篇自己感觉很不错的。记录下来：（没必要看太多，很多都是一样的意思） http://www.embedu.org/Column/Column320.htm 这篇是不错的介绍，很讨厌有弹窗 http://www.cnblogs.com/emouse/archive/2013/03/04/2943243.html 这个可以作为第一篇来看，博主整理的不错 http://blog.chinaunix.net/uid-11765716-id-2855735.html 这篇也比较详细 http://blog.csdn.net/ddddwant/article/details/8475211 这篇提到的问题和我遇到的一样，花屏了，内存没有读取好 http://my.oschina.net/u/1024767/blog/210801#OSC_h2_14 对capture.c文件的解读 http://blog.csdn.net/g_salamander/article/details/8107692 对各个结构体有比较好的说明 一、Video for Linux two v4l2为linux下视频设备程序提供了一套接口规范。包括一套数据结构和底层V4L2驱动接口。只能在linux下使用。它使程序有发现设备和操作设备的能力。它主要是用一系列的回调函数来实现这些功能。像设置摄像头的频率、帧频、视频压缩格式和图像参数等等。当然也可以用于其他多媒体的开发，如音频等。 在Linux下，所有外设都被看成一种特殊的文件，成为“设备文件”，可以象访问普通文件一样对其进行读写。一般来说，采用V4L2驱动的摄像头设备文是/dev/v4l/video0。为了通用，可以建立一个到/dev/video0的链接。V4L2支持两种方式来采集图像：内存映射方式(mmap)和直接读取方式(read)。V4L2在include/linux/videodev.h文件中定义了一些重要的数据结构，在采集图像的过程中，就是通过对这些数据的操作来获得最终的图像数据。Linux系统V4L2的能力可在Linux内核编译阶段配置，默认情况下都有此开发接口。V4L2从Linux 2.5.x版本的内核中开始出现。
　V4L2规范中不仅定义了通用API元素(Common API Elements)，图像的格式(Image Formats)，输入/输出方法(Input/Output)，还定义了Linux内核驱动处理视频信息的一系列接口(Interfaces)，这些接口主要有：
　视频采集接口——Video Capture Interface; 视频输出接口—— Video Output Interface; 视频覆盖/预览接口——Video Overlay Interface; 视频输出覆盖接口——Video Output Overlay Interface; 编解码接口——Codec Interface。
二、v4l2结构体介绍 1、常用的结构体在内核目录include/linux/videodev2.h中定义
 struct v4l2_requestbuffers //申请帧缓冲，对应命令VIDIOC_REQBUFS struct v4l2_capability //视频设备的功能，对应命令VIDIOC_QUERYCAP struct v4l2_input //视频输入信息，对应命令VIDIOC_ENUMINPUT struct v4l2_standard //视频的制式，比如PAL，NTSC，对应命令VIDIOC_ENUMSTD struct v4l2_format //帧的格式，对应命令VIDIOC_G_FMT、VIDIOC_S_FMT等 struct v4l2_buffer //驱动中的一帧图像缓存，对应命令VIDIOC_QUERYBUF struct v4l2_crop //视频信号矩形边框 v4l2_std_id //视频制式</description></item><item><title>After upgrade to Fedora 28 cannot set locale</title><link>/posts/after-upgrade-to-fedora-28-cannot-set-locale/</link><pubDate>Sun, 29 Jul 2018 15:45:50 +0000</pubDate><guid>/posts/after-upgrade-to-fedora-28-cannot-set-locale/</guid><description>升级F28以后出现类似如下错误``` [root@KlausPC opt]# LC_ALL=C [root@KlausPC opt]# LC_ALL=CX -bash: warning: setlocale: LC_ALL: cannot change locale (CX): No such file or directory [root@KlausPC opt]# LC_ALL=de_DE.utf8 -bash: warning: setlocale: LC_ALL: cannot change locale (de_DE.utf8): No such file or directory [root@KlausPC opt]# exit logout [testuser@KlausPC ~]$ LC_ALL=de_DE.utf8 bash: warning: setlocale: LC_ALL: cannot change locale (de_DE.utf8): No such file or directory [testuser@KlausPC ~]$ su - Password: -bash: Warnung: setlocale: LC_TIME: Kann die Standorteinstellungen nicht ��ndern (de_DE.</description></item><item><title>基于Aliyun自己实现DDNS</title><link>/posts/%e5%9f%ba%e4%ba%8ealiyun%e8%87%aa%e5%b7%b1%e5%ae%9e%e7%8e%b0ddns/</link><pubDate>Fri, 20 Jul 2018 18:37:01 +0000</pubDate><guid>/posts/%e5%9f%ba%e4%ba%8ealiyun%e8%87%aa%e5%b7%b1%e5%ae%9e%e7%8e%b0ddns/</guid><description>很多时候需要在外面访问家里的电脑资源（如PC、NAS等），但由于个人宽带一般都是拨号上网没有固定的IP，所以如何实现随时获取家里IP是一个刚需。 开始前还是补充点前提条件，
你的网络必须有一个公网IP，否则DDNS也无法解决你从其他地方访问的需求。如果是使用路由器拨号的可以在路由器界面上看到请求的IP地址。一般电信、联通可以提供公网的IP（如果分配的是局域网地址可以打服务号申请调整哦～），其他可能就不行了。 一般家里都会用一个路由器上多个设备同时上网，因此你需要掌握如果把一个机器的端口通过路由器暴露给公网，现在一般80端口都被封了，所以请选择其他端口测试。 其实实现随时获取网络IP有多种方式，例如可以自己写一个服务程序来获取请求者的IP地址，再在家里常开机器（如NAS或其他设备）上运行一个定时请求的客户端（如curl），这样你就可以通过这个服务做中转来随时获取家里的IP。 当然这个方案要求你有一个固定的IP来提供服务。这里主要介绍下基于aliyun sdk来实现自己的ddns。 花生壳等服务提供的就是DDNS功能，但要收费之类的， 如果你自己已经有一个域名，那为什么不自己动手来实现一个呢？说干就干。 简单搜索，发现网上有很多类似内容，以下简单记录下自己的实现方式。 首先， 登录（如果没有需要注册）aliyun管理控制台， 获取到AccessKey ID和AccessKey Secret ，这个可以理解成是程序通过sdk请求aliyun服务器的凭证。 方法参考[1] 然后，在你准备运行aliyun sdk接口的机器上安装aliyun的sdk``` pip install aliyunsdkcore pip install aliyun-python-sdk-alidns</description></item><item><title>firewalld配置到虚拟机的端口转发</title><link>/posts/firewalld%e9%85%8d%e7%bd%ae%e5%88%b0%e8%99%9a%e6%8b%9f%e6%9c%ba%e7%9a%84%e7%ab%af%e5%8f%a3%e8%bd%ac%e5%8f%91/</link><pubDate>Tue, 29 May 2018 02:57:58 +0000</pubDate><guid>/posts/firewalld%e9%85%8d%e7%bd%ae%e5%88%b0%e8%99%9a%e6%8b%9f%e6%9c%ba%e7%9a%84%e7%ab%af%e5%8f%a3%e8%bd%ac%e5%8f%91/</guid><description>场景如下，假定服务器有公网IP，不同的业务可能运行到不同的虚拟机上，通过在服务器上配置不同的端口转发使请求转发到不同的虚拟机中。 实验环境如下：
host： fedora27 guest: fedora27，ip是192.0.2.55 步骤：``` #获取当前zone firewall-cmd &amp;ndash;get-active-zones #假定获取的zone为external,fedora返回的是FedoraWorkstation firewall-cmd &amp;ndash;zone=external &amp;ndash;add-masquerade #把host上的22端口转到192.0.2.55地址的2055端口 firewall-cmd &amp;ndash;zone=external &amp;ndash;add-forward-port=port=22:proto=tcp:toport=2055:toaddr=192.0.2.55 firewall-cmd &amp;ndash;reload #需要确认ip_forward处于开启状态 net.ipv4.ip_forward = 1 检查虚拟机的防火墙开起来对应的端口，或者干脆关闭防火墙。 #其他的命令 firewall-cmd &amp;ndash;zone=external &amp;ndash;add-forward-port=port=22:proto=tcp:toport=3753 firewall-cmd &amp;ndash;zone=external &amp;ndash;add-forward-port=port=22:proto=tcp:toaddr=192.0.2.55 查看： firewall-cmd &amp;ndash;list-all firewall-cmd &amp;ndash;zone=external &amp;ndash;list-forward-ports 当然也可以使用qemu来实现端口转发，这里就不展开了。</description></item><item><title>[zz]Windows 7下Git SSH 创建Key的步骤</title><link>/posts/zzwindows-7%e4%b8%8bgit-ssh-%e5%88%9b%e5%bb%bakey%e7%9a%84%e6%ad%a5%e9%aa%a4/</link><pubDate>Mon, 14 May 2018 15:19:35 +0000</pubDate><guid>/posts/zzwindows-7%e4%b8%8bgit-ssh-%e5%88%9b%e5%bb%bakey%e7%9a%84%e6%ad%a5%e9%aa%a4/</guid><description>一直都是使用Linux系统，使用git感觉也很自然，现在要用下windows系统，还是要找个资料学习下，转载的这篇文章记录的还挺详细，故转载分享下。 转载内容如下： 当我们使用github或者bitbucket等仓库时我们有可能需要ssh认证，所以需要生成他的ssh key。 1、首先你要安装git工具 下载地址：https://git-scm.com/downloads 2、右键鼠标，选中 “Git Bash here”，当然你也可以在windows的 “开始”&amp;mdash;&amp;gt;“所以程序”，或者安装目录打开它 3、输入指令，进入.ssh文件夹
[java] view plain copy
cd ~/.ssh/ 如果提示 “ No such file or directory”，你可以手动的创建一个 .ssh文件夹即可 命令为：
[java] view plain copy
mkdir ~/.ssh 4、配置全局的name和email，这里是的你github或者bitbucket的name和email
[java] view plain copy
git config &amp;ndash;global user.name &amp;ldquo;xkwg&amp;rdquo;
git config &amp;ndash;global user.email &amp;ldquo;xkwg@163.com&amp;rdquo;
5、生成key
[java] view plain copy
ssh-keygen -t rsa -C &amp;ldquo;xkwg@163.com&amp;rdquo; 连续按三次回车，这里设置的密码就为空了，并且创建了key。 Your identification has been saved in /User/Admin/.</description></item><item><title>drm</title><link>/posts/drm/</link><pubDate>Thu, 29 Mar 2018 00:51:27 +0000</pubDate><guid>/posts/drm/</guid><description>DRM - Direct Rendering Manager DRM是一个内核级的设备驱动，既可以编译到内核中也可以作为标准模块进行加载。DRM最初是在FreeBSD中出现的，后来被移植到Linux系统中，并成为Linux系统的标准部分。 DRM可以直接访问DRM clients的硬件。DRM驱动用来处理DMA，内存管理，资源锁以及安全硬件访问。为了同时支持多个3D应用，3D图形卡硬件必须作为一个共享资源，因此需要锁来提供互斥访问。DMA传输和AGP接口用来发送图形操作的buffers到显卡硬件，因此要防止客户端越权访问显卡硬件。 Linux DRM层用来支持那些复杂的显卡设备，这些显卡设备通常都包含可编程的流水线，非常适合3D图像加速。内核中的DRM层，使得这些显卡驱动在进行内存管理，中断处理和DMA操作中变得更容易，并且可以为上层应用提供统一的接口。</description></item><item><title>[转]linux图形显示相关内容</title><link>/posts/%e8%bd%aclinux%e5%9b%be%e5%bd%a2%e6%98%be%e7%a4%ba%e7%9b%b8%e5%85%b3%e5%86%85%e5%ae%b9/</link><pubDate>Tue, 27 Feb 2018 12:19:05 +0000</pubDate><guid>/posts/%e8%bd%aclinux%e5%9b%be%e5%bd%a2%e6%98%be%e7%a4%ba%e7%9b%b8%e5%85%b3%e5%86%85%e5%ae%b9/</guid><description>1. 前言 图形子系统是linux系统中比较复杂的子系统之一：对下，它要管理形态各异的、性能各异的显示相关的器件；对上，它要向应用程序提供易用的、友好的、功能强大的图形用户界面（GUI）。因此，它是linux系统中少有的、和用户空间程序（甚至是用户）息息相关的一个子系统。 本文是图形子系统分析文章的第一篇，也是提纲挈领的一篇，将会从整体上，对linux显示子系统做一个简单的概述，进而罗列出显示子系统的软件构成，后续的文章将会围绕这些软件一一展开分析。 注1：本文所有的描述将以原生linux系统为例（如Ubuntu、Debian等），对其它基于linux的系统（如Android），部分内容会不适用。 注2：本文很多图片都是从网上搜集而来的（很多是从维基百科）。虽然蜗窝的宗旨是用自己的语言表述，尽量自己画图，但是linux图形子系统太复杂了，蜗蜗的理解有限，而老外的图画的实在太好，蜗蜗觉得，再怎么努力，也画不出更好的了，因此本着为读者负责的态度，就直接copy了。
2. 概念介绍 2.1 GUI（Graphical User Interface，图形用户界面） linux图形子系统的本质，是提供图形化的人机交互（human-computer interaction）界面，也即常说的GUI（Graphical User Interface）。而人机交互的本质，是人脑通过人的输出设备（动作、声音等），控制电脑的输入设备，电脑经过一系列的处理后，经由电脑的输出设备将结果输出，人脑再通过人的输入设备接收电脑的输出，最终实现“人脑&amp;lt;&amp;ndash;&amp;gt;电脑”之间的人机交互。下面一幅摘自维基百科的图片（可从“这里”查看比较清晰的SVG格式的原始图片），对上述过程做了很好的总结：
该图以一个非常前卫的应用场景&amp;mdash;-虚拟现实（VR，Virtual Reality）游戏，说明了以图形化为主的人机交互过程： 1）人脑通过动作、声音（对人脑而言，是output），控制电脑的输入设备，包括键盘、鼠标、操作杆、麦克风、游戏手柄（包含加速度计、陀螺仪等传感器）。 2）电脑通过输入设备，接收人脑的指令，这些指令经过kernel Input subsystem、Middleware Gesture/Speech recognition等软件的处理，转换成应用程序（Game）可以识别的、有意义的信息。 3）应用程序（Game）根据输入信息，做出相应的反馈，主要包括图像和声音。对VR游戏而言，可能需要3D rendering，这可以借助openGL及其相应的用户空间driver实现。 4）应用程序的反馈，经由kernel的Video subsystem（如DRM/KMS）、audio subsystem（如ALSA），输出到电脑的输出设备上，包括显示设备（2D/3D）、扬声器/耳机（3D Positional Audio）、游戏手柄（力的反馈）等。 5）输出到显示设备上时，可能会经过图形加速模块（Graphics accelerator）。 注3：图中提到了VR场景的典型帧率（1280×800@95fps for VR），这是一个非常庞大的信息输出，要求图形子系统能10.5ms的时间内，生成并输出一帧，以RGBA的数据格式为例，每秒需要处理的数据量是1280x800x95x4x8=3.11296Gb，压力和挑战是相当大的（更不用提1080P了）。
有关GUI更为详细的解释，请参考：https://en.wikipedia.org/wiki/Graphical_user_interface。
2.2 Windowing system（窗口系统） 窗口系统，是GUI的一种（也是当前计算机设备、智能设备广泛使用的一种），以WIMP （windows、icons、menus、pointer) 的形式，提供人机交互接口。Linux系统中有很多窗口系统的实现，如X Window System、Wayland、Android SurfaceFlinger等，虽然形态各异，但思路大致相同，包含如下要点：
1）一般都使用client-server架构，server（称作display server，或者windows server、compositor等等）管理所有输入设备，以及用于输出的显示设备。 2）应用程序作为display server的一个client，在自己窗口（window）中运行，并绘制自己的GUI。 3）client的绘图请求，都会提交给display server，display server响应并处理这些请求，以一定的规则混合、叠加，最终在有限的输出资源上（屏幕），显示多个应用程序的GUI。 3）display server和自己的client之间，通过某种类型的通信协议交互，该通信协议通常称作display server protocol。 4）display server protocol可以是基于网络的，甚至是网络透明的（network transparent），如X Window System所使用的。也可以是其它类型的，如Android SurfaceFlinger所使用的binder。
有关Windowing system的详细解释，请参考：https://en.</description></item><item><title>Qemu-kvm下运行Android x86</title><link>/posts/qemu-kvm%e4%b8%8b%e8%bf%90%e8%a1%8candroid-x86/</link><pubDate>Thu, 25 Jan 2018 16:53:13 +0000</pubDate><guid>/posts/qemu-kvm%e4%b8%8b%e8%bf%90%e8%a1%8candroid-x86/</guid><description>Android-x86 project 已经将x86架构的android系统准备继续，所以使用Qemu-kvm来安装Android系统就非常容易了。
准备Android-x86的iso镜像，可以在http://www.android-x86.org/download 处下载 准备qemu kvm虚拟化环境，例如安装fedora或centos等系统，安装virt-manager来运行qemu-kvm 按照虚拟机创建流程来安装android x86的镜像。（我验证是下载的是7.1的镜像，安装时不要使用GPT分区） 这样Android x86就可以在虚拟机下运行了，验证了下默认的网络也是ok的，如果配置了spice，还可以通过remote-viewer等工具来访问该Android x86虚拟机，非常方便。</description></item><item><title>Linux下通过命令行关闭、开启显示器的方法</title><link>/posts/linux%e4%b8%8b%e9%80%9a%e8%bf%87%e5%91%bd%e4%bb%a4%e8%a1%8c%e5%85%b3%e9%97%ad%e3%80%81%e5%bc%80%e5%90%af%e6%98%be%e7%a4%ba%e5%99%a8%e7%9a%84%e6%96%b9%e6%b3%95/</link><pubDate>Tue, 31 Oct 2017 11:45:40 +0000</pubDate><guid>/posts/linux%e4%b8%8b%e9%80%9a%e8%bf%87%e5%91%bd%e4%bb%a4%e8%a1%8c%e5%85%b3%e9%97%ad%e3%80%81%e5%bc%80%e5%90%af%e6%98%be%e7%a4%ba%e5%99%a8%e7%9a%84%e6%96%b9%e6%b3%95/</guid><description>Linux下关闭、开启显示器有如下的方案，原理各不相同，将来载补充，先列出来：
xrandr需要指定display和输出的设备，所以该命令可以制定具体关闭的显示器，实例如下： xrandr -display :0 &amp;ndash;output DP1 &amp;ndash;off xrandr -display :0 &amp;ndash;output DP1 &amp;ndash;auto xset，xset关闭以后有键盘或鼠标输入时屏幕会被唤醒，命令如下： xset dpms force off -display :0 xset dpms force on -display :0 vbetool，vbetool是一个较老的工具，在现在主流的系统中可能默认不会集成，此外该工具和intel i915驱动不兼容，所以如果使用i915驱动请不要使用该工具 vbetool dpms on vbetool dpms off</description></item><item><title>Fedora 26无法锁屏</title><link>/posts/fedora-26%e6%97%a0%e6%b3%95%e9%94%81%e5%b1%8f/</link><pubDate>Wed, 26 Jul 2017 10:54:05 +0000</pubDate><guid>/posts/fedora-26%e6%97%a0%e6%b3%95%e9%94%81%e5%b1%8f/</guid><description>Lock screen doesn&amp;rsquo;t work after upgrading to F26 It doesn&amp;rsquo;t work when SUPER+L, when suspending or when hibernating, in GNOME. Any idea on how to solve this? UPDATE/SOLVED: OK, it was disabled in dconf, although I didn&amp;rsquo;t do it, so I post the solution here in case someone looks for it, learnt from here:``` gsettings set org.gnome.desktop.lockdown disable-lock-screen false</description></item><item><title>Fedora 25 vim右键无菜单解决办法</title><link>/posts/fedora-25-vim%e5%8f%b3%e9%94%ae%e6%97%a0%e8%8f%9c%e5%8d%95%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95/</link><pubDate>Thu, 29 Dec 2016 17:03:46 +0000</pubDate><guid>/posts/fedora-25-vim%e5%8f%b3%e9%94%ae%e6%97%a0%e8%8f%9c%e5%8d%95%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95/</guid><description>不知道什么时候开始，fedora 25里vim右键菜单突然消失了，而且点击右键时切换到“视图”模式。平常也只是使用一些简单的vim，感觉基本够用了。现在看不折腾不行了，搜索、试验了下。方法如下：
Stop sourcing $VIMRUNTIME/vimrc_example.vim. Add set mouse-=a to .vimrc as you did. Use another shortcuts. E.g. Shift + Insert, Shift + right click, or etc. (It depends on your terminal software.) 我是创建了一个~/.vimrc文件：set mouse-=a 问题解决。 参考：https://github.com/vim/vim/issues/1326</description></item><item><title>[ZZ]openvswitch学习笔记</title><link>/posts/zzopenvswitch%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0/</link><pubDate>Wed, 07 Dec 2016 16:16:21 +0000</pubDate><guid>/posts/zzopenvswitch%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0/</guid><description>场景： 创建一个Virtual Switch,支持VLAN，支持MAC-Learning 包含下面四个Port：
P1, truck port P2, VLAN 20 P3, P4 VLAN 30 包含五个flow table:``` Table 0: Admission control.
Table 1: VLAN input processing. Table 2: Learn source MAC and VLAN for ingress port. Table 3: Look up learned port for destination MAC and VLAN. Table 4: Output processing 首先创建一个bridge sudo ovs-vsctl add-br helloworld -- set bridge helloworld fail-mode=secure 然后我们查看这个bridge $ sudo ovs-vsctl show c24322e6-8453-402a-afaf-64757ef231e9 Bridge helloworld fail\_mode: secure Port helloworld Interface helloworld type: internal ovs\_version: &amp;quot;2.</description></item><item><title>[转]基于 Open vSwitch 的 OpenFlow 实践</title><link>/posts/%e8%bd%ac%e5%9f%ba%e4%ba%8e-open-vswitch-%e7%9a%84-openflow-%e5%ae%9e%e8%b7%b5-2/</link><pubDate>Tue, 06 Dec 2016 12:41:29 +0000</pubDate><guid>/posts/%e8%bd%ac%e5%9f%ba%e4%ba%8e-open-vswitch-%e7%9a%84-openflow-%e5%ae%9e%e8%b7%b5-2/</guid><description>Open vSwitch 概述 Open vSwitch（下面简称为 OVS）是由 Nicira Networks 主导的，运行在虚拟化平台（例如 KVM，Xen）上的虚拟交换机。在虚拟化平台上，OVS 可以为动态变化的端点提供 2 层交换功能，很好的控制虚拟网络中的访问策略、网络隔离、流量监控等等。 OVS 遵循 Apache 2.0 许可证, 能同时支持多种标准的管理接口和协议。OVS 也提供了对 OpenFlow 协议的支持，用户可以使用任何支持 OpenFlow 协议的控制器对 OVS 进行远程管理控制。
Open vSwitch 概述 在 OVS 中, 有几个非常重要的概念：
Bridge: Bridge 代表一个以太网交换机（Switch），一个主机中可以创建一个或者多个 Bridge 设备。 Port: 端口与物理交换机的端口概念类似，每个 Port 都隶属于一个 Bridge。 Interface: 连接到 Port 的网络接口设备。在通常情况下，Port 和 Interface 是一对一的关系, 只有在配置 Port 为 bond 模式后，Port 和 Interface 是一对多的关系。 Controller: OpenFlow 控制器。OVS 可以同时接受一个或者多个 OpenFlow 控制器的管理。 datapath: 在 OVS 中，datapath 负责执行数据交换，也就是把从接收端口收到的数据包在流表中进行匹配，并执行匹配到的动作。 Flow table: 每个 datapath 都和一个“flow table”关联，当 datapath 接收到数据之后， OVS 会在 flow table 中查找可以匹配的 flow，执行对应的操作, 例如转发数据到另外的端口。 Open vSwitch 实验环境配置 OVS 可以安装在主流的 Linux 操作系统中，用户可以选择直接安装编译好的软件包，或者下载源码进行编译安装。 在我们的实验环境中，使用的操作系统是 64 位 Ubuntu Server 12.</description></item><item><title>[转]基于 Open vSwitch 的 OpenFlow 实践</title><link>/posts/%e8%bd%ac%e5%9f%ba%e4%ba%8e-open-vswitch-%e7%9a%84-openflow-%e5%ae%9e%e8%b7%b5/</link><pubDate>Tue, 06 Dec 2016 08:22:52 +0000</pubDate><guid>/posts/%e8%bd%ac%e5%9f%ba%e4%ba%8e-open-vswitch-%e7%9a%84-openflow-%e5%ae%9e%e8%b7%b5/</guid><description>Open vSwitch 概述 Open vSwitch（下面简称为 OVS）是由 Nicira Networks 主导的，运行在虚拟化平台（例如 KVM，Xen）上的虚拟交换机。在虚拟化平台上，OVS 可以为动态变化的端点提供 2 层交换功能，很好的控制虚拟网络中的访问策略、网络隔离、流量监控等等。 OVS 遵循 Apache 2.0 许可证, 能同时支持多种标准的管理接口和协议。OVS 也提供了对 OpenFlow 协议的支持，用户可以使用任何支持 OpenFlow 协议的控制器对 OVS 进行远程管理控制。
Open vSwitch 概述 在 OVS 中, 有几个非常重要的概念：
Bridge: Bridge 代表一个以太网交换机（Switch），一个主机中可以创建一个或者多个 Bridge 设备。 Port: 端口与物理交换机的端口概念类似，每个 Port 都隶属于一个 Bridge。 Interface: 连接到 Port 的网络接口设备。在通常情况下，Port 和 Interface 是一对一的关系, 只有在配置 Port 为 bond 模式后，Port 和 Interface 是一对多的关系。 Controller: OpenFlow 控制器。OVS 可以同时接受一个或者多个 OpenFlow 控制器的管理。 datapath: 在 OVS 中，datapath 负责执行数据交换，也就是把从接收端口收到的数据包在流表中进行匹配，并执行匹配到的动作。 Flow table: 每个 datapath 都和一个“flow table”关联，当 datapath 接收到数据之后， OVS 会在 flow table 中查找可以匹配的 flow，执行对应的操作, 例如转发数据到另外的端口。 Open vSwitch 实验环境配置 OVS 可以安装在主流的 Linux 操作系统中，用户可以选择直接安装编译好的软件包，或者下载源码进行编译安装。 在我们的实验环境中，使用的操作系统是 64 位 Ubuntu Server 12.</description></item><item><title>Fedora23上无法运行vmware解决办法</title><link>/posts/fedora23_vmware_run_error/</link><pubDate>Sat, 30 Apr 2016 05:51:17 +0000</pubDate><guid>/posts/fedora23_vmware_run_error/</guid><description>运行如下脚本：``` #!/bin/bash cp -aiv /usr/lib64/libgio-2.0.so.0.4600.2 /usr/lib/vmware/lib/libgio-2.0.so.0/libgio-2.0.so.0
cp -aiv /usr/lib64/libglib-2.0.so.0.4600.2 /usr/lib/vmware/lib/libglib-2.0.so.0/libglib-2.0.so.0
cp -aiv /usr/lib64/libgmodule-2.0.so.0.4600.2 /usr/lib/vmware/lib/libgmodule-2.0.so.0/libgmodule-2.0.so.0
cp -aiv /usr/lib64/libgobject-2.0.so.0.4600.2 /usr/lib/vmware/lib/libgobject-2.0.so.0/libgobject-2.0.so.0
cp -aiv /usr/lib64/libgthread-2.0.so.0.4600.2 /usr/lib/vmware/lib/libgthread-2.0.so.0/libgthread-2.0.so.0</description></item><item><title>ubuntu 15.10上运行无法vmware解决办法</title><link>/posts/how-to-run-vmware-on-ubuntu15-10/</link><pubDate>Mon, 02 Nov 2015 13:37:37 +0000</pubDate><guid>/posts/how-to-run-vmware-on-ubuntu15-10/</guid><description>今天把ubuntu系统升级到15.10，突然发现vmware虚拟机无法运行了，之前是11版本的，看之前一直提示12版本已经发布，就先把vmware升级了一下，结果还是没有办法运行（运行vmware没有显示）。 研究、搜索了半天，解决办法如下： 方法1：在终端执行如下动态库设置，然后再运行vmware或vmplayerexport LD_LIBRARY_PATH=/usr/lib/vmware/lib/libglibmm-2.4.so.1/:$LD_LIBRARY_PATH方法2：编辑/usr/bin/vmware，添加export LD\_LIBRARY\_PATH=/usr/lib/vmware/lib/libglibmm-2.4.so.1再运行vmware，当然方法2一劳永逸^_^。 原来是vmware和vmplayer需要一些特殊的动态库，而这些动态库无疑和系统的动态库是冲突的，因此也只能是使用vmware的时候配置这些动态库，如果修改到环境变量里面，无疑会对其他的应用产生影响。 参考：``` https://communities.vmware.com/message/2547319 http://askubuntu.com/questions/689123/vmware-wont-work-after-ubuntu-upgrade</description></item><item><title>Linux使用ＨＰ打印机配置方式总结</title><link>/posts/linux%e4%bd%bf%e7%94%a8%ef%bc%a8%ef%bc%b0%e6%89%93%e5%8d%b0%e6%9c%ba%e9%85%8d%e7%bd%ae%e6%96%b9%e5%bc%8f%e6%80%bb%e7%bb%93/</link><pubDate>Thu, 17 Sep 2015 10:02:01 +0000</pubDate><guid>/posts/linux%e4%bd%bf%e7%94%a8%ef%bc%a8%ef%bc%b0%e6%89%93%e5%8d%b0%e6%9c%ba%e9%85%8d%e7%bd%ae%e6%96%b9%e5%bc%8f%e6%80%bb%e7%bb%93/</guid><description>Linux下处理打印机的服务是CUPS，但支持不通型号的打印机还是需要各个打印机相关的一些驱动做支撑。最近就使用ubuntu链接一台HP LaserJet Pro MFP M226dw，把中间碰到问题的解决办法记录如下： 连接打印机的方法有很多种，USB、网络、无线等，我使用的方法是网线，即笔记本和HP打印机都连接在一个交换机上面。 1、打印问题 使用cups添加设备的时候，cups可以自动找到打印机，但是连接的类型里面只有&amp;quot;AppSocket/HP JetDirect&amp;quot;等方式，没有办法看到HPLIP的连接类型。这个时候就需要安装HP相关的“驱动” 去网页：http://hplipopensource.com/hplip-web/install_wizard/index.html 依据自己的打印机型号寻找hplip文件，下载后进行安装。 安装以后使用cups就可以看到HPLIP的连接选项了，使用该连接选项连接打印机。打印测试页，一切正常，所以打印机已经工作正常。 2、扫描功能 有时难免会用到扫描功能，cups缺少相关的功能。 使用hp-toolbox命令就可以调出刚刚hplip包提供的工具集了，点击Actions-&amp;gt;Scan里面的就会出现扫描工具。 这时可能会提示需要安装二进制的插件。我用的是hplip-3.15.9，plugin安装貌似有问题，自动下载安装无法完成。搜寻半天，发现可以在https://www.openprinting.org/download/printdriver/auxfiles/HP/plugins/ 页面里找到对应的plugins，下载安装。scan功能一切正常。 搜索关键字：“ERROR:Plug-in file does not match its digital signature.”</description></item><item><title>vmware安装Centos7虚拟机网络不识别解决方案</title><link>/posts/vmware%e5%ae%89%e8%a3%85centos7%e8%99%9a%e6%8b%9f%e6%9c%ba%e7%bd%91%e7%bb%9c%e4%b8%8d%e8%af%86%e5%88%ab%e8%a7%a3%e5%86%b3%e6%96%b9%e6%a1%88/</link><pubDate>Thu, 30 Jul 2015 07:23:30 +0000</pubDate><guid>/posts/vmware%e5%ae%89%e8%a3%85centos7%e8%99%9a%e6%8b%9f%e6%9c%ba%e7%bd%91%e7%bb%9c%e4%b8%8d%e8%af%86%e5%88%ab%e8%a7%a3%e5%86%b3%e6%96%b9%e6%a1%88/</guid><description>今天使用vmware安装centos 7虚拟机，安装完毕以后发现网络无法识别。 通过lspci发现网卡没有加载驱动，猜测可能是由于centos 7默认的内核没有编译该虚拟网卡的驱动。 因此，想到通过如下方式解决，经验证，可以解决问题。 编辑虚拟机的*.vmx文件，添加ethernet0.virtualDev = &amp;ldquo;e1000&amp;rdquo;，把该虚拟机的网卡设定成e1000。再开机验证，发现网路正常。 此外还有一个方法，就是修改guest os的类型，在安装的时候就选择centos，或者同样通过修改配置文件完成。 guestOS = &amp;ldquo;centos&amp;rdquo;</description></item><item><title>[zz]Debian / Ubuntu tasksel: Install Group Software (tasks) such As DNS / Web Server In A Single Click</title><link>/posts/zzdebian-ubuntu-tasksel-install-group-software-tasks-such-as-dns-web-server-in-a-single-click/</link><pubDate>Mon, 15 Jun 2015 14:53:19 +0000</pubDate><guid>/posts/zzdebian-ubuntu-tasksel-install-group-software-tasks-such-as-dns-web-server-in-a-single-click/</guid><description>&amp;rsquo;m looking for &amp;lsquo;yum groupinstall group&amp;rsquo; like command under Debian or Ubuntu Linux. How do I install group of softwares such as DNS or LAMP server in a single command? You need to use tasksel command. It is a software installation application that is an integral part of the Debian installer and works under Ubuntu Linux too. It groups some packages by tasks and offers the user an easy way to install the packages for that task.</description></item><item><title>linux-3.19下运行vmware解决方案</title><link>/posts/linux-3-19-vmware-vmnet-error/</link><pubDate>Thu, 30 Apr 2015 02:32:59 +0000</pubDate><guid>/posts/linux-3-19-vmware-vmnet-error/</guid><description>由于linux3.19内核升级导致接口变化，vmnet无法编译通过。解决办法如下，可以把附件的vmnet替换掉原来的，即可使用。下载后执行：``` cp vmnet.tar /usr/lib/vmware/modules/source/vmnet.tar</description></item><item><title>[转]U-boot 之TFTP服务器配置</title><link>/posts/u-boot-tftp-server-config/</link><pubDate>Wed, 15 Apr 2015 16:27:38 +0000</pubDate><guid>/posts/u-boot-tftp-server-config/</guid><description>一.PC端配置 1.关闭防火墙 [root@gliethttp root]# /etc/init.d/iptables stop 2.使用setup启动tftp [root@gliethttp root]# setup -&amp;gt;System services-&amp;gt;选中tftp 3.如果setup中找不到tftp选项，那么你需要rpm包来安装 在redhat9的CD3里可以找到tftp-server-0.32-4.i386.rpm文件 [root@gliethttp root]# rpm -ivh tftp-server-0.32-4.i386.rpm 4.修改tftp服务器配置 [root@gliethttp root]# vim /etc/xinetd.d/tftp 将server_args配置项为你自己的tftpboot根目录 将disable 配置为no service tftp { socket_type = dgram protocol = udp wait = yes user = root server = /usr/sbin/in.tftpd server_args = -s /tftpboot disable = no per_source = 11 cps = 100 2 flags = IPv4 } 5.启动tftp服务器 [root@gliethttp root]# /etc/init.d/xinetd restart 6.下载文件准备 [root@gliethttp root]# mkdir /tftpboot [root@gliethttp root]# cp usb1-uImage /tftpboot ；拷贝预下载的内核文件到/tftpboot目录下 [root@gliethttp root]# cp minigui9200.</description></item><item><title>串口登陆类ubuntu系统设置方法</title><link>/posts/serail_console_login_ubuntu_howto/</link><pubDate>Tue, 24 Mar 2015 16:22:51 +0000</pubDate><guid>/posts/serail_console_login_ubuntu_howto/</guid><description>在调试嵌入式等设备的时候，难免需要使用串口来登陆系统，ubuntu模式配置是没有启用串口登陆的，以下将简要介绍如何开启串口登陆。 在较高（12.04以后？）中，基于upstart的启动环境中使用/etc/init下面创建的启动脚本。如tty0～tty7都有相关的配置文件tty[0&amp;hellip;7].conf。如果需要启用串口登陆，只需要对应的创建一个新的文件，例如你使用的串口是ttyS0,则新建ttyS0.conf文件。 填写如下内容到该配置文件(注意里面的115200即串口的波特率。``` # ttyS0 - getty
This service maintains a getty on ttyS0 from the point the system is started until it is shut down again. start on stopped rc or RUNLEVEL=[12345] stop on runlevel [!12345]
respawn exec /sbin/getty -L 115200 ttyS0 vt102 这样连接串口重新启动进行验证吧，当然也可以不重启，通过执行以下命令实现： sudo start ttyS0</description></item><item><title>[ZZ]Device Tree（一）：背景介绍 为什么引入dtb</title><link>/posts/zzdevice-tree%ef%bc%88%e4%b8%80%ef%bc%89%ef%bc%9a%e8%83%8c%e6%99%af%e4%bb%8b%e7%bb%8d/</link><pubDate>Mon, 23 Mar 2015 02:44:42 +0000</pubDate><guid>/posts/zzdevice-tree%ef%bc%88%e4%b8%80%ef%bc%89%ef%bc%9a%e8%83%8c%e6%99%af%e4%bb%8b%e7%bb%8d/</guid><description>作者：linuxer 发布于：2014-5-22 16:46 分类：统一设备模型
一、前言 作为一个多年耕耘在linux 2.6.23内核的开发者，各个不同项目中各种不同周边外设驱动的开发以及各种琐碎的、扯皮的俗务占据了大部分的时间。当有机会下载3.14的内核并准备学习的时候，突然发现linux kernel对于我似乎变得非常的陌生了，各种新的机制，各种framework、各种新的概念让我感到阅读内核代码变得举步维艰。 还好，剖析内核的热情还在，剩下的就交给时间的。首先进入视线的是Device Tree机制，这是和porting内核非常相关的机制，如果想让将我们的硬件平台迁移到高版本的内核上，Device Tree是一个必须要扫清的障碍。 我想从下面三个方面来了解Device Tree： 1、为何要引入Device Tree，这个机制是用来解决什么问题的？（这是本文的主题） 2、Device Tree的基础概念（请参考DT基础概念） 3、ARM linux中和Device Tree相关的代码分析（请参考DT代码分析） 阅读linux内核代码就像欣赏冰山，有看得到的美景（各种内核机制及其代码），也有埋在水面之下看不到的基础（机制背后的源由和目的）。沉醉于各种内核机制的代码固然有无限乐趣，但更重要的是注入更多的思考，思考其背后的机理，真正理解软件抽象。这样才能举一反三，并应用在具体的工作和生活中。 本文主要从下面几个方面阐述为何ARM linux会引入Device Tree： 1、没有Device Tree的ARM linux是如何运转的？ 2、混乱的ARM architecture代码和存在的问题 3、新内核的解决之道 二、没有Device Tree的ARM linux是如何运转的？ 我曾经porting内核到两个ARM-based的平台上。一个是小的芯片公司的应用处理器，公司自己购买了CPU core，该CPU core使用ARM兼容的指令集（但不是ARM）加上各种公司自行设计的多媒体外设整合成公司的产品进行销售。而我的任务就是porting 2.4.18内核到该平台上。在黑白屏幕的手机时代，那颗AP（application process）支持了彩屏、camera、JPEG硬件加速、2D/3D加速、MMC/SD卡、各种音频加速（内置DSP）等等特性，功能强大到无法直视。另外一次移植经历是让2.6.23内核跑在一个大公司的冷门BP（baseband processor）上。具体porting的方法是很简单的： 1、自己撰写一个bootloader并传递适当的参数给kernel。除了传统的command line以及tag list之类的，最重要的是申请一个machine type，当拿到属于自己项目的machine type ID的时候，当时心情雀跃，似乎自己已经是开源社区的一份子了（其实当时是有意愿，或者说有目标是想将大家的代码并入到linux kernel main line的）。 2、在内核的arch/arm目录下建立mach-xxx目录，这个目录下，放入该SOC的相关代码，例如中断controller的代码，时间相关的代码，内存映射，睡眠相关的代码等等。此外，最重要的是建立一个board specific文件，定义一个machine的宏：
MACHINE_START(project name, &amp;ldquo;xxx公司的xxx硬件平台&amp;rdquo;) .phys_io = 0x40000000, .boot_params = 0xa0000100, .io_pg_offst = (io_p2v(0x40000000) &amp;raquo; 18) &amp;amp; 0xfffc, .map_io = xxx_map_io, .</description></item><item><title>ubuntu安装光盘iso修改方法总结</title><link>/posts/ubuntu%e5%ae%89%e8%a3%85%e5%85%89%e7%9b%98iso%e4%bf%ae%e6%94%b9%e6%96%b9%e6%b3%95%e6%80%bb%e7%bb%93/</link><pubDate>Wed, 04 Feb 2015 06:19:10 +0000</pubDate><guid>/posts/ubuntu%e5%ae%89%e8%a3%85%e5%85%89%e7%9b%98iso%e4%bf%ae%e6%94%b9%e6%96%b9%e6%b3%95%e6%80%bb%e7%bb%93/</guid><description>可以使用mount命令查看iso的内容#mkdir iso #mount -o loop ubuntu.iso ./iso把iso里面的内容取出来,iso_modify#mkdir iso\_modify #rsync -az ./iso ./iso\_modifyIso目录里面的casper/filesystem.squashfs就是启动以后的虚拟文件系统，我们要修改的就是这里的内容。#mkdir squashfs #cp iso/casper/filesystem.squashfs ./squashfs #cd squashfs解压squashfs#unsquashfs filesystem.squashfs可以看到解压出的squashfs-root目录就是一个文件系统，针对性的进行修改，如果需要安装deb包，可以chroot进去使用dpkg进行安装。 如果安装了软件包，需要跟新dpkg的列表：#chroot squashfs-root/ dpkg-query -W --showformat='${Package}\\t${Version}\\n' &amp;gt; dpkg\_list #cp dpkg\_list ../../iso\_modify/casper/filesystem.manifest把squashfs-root目录从新制作成squashfs文件#mksquashfs squashfs-root filesystem.squashfs -b 1024k -comp xz -Xbcj x86 -e boot用新的filesystem.squashfs替换原来的文件。 把新的iso-modify打包成iso``` #mkisofs -r -V &amp;ldquo;UbuntuTest&amp;rdquo; -cache-inodes -J -l -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -o ../ubuntu-test.iso .</description></item><item><title>ubuntu下initramfs相关内容记录</title><link>/posts/ubuntu%e4%b8%8binitramfs%e7%9b%b8%e5%85%b3%e5%86%85%e5%ae%b9%e8%ae%b0%e5%bd%95/</link><pubDate>Mon, 02 Feb 2015 16:54:53 +0000</pubDate><guid>/posts/ubuntu%e4%b8%8binitramfs%e7%9b%b8%e5%85%b3%e5%86%85%e5%ae%b9%e8%ae%b0%e5%bd%95/</guid><description>为了适应不同的运行环境，Linux发行版的启动基本都分为两个阶段，第一阶段使用initramfs文件系统，加载所需要的硬件驱动、文件系统驱动等；当完成根文件系统挂载后执行chroot，进入真实的文件系统。 initramfs类似与一个极其简化的文件系统，里面包含了系统启动时驱动的最小集合，这样使得initramfs的体积尽可能的变小。但不同发行版本的initramfs中内容的制作方式不尽相同，例如在fedora、rhel、centos的版本中，使用dracut工具包来生成相对应的initrd，而在ubuntu系统中使用initramfs-tools工具包所提供的相关工具。 当安装内核、内核升级的时候，内核的postinst脚本会在安装结束后调用update-initramfs工具更新相关的initramfs文件。查看update-initramfs文件发现，其主要调用mkinitramfs来完成相关操作。 update-initramfs与mkinitramfs文件都是BASH脚本文件，mkinitramfs文件基于事先约定的规则拷贝相关的程序、库、脚本、配置等到特定的目录，然后打包成initramfs格式的文件。mkinitramfs文件会引用/usr/share/initramfs-tools/hook-functions中事先约定好的函数，例如copy_exec可以完成二进制程序的拷贝，同时拷贝该程序所以来的动态库。/usr/share/initramfs-tools/scripts/目录中存放着生成initramfs中所需要的脚本。 修改//usr/sbin/mkinitramfs或者其他相关的内容，自己重新生成一个initramfs文件和之前的对比下，就可以看到效果。 例如：mkinitramfs -o test.img即可使用当前运行的内核版本生成一个对应的initramfs文件。 initramfs-tools软件包中除了mkinitramfs、update-initramfs工具外还有lsinitramfs等工具来帮助用户进行操作。 当然，最后生成的initramfs.img文件只是一种打包好的文件而已，方便grub加载及运行，我们也可自行进行解压、修改、再打包。 命令大致如下： 解压：zcat in.img |cpio -dium 打包：find . |cpio -H newc -o |gzip -9 &amp;gt; out.img</description></item><item><title>[zz]CVE-IDs have a new format</title><link>/posts/cve-ids_have_a_new_format/</link><pubDate>Mon, 02 Feb 2015 15:27:48 +0000</pubDate><guid>/posts/cve-ids_have_a_new_format/</guid><description>之前的CVE命名规则已经无法满足现状了，已经没有什么能够阻挡漏洞挖掘的大军了。
First CVE-IDs Issued in New Numbering Format Now Available
January 13, 2015 | Share this article
The first ever CVE-ID numbers issued in the new CVE-ID numbering format were posted on January 13, 2015 for vulnerabilities disclosed in 2014: CVE-2014-10001 with 5 digits andCVE-2014-100001 with 6 digits.
The format of CVE-ID numbers was changed a year ago this month in January 2014 so that the CVE project can track 10,000 or more vulnerabilities for a given calendar year.</description></item><item><title>搭建linux0.11系统环境</title><link>/posts/%e6%90%ad%e5%bb%balinux0-11%e7%b3%bb%e7%bb%9f%e7%8e%af%e5%a2%83/</link><pubDate>Wed, 14 Jan 2015 16:17:56 +0000</pubDate><guid>/posts/%e6%90%ad%e5%bb%balinux0-11%e7%b3%bb%e7%bb%9f%e7%8e%af%e5%a2%83/</guid><description>要学习Linux0.11的内核代码必须要有一个运行环境来做实验，本文简要介绍如何搭建该环境。 环境：ubuntu14.10 x86_64 Linux0.11的内核可以说是古董级的，所以必须要祭出模拟器了，有2中搭建方案bochs或qemu
使用bochs仿真器： 1、使用发行版的bochs，通过apt-get安装，需要安装如下软件包，如果缺包在之后的运行中就会有各种问题，此处忽略。当然你也可以从http://sourceforge.net/projects/bochs/files/Disk%20Images/ 处下载安装。ii bochs 2.6-2 amd64 IA-32 PC emulator ii bochs-doc 2.6-2 all Bochs upstream documentation ii bochs-term 2.6-2 amd64 Terminal (ncurses-based) plugin for Bochs ii bochs-wx 2.6-2 amd64 WxWindows plugin for Bochs ii bochs-x 2.6-2 amd64 X11 plugin for Bochs ii bochsbios 2.6-2 all BIOS for the Bochs emulator2、下载虚拟文件系统：地址：http://www.oldlinux.org/Linux.old/bochs/linux-0.11-devel-040329.zip 3、由于bochs的变化，所以需要修改配置文件，我修改bochsrc-hd.bxrc后的内容如下：``` megs: 16 floppya: 1_44=&amp;ldquo;bootimage-0.11-hd&amp;rdquo;, status=inserted floppyb: 1_44=diskb.img, status=inserted ata0-master: type=disk, path=&amp;ldquo;hdc-0.11.img&amp;rdquo;, mode=flat, cylinders=121, heads=16, spt=63 boot: a log: bochsout.</description></item><item><title>grsecurity系列之一:概述及简易安装部署</title><link>/posts/grsecurity%e7%b3%bb%e5%88%97%e4%b9%8b%e4%b8%80%e6%a6%82%e8%bf%b0%e5%8f%8a%e7%ae%80%e6%98%93%e5%ae%89%e8%a3%85%e9%83%a8%e7%bd%b2/</link><pubDate>Thu, 20 Nov 2014 14:52:52 +0000</pubDate><guid>/posts/grsecurity%e7%b3%bb%e5%88%97%e4%b9%8b%e4%b8%80%e6%a6%82%e8%bf%b0%e5%8f%8a%e7%ae%80%e6%98%93%e5%ae%89%e8%a3%85%e9%83%a8%e7%bd%b2/</guid><description>近日准备分析下grsecurity，把过程总结记录下与大家分享、讨论。 SELinux应该很多人都知道，不错，它是Linux的LSM框架下强制访问控制机制中使用较为普遍的一种，由NSA开发。在RHEL、Fedora系统中可以看到它的身影，而apparmor被ubuntu维护并默认使用。基本上这两种强制访问控制机制是当前Linux系统中使用最为广泛的。grsecurity没有使用LSM框架，而是对应kernel upstream的不同主流版本发布不同的patch。部署起来没有系统默认安装的selinux、apparmor那么方便，但存在即有意义。grsecurity发展有13年之久，这么多年为什么一直都没有进入内核，以及它与selinux、apparmor相比有什么差别，此次暂不评述。不可否认的是由于grsecurity实现时超出LSM框架，所以实现了很多其他强制访问控制机制所不能、或很难实现的功能，本系列文章分别描述，如有不周，请大家批评指正。 grsecurity官网上从Memroy Corruption defenses、Filesystem Hardening、Miscellaneous Protections、RBAC、GCC Plugins几个方面描述其特性，之后做详尽描述。
安装 从http://grsecurity.net/download.php可以看到当前稳定版本所对应的内核版本。下载对应的内核版本及grsecurity的patch。本处使用linux-3.2.64内核版本及grsecurity-3.0-3.2.64-201411150025.patch 补丁。``` #tar xf linux-3.2.64.tar.xz #cd linux-3.2.64 #patch -p1 &amp;lt; ../grsecurity-3.0-3.2.64-201411150025.patch #make menuconfig #make DISABLE_PAX_PLUGINS=y -j8 #make DISABLE_PAX_PLUGINS=y -j8 modules #sudo make DISABLE_PAX_PLUGINS=y -j8 modules_install #sudo make DISABLE_PAX_PLUGINS=y -j8 install
1. 由于安装了gcc-&amp;lt;ver&amp;gt;-plugin-dev，还是提示无法找到，因此本次去除该特性； 2. grsecurity的配置在&amp;quot;security options&amp;quot;-&amp;gt;&amp;quot;grsecurity&amp;quot;里面，本次可以使用Automatic配置，之后在做调整 3. \-j8指定并行编译的进程数，可使用CPU数的2倍 之后大家还可以下载、编译安装gradm。 重启~~~ Ok，可以开始体验grsecurity了～</description></item><item><title>CVE-2013-1959内核漏洞原理与本地提权利用代码实现分析</title><link>/posts/cve-2013-1959%e5%86%85%e6%a0%b8%e6%bc%8f%e6%b4%9e%e5%8e%9f%e7%90%86%e4%b8%8e%e6%9c%ac%e5%9c%b0%e6%8f%90%e6%9d%83%e5%88%a9%e7%94%a8%e4%bb%a3%e7%a0%81%e5%ae%9e%e7%8e%b0%e5%88%86%e6%9e%90/</link><pubDate>Thu, 17 Apr 2014 11:58:21 +0000</pubDate><guid>/posts/cve-2013-1959%e5%86%85%e6%a0%b8%e6%bc%8f%e6%b4%9e%e5%8e%9f%e7%90%86%e4%b8%8e%e6%9c%ac%e5%9c%b0%e6%8f%90%e6%9d%83%e5%88%a9%e7%94%a8%e4%bb%a3%e7%a0%81%e5%ae%9e%e7%8e%b0%e5%88%86%e6%9e%90/</guid><description>关键字：CVE-2013-1959，cve，kernel vulnerability，内核漏洞，POC，利用代码，本地提权，exploit， analysis,user namespace,capabilities 2013年4月28日，Andy Lutomirski在oss-security披露了该cve的细节。CVE-2013-1959是当前内核稳定版本安全补丁修复所对应的一个CVE。这个CVE的原因是在user namespace中，/proc/uid_map存多个不正确的权限检查。如果启用相关的配置，Linux 3.8和很多3.9rcs将受到影响。利用者可以获取root权限。 修复这个CVE对应的有3个patch，以下先大致介绍这三个Patch所修改的内容。 Patch1：Add file_ns_capable() helper function for open-time capability checking``` From 935d8aabd4331f47a89c3e1daa5779d23cf244ee Mon Sep 17 00:00:00 2001 From: Linus Torvalds torvalds@linux-foundation.org Date: Sun, 14 Apr 2013 10:06:31 -0700 Subject: [PATCH] Add file_ns_capable() helper function for open-time capability checking
Nothing is using it yet, but this will allow us to delay the open-time checks to use time, without breaking the normal UNIX permission semantics where permissions are determined by the opener (and the file descriptor can then be passed to a different process, or the process can drop capabilities).</description></item><item><title>内核CVE-2014-0038漏洞原理与本地提权利用代码实现分析</title><link>/posts/%e5%86%85%e6%a0%b8cve-2014-0038%e6%bc%8f%e6%b4%9e%e5%8e%9f%e7%90%86%e4%b8%8e%e6%9c%ac%e5%9c%b0%e6%8f%90%e6%9d%83%e5%88%a9%e7%94%a8%e4%bb%a3%e7%a0%81%e5%ae%9e%e7%8e%b0%e5%88%86%e6%9e%90/</link><pubDate>Tue, 25 Mar 2014 17:30:02 +0000</pubDate><guid>/posts/%e5%86%85%e6%a0%b8cve-2014-0038%e6%bc%8f%e6%b4%9e%e5%8e%9f%e7%90%86%e4%b8%8e%e6%9c%ac%e5%9c%b0%e6%8f%90%e6%9d%83%e5%88%a9%e7%94%a8%e4%bb%a3%e7%a0%81%e5%ae%9e%e7%8e%b0%e5%88%86%e6%9e%90/</guid><description>关键字：CVE-2014-0038，内核漏洞，POC，利用代码，本地提权，提权，exploit，cve analysis, privilege escalation, cve, kernel vulnerability
简介 2014年1月31号时，solar在oss-sec邮件列表里公布了该CVE（cve-2014-0038）。这个CVE涉及到X32 ABI。X32 ABI在内核linux3.4中被合并进来，但RHEL/fedora等发行版并没有开启该编译选项，因此未受该CVE影响。Ubuntu系统在近期的版本中开启了该选项，因此收该CVE影响。X32 ABI就是在64位环境中使用32位地址，效率有所提升，相关信息请参照参考资料或google。
漏洞原理 先看该CVE对应的patch``` diff &amp;ndash;git a/net/compat.c b/net/compat.c index dd32e34..f50161f 100644 &amp;mdash; a/net/compat.c +++ b/net/compat.c @@ -780,21 +780,16 @@ asmlinkage long compat_sys_recvmmsg(int fd, struct compat_mmsghdr __user *mmsg, if (flags &amp;amp; MSG_CMSG_COMPAT) return -EINVAL;
if (COMPAT_USE_64BIT_TIME)
return \_\_sys\_recvmmsg(fd, (struct mmsghdr \_\_user \*)mmsg, vlen, flags | MSG\_CMSG\_COMPAT, (struct timespec \*) timeout); if (timeout == NULL) return __sys_recvmmsg(fd, (struct mmsghdr __user *)mmsg, vlen, flags | MSG_CMSG_COMPAT, NULL);</description></item><item><title>Linux下线程pthread实现suspend、resume的一种方式</title><link>/posts/linux_pthread_suspend_resume/</link><pubDate>Tue, 11 Mar 2014 13:22:58 +0000</pubDate><guid>/posts/linux_pthread_suspend_resume/</guid><description>Linux下线程pthread没有实现suspend,resume的相关功能，这几天项目需要，自己就使用pthread_cond_wait实现了下，把主要代码逻辑如下，贴出来供大家参考。 功能如下。 主线程监听用户消息，子线程完成实际任务。主线程需要依据用户输入控制工作子线程的暂停（suspend）和继续运行（resume）。 使用CTRL+C控制暂停、继续运行。 使用CTRL+\使程序退出，主线程先cancel，然后自己退出。 代码如下：
#include &amp;lt;pthread.h&amp;gt; #include &amp;lt;signal.h&amp;gt; #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;stdio.h&amp;gt; typedef enum \_RUN\_STATUS{ STATUS\_RUNNING = 0, STATUS\_PAUSE, }RUN\_STATUS; sigset\_t mask; RUN\_STATUS run\_status; pthread\_mutex\_t lock = PTHREAD\_MUTEX\_INITIALIZER; pthread\_cond\_t waitloc = PTHREAD\_COND\_INITIALIZER; void cleanup\_handler(void\*arg) { printf(&amp;quot;child thread cleanup\\n&amp;quot;); pthread\_mutex\_unlock(&amp;amp;lock); } void \* thread\_func(void\*arg) { int err, signo; pthread\_cleanup\_push(cleanup\_handler, NULL); for(;;){ pthread\_mutex\_lock(&amp;amp;lock); if(run\_status == STATUS\_RUNNING){ pthread\_mutex\_unlock(&amp;amp;lock); printf(&amp;quot;child pthread task running-&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;\\n&amp;quot;); sleep(1); }else{ while(run\_status != STATUS\_RUNNING){ pthread\_cond\_wait(&amp;amp;waitloc, &amp;amp;lock); printf(&amp;quot;running again\\n&amp;quot;); } pthread\_mutex\_unlock(&amp;amp;lock); } } pthread\_cleanup\_pop(0); return 0; } int main() { int ret; run\_status = STATUS\_RUNNING; sigset\_t oldmask; pthread\_t tid; int err, signo; sigemptyset(&amp;amp;mask); sigaddset(&amp;amp;mask, SIGINT); sigaddset(&amp;amp;mask, SIGQUIT); pthread\_t tid\_self = pthread\_self(); if((ret = pthread\_sigmask(SIG\_BLOCK, &amp;amp;mask, &amp;amp;oldmask)) !</description></item><item><title>简要ClamAV安装、使用与实现分析</title><link>/posts/clamav_use_implement/</link><pubDate>Thu, 06 Mar 2014 10:52:57 +0000</pubDate><guid>/posts/clamav_use_implement/</guid><description>ClamAV使用广泛且开源的杀毒软件，支持windows、linux、Unix等主流操作系统，除自身具有病毒查杀功能外，还支持邮件、http代理扫描等插件方式。
安装 由于ClamAV的广泛使用，很多发行版的源里都有clamav，只需要使用相应的包管理工具进行安装即可。如fedora或ubuntu下只需执行：
yum install -y clamav-* sudo apt-get install clamav-*
但然，你也可以源码包安装，网上有很多教程，这里就不在多说。
使用 杀毒软件最终要的当然是病毒库，使用前当然是更新最新的病毒库。
freshclam
ClamAv有2种使用模式，单个程序查杀和前、后台模式查杀。 clamscan就是单个程序查杀的程序，它调用libclamav库完成对指定目录、文件的扫描检查。 clamd、clamdscan是前、后台模式的查杀工具。从名字就可以看出clamd是提供查杀服务的daemon程序，clamdscan是调用查杀服务的客户端。 最简单的使用方式就是命令后加你要扫描的文件或目录，如：
 clamdscan ～/
ClamAv当然也支持很多参数进行扫描定制，这里略过。 除了命令行的工具外还有很多第三方的图形化工具，如clamtk，更多的见：http://www.clamav.net/lang/en/download/third-party-tools/3rdparty-gui/
实现分析 ClamAv实现的是最原始的特征码扫描，而加载特征码库与实现扫描功能的代码都在libclamav库中实现，两种使用模式都是调用该库完成对应的扫描功能。 libclamav库API提供了病毒扫描的各种函数接口。从病毒中提取的特征字符串被用一定的格式组织在一起并加上签名保护就形成了病毒库，clamav使用的病毒库一般后缀为.cvd文件。 libclamav库的病毒扫描法使用Aho-Corasick精确字符串匹配算法，将病毒库中的特征码与文件中的字符串进行比较，以确定文件中是否有字符串精确匹配上病毒库中的特征码，从而确定是否感染病毒。 Aho-Corasick在Boyer-Moore算法基础上进行了的多种改进，Boyer Moore算法对要搜索的字符串进行逆序字符比较，当被搜索的字符串中的字符在特征字符串中不存在时，将跳过搜索字符串中一个子段。Boyer Moore算法还利用上一次比较的结果来确定下一次的比较位置，Boyer Moore算法与线性搜索比起来每次移动的步长比较多，线性搜索每次移动一个字符，因此，Boyer Moore算法比线性搜索快得多。Aho-Corasick通过创建一种状态图并采用由软件实现的有限状态机来确定字符串在文本中的位置，消除了搜索性能与字符串数量的相关性。 当然ClamAV必须实现相应的两个算法，看如下数据结构：
struct cli_matcher { unsigned int type; /* Extended Boyer-Moore */ uint8_t *bm_shift; struct cli_bm_patt **bm_suffix, **bm_pattab; uint32_t *soff, soff_len; /* for PE section sigs */ uint32_t bm_offmode, bm_patterns, bm_reloff_num, bm_absoff_num; /* HASH */ struct cli_hash_patt hm; /* Extended Aho-Corasick */ uint32_t ac_partsigs, ac_nodes, ac_patterns, ac_lsigs; struct cli_ac_lsig **ac_lsigtable; struct cli_ac_node *ac_root, **ac_nodetable; struct cli_ac_patt **ac_pattable; struct cli_ac_patt **ac_reloff; uint32_t ac_reloff_num, ac_absoff_num; uint8_t ac_mindepth, ac_maxdepth; struct filter *filter; uint16_t maxpatlen; uint8_t ac_only; #ifdef USE_MPOOL mpool_t *mempool; #endif };</description></item><item><title>file not recognized: File truncated错误解决办法</title><link>/posts/file-not-recognized-file-truncated%e9%94%99%e8%af%af%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95/</link><pubDate>Mon, 03 Mar 2014 02:30:17 +0000</pubDate><guid>/posts/file-not-recognized-file-truncated%e9%94%99%e8%af%af%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95/</guid><description>使用rpmbuild重新编译clamav，遇到了：file not recognized: File truncated。感觉不像时程序代码问题，找到以下解决办法：
when the compilation line looks like:c++ -Dmylib\_EXPORTS -Wall -Werror -g -fPIC -I/home/user/dev/mygit/build -I/home/user/dev/mygit/src -o CMakeFiles/mylib.dir/MyCppClass.cpp.o -c /home/user/dev/mygit/src/MyCppClass.cppcomes from the fact that, as stated, the generated object (.o) file is empty (or just truncated). A quick look can also tell it:ls -l CMakeFiles/mylib.dir/Now, when the issue remains even though you re-run the compilation line, it may come from the fact that the object (.o) file is empty/truncated within the compilation cache (ccache) itself.</description></item><item><title>cvechecker实现原理分析</title><link>/posts/cvechecker%e5%ae%9e%e7%8e%b0%e5%88%86%e6%9e%90/</link><pubDate>Thu, 27 Feb 2014 09:00:20 +0000</pubDate><guid>/posts/cvechecker%e5%ae%9e%e7%8e%b0%e5%88%86%e6%9e%90/</guid><description>cvechecker是由Sven Vermeulen编写的可以用来扫描检查系统软件cve情况的软件，在SF上的下载量非常高。自己在fedora上使用了下，对比yum的信息发现存在比较严重的漏报和误报，抽空分析了下其实现方式，总结如下 。 使用过cvechecker的用户都会猜测使用的是nist的cve(Common Vulnerabilities and Exposures)[1]信息获取软件的cve列表，但是怎么和系统上的软件联系在一起呢？ 各个发行版都有自己的软件包管理系统，如redhat系列的rpm、yum。redhat、fedora负责维护rhel和fedora上各个软件包的cve信息，当执行软件包升级时，使用新的软件包替换存在cve的软件包。基于deb包的ubuntu和debian类似。因此，在特定的发行版中，只需要通过包管理器便可知道软件包的版本号，再辅以发行版提供的漏洞信息或者直接使用类似yum update的方式升级便可知道当前版本的CVE信息。 cvechecker是怎么做的呢？Sven没有依赖于包版本管理器，而是直接通过查找软件包的版本号，然后构造CPE（Common Platform Enumeration）[2]信息，通过在cve数据库中查找给CPE信息来提取CVE信息。 每个软件包都包含了众多的软件，如ls和cat都属于coreutils,那么如何从系统软件列表差找到软件包列表及版本号便是Sven方法的关键所在。通过查看代码发现，Sven自己维护了一个软件包和各个命令的映射关系表。（https://raw.github.com/sjvermeu/cvechecker/master/versions.dat）内容类似与：
,perlivp,1,perlivp$,# perlivp v([0-9][0-9]*(\.[0-9]+)+),a,perl,perl,\1,,, ,libvorbis.so,1,libvorbis.so.*,Xiph.Org libVorbis ([0-9][0-9]*(\.[0-9]+)+),a,xiph,libvorbis,\1,,,
看过cvechecker帮助文档的用户都知道，用户自己也可以定义添加这种映射表，而默认的映射表是由Sven自己维护的，默认只有650条，因此这里就是漏报的一处主要原因。 这个隐射表解决了从命令到软件包的映射，但怎么获取软件包的版本号呢？继续看代码：
/** * Here is where the various version extraction methods are supported. * We currently still only support a single method (1, which is the * &amp;ldquo;strings -n 3 &amp;rdquo; command execution) but now we can see if we can * support additional methods as well. */ if (filetype == 1) { char buffer[BUFFERSIZE]; int ret; zero_string(buffer, BUFFERSIZE); ret = strings_extract_version(ws, &amp;amp;preg, pmatch, &amp;amp;cpe_data); if (ret == 0) { add_to_sqlite_database(ws, cpe_data); cpe_to_string(buffer, BUFFERSIZE, cpe_data); fprintf(stdout, &amp;quot; - Found match for %s/%s:\t%s\n&amp;quot;, ws-&amp;gt;currentdir, ws-&amp;gt;currentfile, buffer); }; } else { fprintf(stderr, &amp;quot; !</description></item><item><title>linux编程中由_GNU_SOURCE未声明所导致的问题</title><link>/posts/linux%e7%bc%96%e7%a8%8b%e4%b8%ad%e7%94%b1_gnu_source%e6%9c%aa%e5%a3%b0%e6%98%8e%e6%89%80%e5%af%bc%e8%87%b4%e7%9a%84%e9%97%ae%e9%a2%98/</link><pubDate>Fri, 21 Feb 2014 08:54:45 +0000</pubDate><guid>/posts/linux%e7%bc%96%e7%a8%8b%e4%b8%ad%e7%94%b1_gnu_source%e6%9c%aa%e5%a3%b0%e6%98%8e%e6%89%80%e5%af%bc%e8%87%b4%e7%9a%84%e9%97%ae%e9%a2%98/</guid><description>今天在写程序的时候遇到了如下的错误，核对了半天，感觉头文件已经包含，后来发现是缺少了#define _GNU_SOURCE
gcc example.c -o example example.c: 在函数‘call’中: example.c:58:17: 错误：数组元素的类型不完全 struct mmsghdr msgs[VLEN]; example.c: In function &amp;lsquo;call&amp;rsquo;: example.c:59:17: error: array type has incomplete element type struct mmsghdr msgs[VLEN];
查看/usr/include下面的定义发现原因。 由于mmsghdr是recvmmsg所需要的，而recvmmsg只在linux中存在，所以在sys/socket.h中有如下定义：
#ifdef __USE_GNU /* For `recvmmsg' and `sendmmsg'. */ struct mmsghdr { struct msghdr msg_hdr; /* Actual message header. */ unsigned int msg_len; /* Number of received or sent bytes for the entry. */ }; #endif
在features.h文件中可以看到</description></item><item><title>SELinux中核外应用查询策略API总结</title><link>/posts/selinux%e4%b8%ad%e6%a0%b8%e5%a4%96%e5%ba%94%e7%94%a8%e6%9f%a5%e8%af%a2%e7%ad%96%e7%95%a5api%e6%80%bb%e7%bb%93/</link><pubDate>Wed, 19 Feb 2014 15:23:31 +0000</pubDate><guid>/posts/selinux%e4%b8%ad%e6%a0%b8%e5%a4%96%e5%ba%94%e7%94%a8%e6%9f%a5%e8%af%a2%e7%ad%96%e7%95%a5api%e6%80%bb%e7%bb%93/</guid><description>SELinux中支持应用使用libselinux库来针对SELinux进行安全扩展（selinux aware application)，这样应用就可以使用SELinux的策略库来实现内部的访问控制，当前的passwd、dbus、udev等都使用selinux进行了扩展。其中passwd使用selinux进行密码修改检查，dbus对收、发进行了权限检查，分成了：acquire_svc和send_msg。 SELinux提供给用户空间的用户计算策略是否允许的接口主要有2类：selinux_check_access和avc_has_perm，下面对这两类接口进行说明。 selinux_check_access的函数原型为：
int selinux_check_access(const security_context_t scon, const security_context_t tcon, const char *class, const char *perm, void *audit‐ data);
需要输入的为主体、客体、客体类、权限集的字符串表示。 avc_has_perm的函数原型为：
int avc_has_perm(security_id_t ssid, security_id_t tsid, security_class_t tclass, access_vector_t requested, struct avc_entry_ref *aeref, void *auditdata);
需要输入的为主体、客体、客体类、权限集对应的id号，因此需要在使用以前将安全上下文与id号进行映射。在/usr/include/selinux/flask.h和/usr/include/selinux/av_permissions.h对客体类和权限集进行了定义，但是如果使用头文件中的编号，就导致应用与默认的refpolicy的编号顺序必须保持一致，否则容易导致编号与实际内容产生冲突。SELinux的开发者创建了selinux_set_mapping函数来动态建立客体类和权限集的映射关系。
int selinux_set_mapping(struct security_class_mapping *map); struct security_class_mapping { const char *name; const char *perms[]; };
例如：
static struct security_class_mapping dbus_map[] = { { &amp;ldquo;dbus&amp;rdquo;, { &amp;ldquo;acquire_svc&amp;rdquo;, &amp;ldquo;send_msg&amp;rdquo;, NULL } }, { NULL } }; #define DBUS__ACQUIRE_SVC 1 #define DBUS__SEND_MSG 2</description></item><item><title>[zz]redhat/centos 6.3 搭建git/gitosis/gitweb详细过程</title><link>/posts/zzredhatcentos-6-3-%e6%90%ad%e5%bb%bagitgitosisgitweb%e8%af%a6%e7%bb%86%e8%bf%87%e7%a8%8b/</link><pubDate>Thu, 13 Feb 2014 00:53:51 +0000</pubDate><guid>/posts/zzredhatcentos-6-3-%e6%90%ad%e5%bb%bagitgitosisgitweb%e8%af%a6%e7%bb%86%e8%bf%87%e7%a8%8b/</guid><description>1. gitweb安装
 注意：redhat的iso源是没有gitweb安装包，但是centos的源中有，在上一篇文章中给出了如何让redhat使用centos的源，那么，只需采用如下命令即可安装。
# yum install gitweb 2. gitweb配置
 gitweb默认安装到了/var/www/git下，其配置文件在/etc/gitweb.conf下，另外，httpd的配置文件/etc/httpd/conf.d/git.conf。
（1）修改/etc/gitweb.conf
$projectroot = &amp;ldquo;/var/www/git&amp;rdquo; //将projectroot修改为/var/www/git (2)修改/etc/httpd/conf.d/git.conf
Alias /git /var/www/git &amp;lt;Directory /var/www/git&amp;gt; Allow from all AllowOverride all Order allow,deny Options +ExecCGI AddHandler cgi-script .cgi DirectoryIndex gitweb.cgi SetEnv GITWEB_CONFIG /etc/gitweb.conf Dav On RewriteEngine Off （3）重启httpd
/etc/init.d/httpd restart （4）将gitosis仓库连接到/var/www/git下，完成web显示
ln -s /home/git/repositories/test_repo.git /var/www/git/ (5)通过浏览器浏览
http://xxxx/git/
注意： 如果git clone http://xxx/git/test_repo.git时出现git update-server-info错误，则在test_repos.</description></item><item><title>[zz]FireEye的成功之路</title><link>/posts/zzfireeye%e7%9a%84%e6%88%90%e5%8a%9f%e4%b9%8b%e8%b7%af/</link><pubDate>Thu, 13 Feb 2014 00:49:09 +0000</pubDate><guid>/posts/zzfireeye%e7%9a%84%e6%88%90%e5%8a%9f%e4%b9%8b%e8%b7%af/</guid><description>现在说起FireEye，就会让人想起一个词: APT(Advanced Persistent Threat)，仅从这一点看，FireEye就成功了：创造了一个市场并成为这个市场的领导者，相对于Palo Alto Networks定义了NGFW，可以说是有过之而无不及。 但是，FireEye所经历的并不像我们想象的那么一帆风顺。自2006年创建，到2013年获得资本市场的认可和追捧后顺利IPO，这7年到底是怎杨一个过程，且让我们复盘来看看。 2007年前的FireEye可谓处境艰难，互联网上几乎听不到什么声音，只能看到其在2008年断断续续的写了三篇技术blog，内容主要是exploit的利用分析。 但是在2009年也许是获得了CIA的默许，主动发起了对Botnet的进攻：FireEye研究员Atif Mushtaq在长达两年后跟踪和逆向Mega-D Botnet后，成功识别了其协议并导致其C&amp;amp;C服务器下线。 这逆转了业界对FireEye的”Just another security startup”的印象，因为在严谨法律的美国的网络安全界，从来没有出现过像美国军方一样的“主动打击”事件，这也算是开了网络安全的主动攻击先例，后来的各个机构(Law Enforcement)主动攻击或DDoS黑客组织，似乎也就顺理成章。 2010年的FireEye，在各大IT公司间左右逢源，建立合作伙伴关系，与媒体的关系也更加融洽，在Malware分析和保护领域逐步站稳了脚步，对IE和PDF文件的重点分析是当年的亮点。 2011年，FireEye重点帮助市场和媒体理解Targeted Attack和APT攻击本身，及其危害，这其实就是赌这个细分领域会成为一个高速成长的市场。 2012年底，FireEye顺利拿到5000万美金融资，并迎来了重量级的CEO，前McAfee CEO，Dave DeWalt，也顺利补充了大批后来成为百万富翁的资深安全研究员，这些都为2013年顺利IPO奠定了资本市场的人脉基础。 个人看来，FireEye的成功是一个市场定位的成功，在其他厂商都看不上这块市场的时候，顺利转型并在APT防护领域异军突起，顺利达阵，这是一盘很大的棋，政府和资本的力量在其中比技术实力更重要，占据了天时，地利，人和，无法失败。 IPO之后，FireEye的股票也是单边一路上扬，大部分投资者现在都应该是赚的盆满钵满，至于其中是否有泡沫，似乎都不是那么重要了。这也许正是硅谷之美，不甘心平庸，参与创业，成则获取巨额财富，为后续创业或享受人生提供契机，败也是积累了经验，找一家重新再来。</description></item><item><title>SELinux策略约束（constrain）里的L与H</title><link>/posts/selinux%e7%ad%96%e7%95%a5%e9%87%8c%e7%9a%84l%e4%b8%8eh/</link><pubDate>Mon, 20 Jan 2014 06:57:10 +0000</pubDate><guid>/posts/selinux%e7%ad%96%e7%95%a5%e9%87%8c%e7%9a%84l%e4%b8%8eh/</guid><description>在SELinux里，除了使用TE（type enforcement）来实现强制访问控制，还可以使用MLS机制的MCS或MLS。 MCS是single-sensitivity的安全机制，通过不同的categories来实现控制效果。 MCS的控制规则只能在base策略里面实现，如果想要修改refpolicy里的默认控制规则，可以修改策略里的mcs文件。MCS的基础内容如下：
mlsconstrain dir { search read ioctl lock } (( h1 dom h2 ) or ( t1 != mcs_constrained_type )); mlsconstrain dir { write setattr append unlink link rename add_name remove_name } (( h1 dom h2 ) or ( t1 != mcs_constrained_type ));
里面的mlsconstrain是约束语法，dir{search &amp;hellip;.}是对应的客体类和权限集。后面的就是MCS约束的定义。分为T、L、H{1/2}，分别表示类型（type），低安全集（L）和高安全集（H），之后的1，或2描述该表达式所限定的主体与客体，即L1表示主体的低安全级，如果上下文system_u:system_r:httpd_t:s0-s0:c0.c1024中，L1就是s0。 在selinux里面，看上面MCS对dir的约束定义，大家可能会有一个疑虑，selinux都是默认对当前级别（low level）进行判断，策略里面怎么是对high level进行判断。 看了下selinux的内核代码才知道缘由。 在selinux进行inode_doinit_with_dentry的时候，security_context_to_sid_default会到用到mls_context_to_sid对mls部分的上下文进行处理。该函数后部分有如下代码
if (l == 0) { context-&amp;gt;range.level[1].sens = context-&amp;gt;range.level[0].sens; rc = ebitmap_cpy(&amp;amp;context-&amp;gt;range.level[1].cat, &amp;amp;context-&amp;gt;range.level[0].cat); if (rc) goto out; }</description></item><item><title>编码版b374k实现分析</title><link>/posts/%e7%bc%96%e7%a0%81%e7%89%88b374k%e5%ae%9e%e7%8e%b0%e5%88%86%e6%9e%90/</link><pubDate>Fri, 10 Jan 2014 09:54:37 +0000</pubDate><guid>/posts/%e7%bc%96%e7%a0%81%e7%89%88b374k%e5%ae%9e%e7%8e%b0%e5%88%86%e6%9e%90/</guid><description>实验PHP+SELINUX的时候，使用B374k，发现PHP文件的上下文意外的发生了变化，Inode号却没有发生变化，审计日志里也找不到relabel相关信息，就想一探究竟。 看代码发现上下文变化的这个版本是代码进行了编码处理的，从google code里找到的那些没有编码处理的版本上下文不会发生变化，看来只能对解码处理。 第一层使用了简单的“.&amp;ldquo;符号把字符串进行了分割，将$b374k=@create_function('$x',&amp;lsquo;ev&amp;rsquo;.&amp;lsquo;al&amp;rsquo;.'(gz'.&amp;lsquo;inf&amp;rsquo;.&amp;lsquo;late&amp;rsquo;.'(bas'.&amp;lsquo;e64&amp;rsquo;.'_de'.&amp;lsquo;co&amp;rsquo;.&amp;lsquo;de($x)));');处理后就可以看到(gzinflate(base64_decode($x)))；使用这个函数把后面的解码就可以得到解密后的代码。将代码格式化处理下，可以看到前半部分还是编码后的代码，后半部分有一些功能代码。
eval(gzinflate(base64_decode($x7774cacf))); rebirth(); eval(gzinflate(base64_decode(hate($xc3a649b2,$xec8e9aa2))));
同样，去掉eval，通过gzinflate(base64_decode($x7774cacf))解码，得到上面的功能代码，将解码后的内容格式化可以得到
里面是基础的编码、解码、生成随机数功能函数，可以注意到里面的rebirth函数，该函数将该PHP文件重新编码后替换当前的PHP文件。而随后的代码便调用了rebirth()函数，实现了这个webshell的rebirth。 而eval(gzinflate(base64_decode(hate($xc3a649b2,$xec8e9aa2))));就是执行本次请求的功能。可以找一个文件将该解码后的内容拷贝进去进行验证，功能与预期一致。 目前知道了上下文改变是由于用新生成的文件替换了之前的老文件，但是为什么inode号会保持一致？对该文件进行审计,将日志处理后可以看到。
syscall=4 ppid=2563 pid=2617 syscall=2 ppid=2563 pid=13403 syscall=2 ppid=2563 pid=13403 syscall=21 ppid=2563 pid=13403 syscall=2 ppid=2563 pid=13403 syscall=87 ppid=2563 pid=13403 syscall=82 ppid=2563 pid=13403 syscall=2 ppid=2563 pid=13404 syscall=2 ppid=2563 pid=13405 syscall=2 ppid=2563 pid=13405 syscall=2 ppid=2563 pid=13404 syscall=87 ppid=2563 pid=13405 syscall=82 ppid=2563 pid=13405 syscall=87 ppid=2563 pid=13404 syscall=82 ppid=2563 pid=13404 syscall=2 ppid=2563 pid=13406 syscall=2 ppid=2563 pid=13406 syscall=87 ppid=2563 pid=13406 syscall=82 ppid=2563 pid=13406 syscall=2 ppid=2563 pid=13407 syscall=2 ppid=2563 pid=13407 syscall=87 ppid=2563 pid=13407 syscall=82 ppid=2563 pid=13407</description></item><item><title>Apparmor的前世今生</title><link>/posts/apparmor%e7%9a%84%e5%89%8d%e4%b8%96%e4%bb%8a%e7%94%9f/</link><pubDate>Wed, 01 Jan 2014 14:51:44 +0000</pubDate><guid>/posts/apparmor%e7%9a%84%e5%89%8d%e4%b8%96%e4%bb%8a%e7%94%9f/</guid><description>Apparmor是linux下安全机制的一种，使用LSM（Linux security modules），在2.6.36进入内核。以下介绍下Apparmor项目的发展历程。 1998～2003时，Apparmor在Immunix Linux中使用，当时名称是Subdomain。2005年5月10日，Immunix作为Novell的长期合作伙伴，被Novell收购，其中Apparmor是Novell的主要关注重点，而且被命名为Novell Apparmor。从2005年到2007年9月由Novell进行维护。2007年4月，Ubuntu进入Apparmor，进入Ubuntu 7.10包，作为Ubuntu8.04的一部分发布。 2007年9月，Novell将维护Apparmor的团队解散了。而Suse也在OpenSUSE11.1中引入了对SELinux的支持。作为Apparmor的founder和leader，Crispin Cowan和其他四个同事丢掉了在Novell的工作，当时Crispin表示会继续Apparmor的开发，他和其他2个同事Steve Beattie和Dominic Reynolds开办了Mercenary Linux公司，专注于Apparmor咨询工作。好景不长，2008年8月，有人发出了Apparmor is Dead的博文，引发讨论。随后 Crispin Cowan也在2008年加入了Windows Security Team。 从2009年开始，Canonical开始开发apparmor。现在的Maintainer是John Johansen john.johansen@canonical.com 参考资料： 1、blogs.msdn.com/b/michael_howard/archive/2008/01/17/crispin-cowan-joins-the-windows-security-team.aspx 2、en.wikipedia.org/wiki/Immunix 3、news.cnet.com/8301-13580_3-9796140-39.html 4、etbe.coker.com.au/2008/08/23/apparmor-is-dead/ 5、http://en.wikipedia.org/wiki/AppArmor</description></item><item><title>开发PHP扩展（extension)或模块(module)简介</title><link>/posts/%e5%bc%80%e5%8f%91php%e6%89%a9%e5%b1%95%ef%bc%88extension%e6%88%96%e6%a8%a1%e5%9d%97module%e7%ae%80%e4%bb%8b/</link><pubDate>Tue, 31 Dec 2013 02:17:57 +0000</pubDate><guid>/posts/%e5%bc%80%e5%8f%91php%e6%89%a9%e5%b1%95%ef%bc%88extension%e6%88%96%e6%a8%a1%e5%9d%97module%e7%ae%80%e4%bb%8b/</guid><description>PHP的插件分为两种:PHP extensions 和Zend Extensions.其中PHP extensions 被当作modules，而Zend extensions被当作extensions.这两个的主要差异在于Engine中注册了不同的钩子。（当然在插件代码编写和使用的配置文件中也存在一定差异，这是后话）
环境搭建 首先需要搭建基础的php环境，我采用Fedora自带的库，然后下载系统对应的rpm源码包编译后使用，这样就可以保证和系统自带版本一致。
yundownload &amp;ndash;source php rpm -ivh php-*.src.rpm Cd ~/rpmbuild/SPEC/ rpmbuild -ba php.spec
这样就有了php的源码环境。
代码编写 开发PHP插件可以使用源码中的ext_skel快速的生成框架代码，只需要简单的修改框架代码就可以生成一个可用的PHP插件。 最简单的使用模式就是 Php_src/ext/ext_skel &amp;ndash;extname=module 执行后生成了由你制定的module关联的几个文件，module.c和php_module.h,以及config.m4工程配置文件 对应的修改这几个文件就可以了。 如果是要开发zend_extension则记得添加如下内容
/* This is a Zend extension */ #ifndef ZEND_EXT_API #define ZEND_EXT_API ZEND_DLEXPORT #endif ZEND_EXTENSION(); ZEND_DLEXPORT zend_extension zend_extension_entry = {
编译测试 编译测试： 执行phpize生成configure文件 然后执行./configure和make 将module目录下的so文件拷贝到你要的目录，然后配置一个php配置文件 添加extension=path/module_name.so,如果是zend extensions，则是 Zend_extension=path/module_name.so 这样，就可以开始你的调试之旅了。</description></item><item><title>Fedora20上安装wps</title><link>/posts/fedora20%e4%b8%8a%e5%ae%89%e8%a3%85wps/</link><pubDate>Sat, 28 Dec 2013 08:26:49 +0000</pubDate><guid>/posts/fedora20%e4%b8%8a%e5%ae%89%e8%a3%85wps/</guid><description>日常使用难免需要用到处理文档，以下介绍如何在feodra20类似的系统上安装wps
下载最新版本的wps linux版本 可以从http://community.wps.cn/download/中下载。 例如wget http://wdl1.cache.wps.cn/wps/download/Linux/unstable/kingsoft-office-9.1.0.4244-0.1.a12p3.i686.rpm 3. 使用yum安装该rpm包（当然可以不下载，直接使用网络地址安装） sudo yum install kingsoft-office-9.1.0.4244-0.1.a12p3.i686.rpm 4.下载font文件，可以使用http://pan.baidu.com/share/link?shareid=3371036765&amp;amp;uk=505215462 rpm2cpio ../symbol-fonts-1.2-1.noarch.rpm |cpio -dium sudo cp -r usr/share/fonts/symbol-fonts/ /usr/share/fonts/ （详情参见http://linuxsec.net/?p=78） 可以了，开始使用吧。</description></item><item><title>About</title><link>/posts/about/</link><pubDate>Mon, 16 Dec 2013 14:05:56 +0000</pubDate><guid>/posts/about/</guid><description>Linux、虚拟化、云计算、系统安全爱好者 在此希望和大家分享、交流Linux、虚拟化、云计算、security相关内容。 同时也欢迎大家提供其他有意思的内容。</description></item><item><title>主机名bogon问题</title><link>/posts/host_name_bogon_problem/</link><pubDate>Wed, 04 Dec 2013 16:13:00 +0000</pubDate><guid>/posts/host_name_bogon_problem/</guid><description>有时会发现主机名变成bogon了，偶然用nslookup发现了原因 172.16.141.139Server:61.234.254.5Address:61.234.254.5#53Non-authoritative answer:139.141.16.172.in-addr.arpaname = bogon.Authoritative answers can be found from:16.172.in-addr.arpanameserver = localhost.localhostinternet address = 127.0.0.1localhosthas AAAA address ::1&amp;gt;</description></item><item><title>sudo对selinux的支持及用法</title><link>/posts/sudo_for_selinux_support_and_usage/</link><pubDate>Mon, 02 Dec 2013 02:42:00 +0000</pubDate><guid>/posts/sudo_for_selinux_support_and_usage/</guid><description>sudo已经主持selinux，这样就可以在切换uid的同时切换上下文。实现的方式大致如下：再selinux.c的文件里面，提到了借鉴newrole的代码， 实验创建test用户 semanage login -a -s staff_u test修改sudoers文件，test ALL=(ALL) ROLE=sysadm_r TYPE=sysadm_t ALL然后使用test用户登陆,在执行sudo -Es后便转换上下文</description></item><item><title>Fedora20启用wayland</title><link>/posts/fedora20_enable_wayland/</link><pubDate>Sat, 30 Nov 2013 10:10:00 +0000</pubDate><guid>/posts/fedora20_enable_wayland/</guid><description>wayland开发正如火如荼，不久的将来就会代替现在的x，好奇就再f20上实验了以下，方法如下：更新xorg-x11-server,xorg-x11-drv-intel 和mutter-wayland然后有2中方法启用：1、在一个虚拟终端执行“mutter-wayland &amp;ndash;wayland&amp;quot;2、切换到控制台，登陆有执行,gnome-session &amp;ndash;session=gnome-wayland现在当然还有一些bug，而且只支持intel的显卡？毕竟还没有开发完成。。。</description></item><item><title>[zz]wayland and fedora</title><link>/posts/zzwayland_and_fedora/</link><pubDate>Thu, 28 Nov 2013 12:16:00 +0000</pubDate><guid>/posts/zzwayland_and_fedora/</guid><description>Wayland and Fedora Matthias Clasen Wed Mar 20 12:29:28 UTC 2013 Previous message:rawhide report: 20130320 changesNext message:Wayland and FedoraMessages sorted by: [ date ] [ thread ] [ subject ] [ author ]</description></item><item><title>QT：类似迅雷浮窗的不规则窗口的实现</title><link>/posts/qt_thunder_similar_floating_window_to_achieve_irregular_window/</link><pubDate>Thu, 21 Nov 2013 14:05:00 +0000</pubDate><guid>/posts/qt_thunder_similar_floating_window_to_achieve_irregular_window/</guid><description>见http://blog.csdn.net/small_qch/article/details/7054750需要将父类修改成QDialog主要思路：1：将窗体设为Qt::FramelessWindowHint（去掉标题栏）。2：用一幅有部分区域是透明的图片作为程序的界面，并将图片透明的地方设为穿透。3：重载程序的鼠标事件。运行时截图（浅绿色的是桌面背景）源代码：</description></item><item><title>dbus学习总结</title><link>/posts/dbus_learning_summary-2/</link><pubDate>Tue, 19 Nov 2013 12:37:00 +0000</pubDate><guid>/posts/dbus_learning_summary-2/</guid><description>dbus使用的人比较多，在csdn上有几个人都介绍的比较详细，跟着走一次基本就可以掌握。推介http://blog.csdn.net/flowingflying/article/details/5512222系列的。可以掌握dbus-binding相关的使用方式，比较简单。对于method通信方式中，2端的连接，核心见如下的API：12345DBUS_EXPORT DBusMessage * dbus_message_new_method_call ( const char * destination,const char * path,const char * iface,const char * method) 也就是必须要知道对方的destination (也就是bus name,object path,interface name和method。一个程序因该对应一个bus name,连接dbus-daemon的时候请求获得，一个应用可以有几个object path。interface 就是可以比较好的将method分类，方便使用。</description></item><item><title>Dbus学习总结</title><link>/posts/dbus_learning_summary/</link><pubDate>Tue, 19 Nov 2013 12:34:00 +0000</pubDate><guid>/posts/dbus_learning_summary/</guid><description>dbus使用的人比较多，在csdn上有几个人都介绍的比较详细，跟着走一次基本就可以掌握。推介http://blog.csdn.net/flowingflying/article/details/5512222系列的。可以掌握dbus-binding相关的使用方式，比较简单。对于method通信方式中，2端的连接，核心见如下的API：也就是必须要知道对方的destination (也就是bus name,object path,interface name和method。一个程序因该对应一个bus name,连接dbus-daemon的时候请求获得，一个应用可以有几个object path。interface 就是可以比较好的将method分类，方便使用。</description></item><item><title>[zz]Red Hat正与Intel紧密协作，力争在Fedora 21中默认加入Wayland</title><link>/posts/zz_red_hat_are_working_in_close_collaboration_with_intel_and_strive_to_default_in_fedora_21_added_wayland/</link><pubDate>Fri, 15 Nov 2013 05:55:00 +0000</pubDate><guid>/posts/zz_red_hat_are_working_in_close_collaboration_with_intel_and_strive_to_default_in_fedora_21_added_wayland/</guid><description>Red Hat正与Intel紧密协作，力争在Fedora 21中默认加入Wayland2013-9-22 12:45| 发布者: linux| 查看数: 190| 评论数: 3|赞0摘要: 为了使Wayland支持GNOME，Red Hat与Intel的开发者紧密合作，希望能为Wayland加入Fedora21做好及时准备。 Ubuntu曾企图征服FOSS（Free and Open Source Software自由和开源软件）世界的秘密计划被Intel的一纸声明挫败 &amp;hellip;为了使Wayland支持GNOME，Red Hat与Intel的开发者紧密合作，希望能为Wayland加入Fedora21做好及时准备。Ubuntu曾企图征服FOSS（Free and Open Source Software自由和开源软件）世界的秘密计划被Intel的一纸声明挫败，至少到现在为止，Ubuntu仍未能翻身。但如今，Intel开发者的真正计划也被揭露了。抛开那些戏剧化的剧情，实际上Intel为Wayland的未来投入巨资已不是秘密，Intel的开发者们正加紧与Red Hat的合作，争取将GNOME Shell变为一个&amp;quot;码农&amp;quot;（译注，意指GNOME Shell只完成表层的外围工作）。来自Red Hat的Christian Schaller在他的个人博客中写道：“我们在Red Hat的团队一直在和我们的同行Intel紧密协作，合并并稳固相关的补丁包，保证Wayland能够支持GNOME，同时查看堆栈中还有哪些地方需要进一步改进。”看起来这个小组当前的目标是为Fedora 20准备一个足够的技术预览版本，至少目前是这样。这不是一个正式项目，但至少应该会给人们一个值得期待的idea。Ubuntu13.10预定于10月份发布，在这个特殊的时间点上，Canonical是否会急切的使出全力力推Mir，目前还并不明朗。Schaller在他的博客中还写道，“因此，一旦确信用户不会感到负面影响，我们才会最终用Wayland替代X服务器。所以，在Fedora 21中默认采用Wayland还是X服务器，这仍然是一个悬而未决的问题。”这场显示服务端之间的“战争”即将决出一个赢家，那就是终端用户。为了提供更好的用户体验，决战双方，Intel和Canonical都更加充满斗志。无论谁胜谁负，最终受益的都将是我们这些用户。 via:http://news.softpedia.com/news/Red-Hat-and-Intel-Working-Closely-to-Bring-Wayland-as-Default-for-Fedora-21-383119.shtml</description></item><item><title>[zz]linux如何查看CPU，内存，机器型号，网卡信息</title><link>/posts/zz_linux_how_to_view_cpu_memory_machine_type_card_information/</link><pubDate>Fri, 08 Nov 2013 05:52:00 +0000</pubDate><guid>/posts/zz_linux_how_to_view_cpu_memory_machine_type_card_information/</guid><description>中国蓝天linux如何查看CPU，内存，机器型号，网卡信息查看CPU信息（型号）# cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c 8 Intel(R) Xeon(R) CPU E5410 @ 2.33GHz(看到有8个逻辑CPU, 也知道了CPU型号)# cat /proc/cpuinfo | grep physical | uniq -c 4 physical id : 0 4 physical id : 1(说明实际上是两颗4核的CPU)PS：Jay added on 10th, May, 2011# 其实是可能有超线程HT技术，不一定是有4核，也可能是2核4线程；当时还理解不清楚# getconf LONG_BIT 32(说明当前CPU运行在32bit模式下, 但不代表CPU不支持64bit)# cat /proc/cpuinfo | grep flags | grep ' lm ' | wc -l 8(结果大于0, 说明支持64bit计算. lm指long mode, 支持lm则是64bit)再完整看cpu详细信息, 不过大部分我们都不关心而已.# dmidecode | grep -A81 &amp;lsquo;Processor Information&amp;rsquo;查看主板型号：# dmidecode |grep -A16 &amp;ldquo;System Information$&amp;ldquo;内存槽及内存条：# dmidecode |grep -A16 &amp;ldquo;Memory Device$&amp;ldquo;查看内存信息# cat /proc/meminfo# uname -aLinux euis1 2.</description></item><item><title>[zz]Fedora 18 安装fcitx</title><link>/posts/zz_fedora_18_install_fcitx/</link><pubDate>Wed, 06 Nov 2013 16:16:00 +0000</pubDate><guid>/posts/zz_fedora_18_install_fcitx/</guid><description>之前配置过fcitx,后来系统升级下就无法使用了，一直看不到输入选词框。后来就采用ibus了。看到了下面的文章，有空再配下。用ibus用了一段时间后苦于对其输入准确性的蛋疼换了fcitx，感觉fcitx-cloudpinyin + fcitx-sunpinyin+搜狗词库的体验要比ibus好很多了。下面给上安装方法。1、卸载ibus相关组件感觉这个没啥好说的，命令类似yum remove ibus*啥的自己看着搞，注意别误卸载一些其他重要软件就好2、安装 fcitx fcitx-sunpinyin fcitx-cloudpinyinsudo yum -y install fcitx fcitx-sunpinyin fcitx-cloudpinyin fcitx-config这里安装config是为了配置方便，既然已经决定在图形下了，也没必要非得去用vim修改配置文件这种方法对吧，虽然vim修改起来定制性更多，但是感觉config提供的功能已经足够了3、在自己的.bashrc文件里添加fcitx相关条目，同时在gnome里给fcitx添加开机启动.bashrc里的内容如下:export XMODIFIERS=@im=fcitxexport QT_IM_MODULE=ximexport GTK_IM_MODULE=xim然后alt+f2 输入gnome-session-properties，添加一个启动条目，名称命令都是fcitx4、注销或者重启后应该就ok了。</description></item><item><title>[zz]fedora18升级到fedora19</title><link>/posts/zz_fedora18_upgraded_to_fedora19/</link><pubDate>Wed, 06 Nov 2013 16:08:00 +0000</pubDate><guid>/posts/zz_fedora18_upgraded_to_fedora19/</guid><description>升级fedora 18到fedora 19猫终于发布了，之前看过gnome 3.8的介绍视频，感觉比3.6比起来要好太多了，所以很期待，全新安装也太麻烦，所以准备升级安装。fedora提供有升级工具fedup，升级起来还是比较方便的。下面结合官方文档和自己升级的经验说说升级流程。1、准备工作首先把系统彻底的更新一遍sudo yum -y upgrade安装fedupsudo yum -y install fedup2、开始升级这里要分两部，首先下载更新需要的包，有三个途径可以选择，网络，本地镜像，或者做好的启动光、U盘，这里我用网络更新，这也是官方推荐的更新方式，因为这样可以直接更新到目前最新的包sudo fedup &amp;ndash;network 19下载完毕后会提示你结果，正常的话就会提示你让你重启reboot接下来就比较漫长了，一切都不用管，以为内fedup会在你的grub.cfg里添加一个入口，不管你之前默认的是那个，只要你不在reboot前更新你的grub.cfg，那就可以放手喝杯茶静静的等了，开始升级的时候就是一个fedora蓝水滴呼吸闪烁下方一个进度条，进度条滚完再等一会，然后可能会重启，之后就能进入fedora 19了。但是这里要注意的是，如果你装了闭源驱动的话，我是nvidia的闭源驱动，在进度条滚完后可能会卡死，这里没什么，等一会，没反映强制关机就好了，关机时候不会听到硬盘急停的声音，说明进度条滚完确实要重启的，只不过我们因为驱动被卡在重启那里不动了。。不过要记得重启后赶快重装驱动，省得一些不比要的麻烦。3、清理工作这里比较恶心的就是fedup可能在更新完后不能正确清理，只能手动来清理了sudo fedup &amp;ndash;resetbootloadersudo fedup &amp;ndash;clean这样grub.cfg和升级后的一些临时文件就能清理掉一些，接着sudo yum clean allsudo yum distro-sync来把包都更成最新的，然后要清理fedora 18的残留内核，因为是版本升级，所以18的内核就都没用了，都要清掉，命令如下:sudo package-cleanup &amp;ndash;oldkernels &amp;ndash;count 1成功后升级你的配置文件，如果不失败，估计是你装得什么东西还对内核有依赖，yum删掉后再清除内核，然后更新grub2配置文件sudo grub2-mkconfig -o /boot/grub2/grub.cfg更新你的grub2配置文件,重启reboot如果发现grub2变得很丑的话，进入系统后sudo yum -y reinstall gurb2*sudo grub2-mkconfig -o /boot/grub2/grub/cfg这样就能解决问题然后再更新一边你的配置文件sudo grub2-mkconfig -o /boot/grub2/grub/cfg重启看看，是不是一切都回到原样了～哈哈到这里升级就搞定了。值得说的是gnome 3.8里面im-chooser依然是不能用的。我是升级安装，不知到这个玩意在19的liveCD里还有没有。但是顶部状态栏现在即使只有一个输入源的情况下依然显示输入法图标，为输入和设置添加不少方便。启动器可以通过dconf-tool来自己创建app folder，不过名字却要是那几个给定的名字，我只能一个个的试，现在可用的有DeveloperTools,Office,Accessories,总之和win Eng里的名字都差不多，自己慢慢去搞吧，这里就说这么多了，和猫玩去咯～</description></item><item><title>selinux支持动态客体类添加</title><link>/posts/adding_support_for_dynamic_object_class_selinux/</link><pubDate>Wed, 06 Nov 2013 13:06:00 +0000</pubDate><guid>/posts/adding_support_for_dynamic_object_class_selinux/</guid><description>现在linux内核大概从2.6.33开始支持动态客体了的添加，即可以不重新编译内核，直接编译selinux策略即可添加客体类，这样做有什么好处呢？如过开发一个selnux aware的应用程序，且该程序引入了一个或多个客体类，则可以直接修改策略，即可以使用。所以现在核外的很多应用都针对的进行了修改，核外请求客体类和操作集的时候应该都是用名字，即“class”和&amp;quot;perm&amp;quot;来传递到内核进行判断，如果是传递flask.h或av_permissions.h中的值，则可能会导致请求的客体类和内核所设定的客体类不匹配的问题。所以核外应该使用selinux_set_mapping或者selinux_access_check来进行检查，而不知直接使用avc_has_perm.</description></item><item><title>[zz]cgit安装部署</title><link>/posts/zz_cgit_installation_and_deployment/</link><pubDate>Wed, 30 Oct 2013 16:05:00 +0000</pubDate><guid>/posts/zz_cgit_installation_and_deployment/</guid><description>[how to] 如何在ubuntu上安装cgit分类： git2010-07-03 16:38 1688人阅读 评论(0) 收藏 举报ubuntuapachedeb工具gitcss cgit 是一种git 代码浏览工具，类似gitweb ，但是更快速，openembedded ,freedeskop 等项目都在采用cgit。我就尝试在我的ubuntu 10.04安装了cgit，感觉不错。步骤如下:安装cgit两种选择:1 直接用deb二进制包安装，点击这里 去下载 2 编译源代码,参考官方readme安装apache2假设你的DocumentRoot 是/var/www$ sudo mkdir /var/www/cgit$ sudo cp /usr/share/cgit/cgit.css /var/www/cgit$ sudo cp /usr/share/cgit/cgit.pnf /var/www/cgit建立一个cgit配置文件在/etc/apache2/conf.d/目录下面[cpp] view plaincopyalias /cgit /var/www/cgit &amp;lt;Directory &amp;ldquo;/var/www/cgit/&amp;quot;&amp;gt; AllowOverride None Options ExecCGI DirectoryIndex /cgi-bin/cgit.cgi Order allow,deny Allow from all cgit 配置文件cgitrc在/etc下面[c-sharp] view plaincopycss=/cgit/cgit.css logo=/cgit/cgit.png repo.url=cgit.git repo.path=/home/lynn/cgit.git repo.desc=demo repo.owner=lynn 重启apache2然后打开 http://localhost/cgit 就可以了</description></item><item><title>[zz]负载和性能测试的工具汇总</title><link>/posts/zz_load_and_performance_testing_tools_summary/</link><pubDate>Fri, 18 Oct 2013 05:32:00 +0000</pubDate><guid>/posts/zz_load_and_performance_testing_tools_summary/</guid><description>负载和性能测试的工具汇总时间:13-10-15 栏目:web测试, 测试 作者:admin, admin 评论:0 点击: 10 次本文标签： web测试Agileload - 敏捷负载SA测试所有类型的网络和移动应用的负载测试工具。主要功能包括自动记录测试场景，分布式的负载注射器，拓扑和阈值分析异常，基础设施监控，为每个用户配置文件中创建自定义的测试报告。也可在Amazon EC2上。对于Web服务， HTML / AJAX ， Web 2.0的，如Adobe的Flash / Flex中， J2EE ， 。NET ， PHP，大型门户网站， ERP / CRM门户网站，微软的Silverlight ，微软SharePoint 。 负载测试仪LITE - 自由/低成本的负载测试工具从Web性能股份有限公司 - 精简其负载测试仪PRO ™ 5软件版本。运行测试用例1,000,000虚拟用户没有从用户托管的服务器的成本，或从云服务器在每小时1美元。为了测试网站的性能，如原始带宽，防火墙和负载平衡器吞吐量，特别是单页面加载时间的基本方面。 LoadZen - 基于云计算负载测试服务从LoadZen ，使仿真数万数以千计的虚拟化的并发用户。其功能包括可变斜坡上升利率来改变测试的流量模式，随机虚拟用户的行为，定期测试，并更多。免费使用多达25个并发用户。 崇 - 免费开放源码的多协议分布式负载测试工具支持的流程之一。可以用来强调HTTP ， WebDAV的， SOAP和PostgreSQL ， MySQL和LDAP的Jabber / XMPP服务器。还支持SSL 。 OS监控（ CPU，内存和网络流量）使用远程服务器上的SNMP ，穆宁或二郎山剂。可以使用XML配置系统;几个会话，以模拟不同类型的用户。动态会话可以在XML描述。网友认为时间和到达率可以是随机的，使用的概率分布。在装载过程中，可以生成HTML报告，查看响应时间测量，服务器CPU ，等在Erlang开发。 Telerik测试的工作室 - Telerik测试的工作室附加的负载测试。负载测试可以利用现有的功能测试或Fiddler日志创建或可以从头捕获。设有一个单一的的VU许可证类型覆盖范围和极其强大的技术和协议能够产生极端增加硬件/系统要求高的用户负载，而不加载代理。 Loadster - 负载测试工具，测试网站， Web应用程序和HTTP web服务为导向，以从砖厂科技公司，包括图形脚本编辑器，现场报道，和无限的虚拟用户。同时执行多个脚本，多个虚拟用户群，坡道用户加载了上下几乎无限的可能性，模拟虚拟用户的网络带宽，调整或随机等待时间，并添加阈值微调测试输入。免费版本。 Loadtracer - Web负载测试工具，从跟踪技术列兵。公司包括录像机，模拟和分析仪。刻录机支持参数化，变量管理，响应验证;模拟器支持多达几千个虚拟用户，分析仪可以生成图表和报告可汇出成各种格式。 HttpRider - 一个轻量级的，开源的工具，网站负载，性能和压力测试。 NET开发的亚历博泰兹。创建HTTP场景分析HTTP请求使用提琴手和复制他们根据用户的配置。可以自定义它们绑定到自定义数据源模仿不相同请求的查询字符串和POST参数。需要Windows NET 4.</description></item><item><title>【zz】linux内核e820来源及相关知识</title><link>/posts/zz_linux_kernel_sources_and_relevant_knowledge_e820/</link><pubDate>Wed, 16 Oct 2013 16:57:00 +0000</pubDate><guid>/posts/zz_linux_kernel_sources_and_relevant_knowledge_e820/</guid><description>http://hi.baidu.com/ballmillsap/item/c2f3cf6f43d3220aa1cf0fe4e820简介操作系统内存布局中断 int 0x15e820简介 收藏本文系转载，原文地址：http://wangcong.org/blog/?p=320，其中附录部分 为本人所加&amp;hellip; e820是和BIOS的一个中断相关的，具体说是int 0x15。之所以叫e820是因为在用这个中断时ax必须是0xe820。这个中断的作用是得到系统的内存布局。因为系统内存会有很多段，每段的类型属性 也不一样，所以这个查询是“迭代式”的，每次求得一个段。 我们看内核源代码。主要涉及两个文件：arch/x86/boot/memory.c和arch/x86/kernel /e820_32.c。我们 已经很幸运了，这部分代码已经用C重写过了。你可能会奇怪，启动调用e820时我们还在实模式，怎么能用C呢？答案是，这里用的是16位的C。gcc早已 经支持.code16 gcc模式了。 看detect_memory_e820()函数，里面就是e820的本质。它把int 0x15放到一个do-while循环里，每次得到的一个内存段放到struct e820entry里，而struct e820entry的结构正是e820返回结果的结构！而像其它启动时获得的结果一样，最终都会被放到boot_params里，e820被放到了 boot_params.e820_map。如果你对struct e820entry还有疑问，你可以看一下arch/x86/kernel/e820_32.c::print_memory_map()，看看里面是怎 么使用它的。 当然了，在arch/x86/boot/memory.c里，你还会看到另外两个利用int 0x15查询内存的函数，不过用途不一样了。附：boot_params 结构体定义，其中E820MAX 定义为128:struct e820entry {__u64 addr; /* start of memory segment */__u64 size; /* size of memory segment */__u32 type; /* type of memory segment */} __attribute__((packed));struct boot_params { struct screen_info screen_info; /* 0x000 */ struct apm_bios_info apm_bios_info; /* 0x040 */ __u8 _pad2[12]; /* 0x054 */ struct ist_info ist_info; /* 0x060 */ __u8 _pad3[16]; /* 0x070 */ __u8 hd0_info[16]; /* obsolete!</description></item><item><title>selinux客体类实验分析</title><link>/posts/experimental_analysis_selinux_object_class/</link><pubDate>Wed, 16 Oct 2013 09:45:00 +0000</pubDate><guid>/posts/experimental_analysis_selinux_object_class/</guid><description>内核从2.6.33开始实现对策略的dynamic class/perm discovery,修改了内核中客体类的存放方式，使得class indices不再关联实际值。即策略中的客体类的位置可以随意写。RHEL6系列的内核将该功能下移，在RHEL6.0正式版本的内核中便有该功能（beta版本中没有）。实验：采用dummy策略添加新的客体类使用notebook的security_compute_av_example用例，对自己新加的客体类进行测试。修改notebook.conf文件，添加user_u:base_r:base_t测试一如果采用标准2.6.32.25内核，可以添加新的客体类。但是在如dummy策略中，添加的客体类位置不能影响默认的内核客体类，如必须替代里面用户空间的客体类，或者再最后面添加。自己给里面添加了20个，运行正常。如果覆盖了默认内核客体类的位置,load_policy时提示策略加载失败。Class 1 is incorrect ,found class1 but should be security如果采用新内核，则可以在任意位置添加客体类，系统及策略均运行正常。等有空的时候再研究下策略加载，理解里面class在内核的存放以及使用方式才能真正理解该patch的作用。Perm获取最后通过discover_class通过读取/class/*/index,以及/class/*/perms/下面的内容来获取客体类及权限相关的内容里面涉及到比较多的调用通过实验如果是一个新的，通过策略添加的用户空间的客体类和权限，那么在测试的时候，数据是使用策略中的数据，而不是头文件中定义的数据。所以应该是通过接口文件从策略里面读取出来的。相关的2个patch如下</description></item><item><title>[zz]Why Sailfish is better as a modern OS? Here is a comparison</title><link>/posts/zzwhy_sailfish_is_better_as_a_modern_os_here_is_a_comparison/</link><pubDate>Sat, 12 Oct 2013 09:59:00 +0000</pubDate><guid>/posts/zzwhy_sailfish_is_better_as_a_modern_os_here_is_a_comparison/</guid><description>Why Sailfish is better as a modern OS? Here is a comparisonAhoy sailors!Ever since Sailfish is known to us as an operating system not an actual “fish”, there were a lot of demos on YouTube; many people were literally amazed by the work of Finnish, some went: “This’ll be a failure like MeeGo-Harmattan” Which in fact wasn’t a failure and you’ll only know when you own a Nokia N9/50!On one hand the truth is, that “if” MeeGo-Harmattan had a fair bit of support, none of this would have happened to it and we didn’t know what’s Jolla and Sailfish at the moment, on the other hand; if Nokia had supported Harmattan and we were satisfied enough, we probably were spending our time playing with Windows Phone UI as we were convinced that MeeGo is dead, and were using an old school back button!</description></item><item><title>[zz] linux常见发行版和kernel版本对应关系</title><link>/posts/zz_linux_kernel_version_releases_and_common_correspondence_between/</link><pubDate>Sat, 12 Oct 2013 04:43:00 +0000</pubDate><guid>/posts/zz_linux_kernel_version_releases_and_common_correspondence_between/</guid><description>linux常见发行版和kernel版本对应关系 2010-06-22 13:47:08分类： LINUXDebian 5.04 2.6.26Fedora 62.6.18Fedora 82.6.23Fedora 92.6.25Fedora 102.6.27Fedora 112.6.29Fedora 122.6.31mandriva 20102.6.31openSUSE 10.32.6.22suse 10.12.6.16suse 11.22.6.31redhat Enter 4.32.6.9redhat 9.02.4.20redhat Enter 5.42.6.18ubuntu 8.042.6.24ubuntu 9.042.6.28ubuntu 9.102.6.31</description></item><item><title>[zz]bash脚本中出现[[:not found错误的解决方法--bash脚本总结</title><link>/posts/bash_script_summary_-_not_found_error_solution_zz_bash_script_appears/</link><pubDate>Thu, 10 Oct 2013 03:31:00 +0000</pubDate><guid>/posts/bash_script_summary_-_not_found_error_solution_zz_bash_script_appears/</guid><description>今天在写脚本的时候，发生了一个奇怪的问题：在脚本中使用[[的时候报错“[[: not found”。遇到问题自然是解决问题。1. 使用的bash版本太低？bash &amp;ndash;version查看bash版本信息如下lee@lee:~$bash &amp;ndash;versionGNU bash, version 3.2.39(1)-release (i486-pc-linux-gnu)Copyright (C) 2007 Free Software Foundation, Inc.在google bash手册，3.2.39已经不算低了，完全支持[[这样的扩展。看来不是版本问题。2.是脚本中[[使用错误？写测试脚本进行测试。test.sh测试脚本内容如下#!/bin/bash[[ 1 ]] &amp;amp;&amp;amp; echo &amp;ldquo;successful&amp;quot;执行后仍然是“[[: not found”。但是，在bash交互模式下执行[[ 1 ]] &amp;amp;&amp;amp; echo &amp;ldquo;successful&amp;quot;命令，却是成功的，执行结果如下lee@lee:~$ [[ 1 ]] &amp;amp;&amp;amp; echo &amp;ldquo;successful&amp;quot;successfullee@lee:~$看来bash是支持[[扩展的，那么，问题应该就是出在脚本上。3.脚本里的问题存在于哪里呢？显然，那条孤零零的命令是没问题的，因为已经在交互模式下验证过了。脚本里还有一行#!/bin/bash用来指定运行该脚本所使用的shell类型。显然，我们这里就是要使用bash，所以这一行也没有问题。4.既然脚本的内容没有问题了，那问题究竟在哪里呢？从编写和运行等几个环节仔细思考，脚本既然没问题，那问题是不是出在 运行环节上？出于习惯，我经常喜欢$ sh test.sh这样的运行脚本的 方式，那么，换一种运行方式是不是能解决问题呢？在终端下用./test.sh运行，果然，运行成功！至此，问题的症结找到。4.1下面的问题是，为什么sh test.sh与./test.sh有着不同的运行结果。通过查看(ls -l /bin)得知，sh只是一个符号链接，最终指向是一个叫做dash的程序lee@lee:~$ ls -hl /bin | grep sh-rwxr-xr-x 1 root root 686K 2008-05-13 02:33 bash-rwxr-xr-x 1 root root 79K 2009-03-09 21:03 dashlrwxrwxrwx 1 root root 4 2010-03-03 01:52 rbash -&amp;gt; bashlrwxrwxrwx 1 root root 4 2010-03-03 01:53 sh -&amp;gt; dashlrwxrwxrwx 1 root root 4 2010-03-03 01:53 sh.</description></item><item><title>[zz]谷歌工程师再次公布Windows漏洞 并称微软很难合作</title><link>/posts/zz_google_engineer_saying_again_released_microsoft_windows_vulnerability_is_difficult_to_cooperate/</link><pubDate>Tue, 24 Sep 2013 14:44:00 +0000</pubDate><guid>/posts/zz_google_engineer_saying_again_released_microsoft_windows_vulnerability_is_difficult_to_cooperate/</guid><description>谷歌工程师再次公布Windows漏洞 并称微软很难合作发表于2013-05-24 09:56| 20701次阅读| 来源CSDN| 86 条评论| 作者张勇微软GoogleWindows安全摘要：谷歌安全工程师Tavis Ormandy对外公布了一个Windows安全漏洞，微软已确认这个漏洞，对此微软同时称公开讨论漏洞的行为是不太负责任的，而Tavis Ormandy直言不讳的批评微软对待漏洞研究人员怀有敌意且难以合作。北京时间5月24日消息，谷歌安全工程师Tavis Ormandy指责微软对待外部研究人员怀有很大敌意不容易合作，大家看到这一句话可能莫名其妙，这是怎么回事，这还得从头看。几天前谷歌工程师公布了一个Windows漏洞，该漏洞可以让个人电脑崩溃或获得额外的访问权限。微软周三晚间时候确认了这个漏洞，微软发言人Dustin Childs在一封邮件里称，他们已经知道这一潜在问题可能会影响微软Windows系统的安全性，目前正在对这一反馈进行调查，他同时也表示，虽然还没有发现任何针对该漏洞的攻击，但微软会采取适当行动来保护他们的客户。除此之外Dustin Childs拒绝回答更多的问题，包括在5月17日漏洞被人全面披露之前微软是否已经意识到了这个漏洞的存在以及微软打算什么时候发布漏洞补丁。同时，微软和其他一些安全研究人员批评Tavis Ormandy在还没有发布补丁前就完全公开讨论漏洞的行为，因为这会将众多计算机用户置于危险之中，而负责任的做法则是私下向微软专家报告这一漏洞。披露Windows漏洞的过程：Tavis Ormandy称微软难合作谷歌安全工程师Tavis Ormandy披露了这个Bug，而且他讨论了Windows内核驱动“Win32k.sys”的缺陷，并且对外寻求帮助以克服当中的障碍。Tavis Ormandy称，他没有太多的空闲时间去解决微软这些代码的问题，所以他在寻找如何解决最后拦路虎的方法。因此，Tavis Ormandy于三月份首次在Github上公布了相关漏洞的信息，以获得帮助或吸引其他研究人员的调查。然而目前这一相关信息已从Github上消失。上周一Tavis Ormandy再次完全公开这个漏洞，包括说明更多细节和提供演示代码。Tavis Ormandy声称，他手里有一个漏洞会影响到微软当前支持的所有Windows版本，他称，这个代码可以提供给一些信誉良好学校的学生研究。周二，丹麦漏洞研究安全公司Secunia发表了一份框架咨询报告，声称它已证实了这个Bug，在打满全部补丁的Windows 7 Professional和Windows 8的系统中都会受到该漏洞的影响。Secunia称，该漏洞可能被用来产生拒绝服务（Dos）攻击或者给攻击者提升较高的权限。随后微软将这个称为Elevation of Privilege （EoP）特权提升漏洞。TripWire的安全营运总监Andrew Storms称，尽管这个漏洞不能被用作远程攻击，但它仍然应该被认为是比较严重的代码，因为它可以被偷偷用到一些被攻破的网站中去。他在一封邮件中指出，或许有些人认为需要许多不同的漏洞才能成功利用Windows或Windows应用程序的话，那么本地EOP特权提升漏洞则是攻破Windows系统中的关键一步。Tavis Ormandy在5月15日的博客上直言不讳的批评微软：如果有人能解决这个谜底并确定这是一个安全问题，请发送一封电子邮件过来，他会更新这个帖子，同时你如果确定这个漏洞可以被利用，你还可以把这个问题报告给微软，不过需要注意的是，微软对待漏洞研究人员常常怀有敌意，并且难以合作，因此他建议使用假名或匿名的邮件以保护自己。据悉，Tavis Ormandy此前公布了很多Windows漏洞，尤其是在2010年披露的一个漏洞，在他向微软报告这一漏洞五天之后，便对外公布了Windows XP中的某个漏洞，Tavis Ormandy称，这样的举动主要是因为这个漏洞的严重性，同时他也因为相信微软应该会在其他方面驳回他的分析。此外也是在2010年，Tavis Ormandy还发文指出Windows的虚拟ODS（VDM）中存在一个漏洞，这可以使黑客完全控制系统，而这一漏洞存在了17年之久。特别值得一提的是微软的漏洞不少都是谷歌发现的，尤其是今年2月份发布的57个安全更新，其中一半都是来自谷歌工程师的发现。另外Tavis Ormandy还向其他软件厂商曝光过漏洞，在2011年年中，他指责Adobe公司试图掩埋事实——在Flash Player中出现的超过400个Bug。TripWire的安全营运总监Andrew Storms此外还表示，即使可能会被一些精明的黑客利用，但微软可能并不会急于修补漏洞。在这一点上，我们不难想象：微软开始他们惯用的事件响应——开始确认错误，可能然后再发布一个公告。据悉，微软下一个补丁定期发布事件是6月11日，距今天不到三个星期。最后：在笔者看来，虽然不能否认谷歌工程师为Windows安全性所带来的积极作用，但不待安全补丁推出就直接公布相关漏洞或细节的行为确实不太负责任，纵然有些问题让个人不太确定这是否就是安全漏洞，但所产生的疑问最好且都应该和微软安全专家进行沟通后再有所动作……另外，或许微软确实对外部的漏洞研究人员态度不好、甚至不合作，但在尚未发布补丁之前就公开漏洞就等于将众多计算机用户置于危险之中，这样的举动合适吗？</description></item><item><title>[zz]360捕获Windows漏洞第十次获微软致谢</title><link>/posts/zz_360_captured_for_microsoft_windows_vulnerability_tenth_thanks/</link><pubDate>Tue, 24 Sep 2013 14:43:00 +0000</pubDate><guid>/posts/zz_360_captured_for_microsoft_windows_vulnerability_tenth_thanks/</guid><description>360捕获Windows漏洞第十次获微软致谢2013年07月10日 10:25　来源：中国新闻网参与互动(2) 0中新网7月10日电 北京时间7月10日，微软发布月度安全更新共7款补丁，修复了Windows系统、Office和IE浏览器等软件中的34处漏洞。其中，由360互联网安全中心独家发现并通报微软的Windows内核高危漏洞 (CVE-2013-3173)也得到修复。迄今，360已十次报告漏洞而获得微软官方致谢，不仅遥遥领先于国内同行，在全球杀毒厂商中也排名前列。360安全专家石晓虹博士介绍说，Windows内核高危漏洞 (CVE-2013-3173)是由360工程师在日常安全研究中发现的。利用该漏洞，黑客可以通过邮件、文档等多种载体发起远程攻击，植入木马病毒。为了保护用户防范此漏洞攻击，360将漏洞技术分析提交给微软，协助对方及时推出补丁。微软本月补丁还修复了攻击代码已曝光月余的EPATHOBJ 0day漏洞(CVE-2013-3660)。该漏洞被黑客称为“提权神器”，可使木马病毒获得系统最高权限，瞬间“小偷变大盗”。此前，360安全卫士已针对该漏洞推出临时防御措施，保护用户安全度过补丁真空期。鉴于本月微软补丁数量多、修复的漏洞危害等级高，石晓虹博士建议电脑用户尽快安装补丁，降低系统感染恶意代码的风险。由于企业内网集体打补丁会占用较多出口带宽，推荐使用360企业版等具备“统一打补丁”功能的安全软件，帮助企业用户轻松管理内网机器的补丁更新和安装，避免出现网络拥堵情况。微软安全公告致谢360：https://technet.microsoft.com/en-us/security/bulletin/ms13-053附：微软2013年7月补丁信息1、微软.NET Framework及Silverlight远程代码执行漏洞安全公告：MS13-052级别：高危描述：本补丁修复了微软.NET Framework和微软Silverlight中存在的五处秘密报告的安全漏洞和两处已经被公开披露的安全漏洞，这些漏洞可能导致使用了特定代码的受信程序执行攻击者的恶意代码，安装恶意程序或窃取用户隐私影响软件：全系统/版本2、Windows内核模式驱动远程代码执行漏洞安全公告：MS13-053级别：高危描述：本补丁修复了Windows内核模式驱动中存在的两处已经被公开披露的安全漏洞和六处秘密报告的安全漏洞，这些漏洞可能导致当用户浏览嵌入了TrueType字体文件的内容时，引发攻击者的恶意代码得到执行，安装恶意程序或窃取隐私，或者可能被已经入侵系统的攻击者利用来提升权限，从而进一步控制整个系统。影响系统：全系统3、GDI+远程代码执行漏洞安全公告：MS13-054级别：高危描述：本补丁修复了GDI+组件中存在的一处秘密报告的安全漏洞，涉及的产品包括微软Windows、微软Office、微软Lync和微软Visual Studio，当使用存在漏洞软件的用户浏览一个嵌入了攻击者精心构造的TrueType字体文件的内容时，可能引发攻击者的恶意代码得到执行，安装恶意程序或窃取用户隐私。影响软件：Windows全系统；Office:2003/2007/2010；VS:VS 2003 ；Lync 2010/20134、IE积累性安全更新安全公告：MS13-055级别：高危描述：本补丁修复了IE浏览器中存在的十七处秘密报告的安全漏洞，当存在漏洞的用户访问一个攻击者精心构造的恶意网站时，可能引发攻击者的恶意代码得到执行，安装恶意程序或窃取用户隐私。影响系统：全系统5、微软DirectShow远程代码执行漏洞安全公告：MS13-056级别：高危描述：本补丁修复了微软DirectShow组件中存在的一处秘密报告的远程代码执行漏洞，当存在漏洞的用户打开一个攻击者精心构造的图片文件时，可能引发攻击者的恶意代码得到执行，安装恶意程序或窃取用户隐私。影响系统：XP/2003/VISTA/WIN7/WIN8/2008 R2/20126、Windows媒体格式运行时远程代码执行漏洞安全公告：MS13-057级别：高危描述：本补丁修复了微软Windows媒体格式运行时中存在的一处秘密报告的安全漏洞，当存在漏洞的用户打开一个攻击者精心构造的媒体文件时，可能引发攻击者的恶意代码得到执行，安装恶意程序或窃取用户隐私。影响系统：全系统7、Windows Defender权限提升漏洞安全公告：MS13-058级别：重要描述：本补丁修复了Windows Defender中存在的一处秘密报告的安全漏洞，已经入侵系统的攻击者可能利用此漏洞提升权限，从而进一步控制整个系统。影响软件：Windows7/Windows 7 SP1/2008 R2 X64 SP1</description></item><item><title>kerberos中wrong principal in request的一个可能原因，#define KRB5KRB_AP_WRONG_PRINC (-1765328240L)</title><link>/posts/kerberos_the_wrong_principal_in_one_of_the_possible_causes_request__define_krb5krb_ap_wrong_princ_-1765328240l/</link><pubDate>Thu, 19 Sep 2013 18:56:00 +0000</pubDate><guid>/posts/kerberos_the_wrong_principal_in_one_of_the_possible_causes_request__define_krb5krb_ap_wrong_princ_-1765328240l/</guid><description>最近配置kerberos，配置后用sclient测试的时候遇到wrong principal in request，搜了下没有找到解决办法，用gdb调了下发现原来是我的主机名配置的有问题。错误信息如下。修复方式为：如使用kerberos.example.com则主机名也为kerberos.example.com主机名的修改方式为：Fedora上是修改&amp;quot;/etc/hostname&amp;quot; 文件rhel主机名配置为/etc/sysconfig/network</description></item><item><title>[zz]Fedora 18的变化</title><link>/posts/zz_changes_in_fedora_18/</link><pubDate>Thu, 19 Sep 2013 15:39:00 +0000</pubDate><guid>/posts/zz_changes_in_fedora_18/</guid><description>fedora每次发布新版本都会发生巨变，本次变化&amp;ndash;/etc/sysconfig 已停止使用/etc/sysconfig/clock 由 /etc/localtime 代替/etc/sysconfig/i18n 已由 /etc/locale.conf 代替/etc/sysconfig/keyboard 变为 /etc/vconsole.conf主机名配置由 /etc/sysconfig/network 移至 /etc/hostnameFedora 18 支持 UEFI 安全引导。即在启用了安全引导的计算机上能够引导 Fedora.有工具可让管理员创建自定义证书，以签署本地环境下对 GRUB 和内核的修改。通过默认启用 rngd 改善了随机数生成。使用 SELinux 和 virt-sandbox 后，服务可在安全沙盒中运行，即使是 root 用户也是如此。virt-sandbox-service 软件包将创建挂载点和 libvirt 容器。现在有了 libseccomp 库，提供给应用程序一个简单的方式来减少误用内核 kernel syscall 过滤器带来的伤害。得益于此，虚拟机软件比如 QEMU/KVM 已经开始使用 libseccomp 了。usermode,一个为无特权用户提供特权访问的封装器，已经被更好的 polkit 所取代。Fedora 18 将 Kerberos 证书缓存的标准位置变更到 /run/user/$UID 来增强安全性并简化用于 NFSv4 的缓存的定位。Fedora 的 Kerberos 支持将允许用户维护适用于多个身份的证书，且允许GSSAPI 客户端代码可以依据目标服务和主机名自动选择证书。无特权用户能否使用 halt（8）， poweroff（8） 和 reboot（8） 命令现在由 polkit 控制。参看 /usr/share/polkit-1/actions/org.freedesktop.login1.policy 中的行为描述。将不再使用放置在 /etc/pam.d/{halt,poweroff,reboot} 中的 PAM 配置文件。里面的内容，如果有的话，也将被忽略。Fedora 18 新增 FedFS,该程序用来为多个文件服务器提供一致的命名空间。/tmp 默认会位于 tempfs.</description></item><item><title>django中添加xmlrpc支持</title><link>/posts/django_add_xmlrpc_support/</link><pubDate>Mon, 16 Sep 2013 13:44:00 +0000</pubDate><guid>/posts/django_add_xmlrpc_support/</guid><description>实现一个xmlrpc功能模块，代码如下add the following to urls.pyThat&amp;rsquo;s it!You can pretty much write a standard python function in there, just be sure to register it with the dispatcher when you&amp;rsquo;re done.Here&amp;rsquo;s a quick and dirty client example for testing:Based on experience, I do recommend that you use Dictionaries for your args rather than long args, but I think that&amp;rsquo;s personal preference (It allows named arguments, eliminates &amp;lsquo;out of order&amp;rsquo; argument issues and it makes the code more self-documenting).</description></item><item><title>django中使用xmlrpc报403问题解决办法</title><link>/posts/django_403_problems_reported_using_the_xmlrpc_solution/</link><pubDate>Mon, 16 Sep 2013 13:40:00 +0000</pubDate><guid>/posts/django_403_problems_reported_using_the_xmlrpc_solution/</guid><description>Django&amp;rsquo;s CSRF protection is turned on by default now, and is quite effective at blocking cross site requests, including RPC requests like this.Symptoms:Valid XMLRPC requests to the xmlrpc endpoint are greeted with a 403 Forbidden response. This is generated by the CSRF middleware because a CSRF token isn&amp;rsquo;t being included in the POST.Resolution:Turn of CSRF for the handle_xmlrpc method.In django_xmlrpc/views.py, add the csrf_exempt decorator to the handle_xmlrpc method:from django.views.decorators.csrf import csrf_exempt&amp;hellip;@csrf_exemptdef handle_xmlrpc(request): &amp;hellip;.</description></item><item><title>ubuntu13.4server安装及图形安装</title><link>/posts/ubuntu134server_installation_and_graphical_installation/</link><pubDate>Sun, 15 Sep 2013 17:20:00 +0000</pubDate><guid>/posts/ubuntu134server_installation_and_graphical_installation/</guid><description>非CD安装ubuntu13.4server有一个方法，就是把下载的iso写到u盘里，然后用u盘启动安装。我采用的utraliso写的u盘，还有其他的工具可以使用。非常方便。之前使用硬盘安装12.4desktop的方法无法安装13.4servers。所以采用了上面的方法。安装后发现没有图形，有时候又需要图形来进行调试、显示。故又搜索安装图形的方法，可以通过一下方式解决。apt-get install ubuntu-desktop然后重启就可以了。</description></item><item><title>[zz]网络战争背后死亡商人揭秘：漏洞高价出售</title><link>/posts/behind_zz_cyberwar_merchant_of_death_secret_vulnerability_higher_price/</link><pubDate>Fri, 13 Sep 2013 06:04:00 +0000</pubDate><guid>/posts/behind_zz_cyberwar_merchant_of_death_secret_vulnerability_higher_price/</guid><description>网络战争背后死亡商人揭秘：漏洞高价出售文章关键词:计算机战争，Chrome浏览器，黑客团队,安全漏洞,网上银行,网络安全上月，在温哥华由谷歌(微博)举办的一场比赛中，以安全著称的Chrome浏览器被黑客们两度攻陷。黑客攻击的方法是利用了一个作弊网站来绕过Chrome的安全保护，结果成功侵入了目标电脑。虽然两次黑客攻击都攻破了谷歌的防护措施，但这也只是谷歌系统&amp;quot;第三次&amp;quot;被真正成功地入侵。而来自法国安全公司Vupen的黑客团队却采取了不同的做法。他们并没有参加谷歌的比赛，而是通过破解Chrome的安全保护以赢得惠普(微博)在同一场大会上赞助的另一场黑客比赛。随后谷歌向那两位赢得其比赛的黑客各提供了6万美元奖金，条件是他们要告诉谷歌他们的攻击细节，并帮助谷歌修复他们利用的漏洞。Vupen的CEO兼首席黑客查欧基·贝克拉(Chaouki Bekrar)表示，他的公司根本不想将其秘密技术告诉谷歌——当然不会为了6万美元而进行这种愚蠢的交换。计算机战争背后的“死亡商人”“我们不会把这种技术告诉谷歌，即使给我们100万美元也不行。”贝克拉说，“我们不想告诉谷歌任何可以帮助他们修复这个漏洞或其他类似漏洞的知识。这是为我们的客户保留的。”毕竟，这些客户的目的不是修复谷歌或其他任何商业软件供应商的安全漏洞。他们是政府机构，购买了“零天攻击”(指在软件安全漏洞被发现的头一天便遭到攻击——译注)技术或那些利用了软件中未公开漏洞的黑客技术。他们的目的显而易见，就是侵入或干扰犯罪嫌疑人和情报目标的电脑和电话。在阴暗但合法的安全漏洞市场上，“零天攻击”技术可能会使黑客从软件公司手中得到2,000或3,000美元，但打算秘密使用这个漏洞的间谍和警察可能会给出10倍甚至100倍的价钱。贝克拉没有详细说明Vupen的确切定价，但Frost&amp;amp;Sullivan公司(将漏洞研究领域的“2011年度创业公司”奖授予了Vupen)的分析师表示，Vupen的客户每年支付大约10万美元的会员费，从而获得购买该公司技术的特权。这些黑客技术包括了攻击微软(微博)Word、Adobe Reader、谷歌安卓系统、苹果iOS系统和许多其他软件的技术。Vupen在惠普举办的黑客比赛上夸口说，他们已经掌握了各大浏览器的漏洞。熟悉该公司业务的知情人士表示，Vupen销售目录上仅一项技术的价格常常都远远超过其六位数的会员费。即便价格如此之高，Vupen也没有将其发现的安全漏洞只卖给一家，而是同时出售给多个政府机构。这种商业模式常常使其客户你争我夺，生怕在间谍军备竞赛中落后。贝克拉声称，Vupen会仔细核查客户的背景，只向北约国家的政府和“北约的合作伙伴”出售安全漏洞。他表示，该公司还有其他的“内部程序”来过滤那些非民主国家，并要求买家签署合同，不得公布或转售这些漏洞。但即便如此，他承认该公司的黑客攻击方法仍有可能落入不法分子之手。“我们尽力确保这些漏洞不会从买家的手中外流。”贝克拉说，“但如果你将武器出售给别人，就无法保证他们不会再卖给其他人。”这种武器贸易的比喻很合Vupen批评者的胃口。隐私保护活动人士克里斯·索菲安(Chris Soghoian)和开放社会基金会(Open Society Foundations)的同仁们把Vupen称作“为计算机战争提供弹药的当代死亡商人”。在有个漏洞被售出后，索菲安说：“它在黑洞里消失了。他们不知道这个漏洞被如何利用，是否得到了许可，或者是否违反了人权。”这个问题在去年明明白白地摆在了世人眼前。当时，加州森尼维尔市蓝衣系统公司(BlueCoatSystems)的监视装置被出售给了一家阿联酋公司，但最后却在叙利亚被用来监视不同政见者。“Vupen不知道他们的漏洞被如何利用，他们可能也不想知道，只要支票兑现就行。”Vupen并不是唯一一家出售安全漏洞的公司，但与这家位于法国蒙彼利埃的小公司相比，其他买卖黑客技术的公司，包括Netragard和Endgame以及Northrop Grumman和Raytheon等规模更大的公司，则更加守口如瓶。贝克拉用“透明”来形容自己的公司，而索菲安则说这家公司“无耻”。“Vupen就是这个行业的Snooki(美国真人秀节目《泽西海岸》的明星，行为大胆出格——译注)。”索菲安说，“他们寻找宣传自己的机会，但他们甚至没有意识到，他们根本不入流。他们就是漏洞交易领域里的《泽西海岸》。”即使如此，贝克拉也不愿公布收入数据，虽然他坚称公司实现了盈利。但有个人愿意公布这类销售数据。他是南非的一位黑客，人称“Grugq”，住在曼谷。一年多来，除了担任安全研究员的薪水之外，Grugq还以高端漏洞经纪人的身份赚“外快”，为其黑客朋友和其政府买家牵线搭桥。他表示，他收取15%的销售佣金，今年很可能从这类交易中挣到100多万美元。他说：“我现在拒绝做2.5万美元以下的生意。”仅在去年12月，他就从政府买家手中赚了25万美元。“年终时的收入简直肥得流油。”但Grugq认为，贝克拉的初创公司都是自己寻找安全漏洞，因此更加赚钱得多。“他真他X的聪明。”Grugq说，“主动权完全在他手里。他可以要求客户按照他提出的价格购买，否则就卖给其他人。”尽管贝克拉谈到了“透明”，但关于他的个人经历和在创建Vupen之前的工作，甚至是自己的年龄，他都不愿意多说。Vupen是他创建的第三家公司，专注于发现软件中的安全漏洞。他之前创建的K-Otik和FrSIRT公司都曾公布他们发现的漏洞。即便是在2008年创建了Vupen(这个名字代表了“漏洞研究”和“渗透测试”)之后，贝克拉及其研究人员起初也是与软件供应商合作，帮助他们修复漏洞。但从360资本合伙公司(360 Capital Partners)和甘特合伙公司(Gant&amp;amp;Partners)获得150万美元风险投资之后，贝克拉发现公司可以赚到远远更多的钱，方法就是不公开公司发现的安全漏洞，而是以高价出售。后来，贝克拉甚至公开嘲笑那些产品被其黑掉的公司。2011年5月，Vupen发布了一段视频，显示该公司可以侵入运行Chrome的电脑，但没有向谷歌提供进一步的信息。当谷歌回应称Vupen利用的是Chrome的Flash插件而不是Chrome本身时，贝克拉在Twitter上指责谷歌试图淡化其安全漏洞，并说谷歌“太差劲”。作为回应，谷歌的安全人员指责贝克拉无视用户隐私，并说他是“挑战道德的机会主义者”。贝克拉对这种批评不屑一顾。“我们不会这么努力地去帮助数十亿美元的软件公司编写安全的代码。”他说，“如果我们想做志愿者，我们会去帮助无家可归的人。”来自：腾讯科技扩展阅读：G Data （http://www.gdata-china.com ）于1985年成立于波鸿（德国）, 在20多年前开发了第一款杀毒软件。G Data采用双引擎扫描技术及爆发护盾技术，病毒侦测率高达99.9%，拥有独步天下的病毒查杀能力。G Data获得德国国内及国际上的众多荣誉奖项，产品已经在全世界90多个国家销售，是全世界最著名的杀毒软件和安全产品服务商之一。G Data杀毒软件免费试用下载地址：http://www.gdata-china.com/down.html</description></item><item><title>devstack安装 g-api did not start</title><link>/posts/devstack_install_g-api_did_not_start/</link><pubDate>Thu, 12 Sep 2013 17:00:00 +0000</pubDate><guid>/posts/devstack_install_g-api_did_not_start/</guid><description>使用ubuntu12.4+devstack来实验openstack,出现了g-api did no start,找了下资料，通过一下方式解决。只要修改 /etc/default/locale LANG=&amp;ldquo;POSIX&amp;quot;详情见：https://bugs.launchpad.net/devstack/+bug/1119428</description></item><item><title>openstack重启br-ex丢失解决办法</title><link>/posts/openstack_restart_br-ex_missing_solution/</link><pubDate>Thu, 12 Sep 2013 09:15:00 +0000</pubDate><guid>/posts/openstack_restart_br-ex_missing_solution/</guid><description>安装RDO成功后，如果重启系统，br-ex就会丢失，没有开机启动，导致网络有问题，只要手工添加配置文件就可以解决该问题一下是我的配置文件/etc/sysconfig/network-scripts/ifcfg-br-ex/etc/sysconfig/network-scripts/ifcfg-eth1/etc/sysconfig/network-scripts/ifcfg-eth2相应的按照你的配置修改配置文件，重启网络服务、或系统即可正常使用。</description></item><item><title>openstack简单使用</title><link>/posts/openstack_simple_to_use/</link><pubDate>Thu, 12 Sep 2013 05:44:00 +0000</pubDate><guid>/posts/openstack_simple_to_use/</guid><description>openstack的界面虽然还不完善，但是基本功能都已经有了，而且比较明了。下面简要记录下使用流程，为刚刚接触openstack的一些指引。简单使用：登录系统点击“Images&amp;amp;Snapshots”点击Images列表右边的Launch输入instance name,实例名字Flavor选择smallInstance count是实例个数Access&amp;amp;security为导入实例的keyNetworking选择private然后点击launch点击instances查看当前的实例运行情况点击实例，在对应的实例上点击”more“-》”associate floating ip”等分配成功后，可以通过该floating ip访问该虚拟机Ssh -i key.pem fedora@ip</description></item><item><title>ubuntu12.4硬盘安装</title><link>/posts/ubuntu124_hard_disk_installation/</link><pubDate>Tue, 10 Sep 2013 13:16:00 +0000</pubDate><guid>/posts/ubuntu124_hard_disk_installation/</guid><description>下载镜像后，提取下载镜像casper文件夹下的vmlinuz initrd.lz放到系统盘的根目录下，ubuntu12.04的安装镜像则保存为linux.iso也放在系统盘下。然后修改或手工收入grub参数启动如果是grub2.0,则为set root=(hd0&amp;hellip;.)使用自动补全即可linux /vmlinuz&amp;hellip;其他相同</description></item><item><title>Fedora19上安装rdo-openstack-havana</title><link>/posts/fedora19_install_rdo-openstack-havana/</link><pubDate>Tue, 10 Sep 2013 12:19:00 +0000</pubDate><guid>/posts/fedora19_install_rdo-openstack-havana/</guid><description>最小化安装fedora19,只使用fedora源，把update和update-testing关掉。更新系统（好像也没有必要）后按照文档进行安装。我安装了havana版本安装后再更新解决horizon报错问题。详情见：https://bugzilla.redhat.com/show_bug.cgi?id=1000391这样系统就可以使用了floating ip好像还有点问题，等解决了再更新。</description></item><item><title>openstack安装试用</title><link>/posts/openstack_installation_trial/</link><pubDate>Fri, 06 Sep 2013 06:51:00 +0000</pubDate><guid>/posts/openstack_installation_trial/</guid><description>近期准备学习下openstack，便自己实验openstack安装。把这几天的过程记录下来。由于openstack组建众多，对于一个新手来说还是比较复杂的。当前有很多种安装openstack的方式。最早我在fedora19上实验了devstack,安装后有问题，安装过程有一个服务链接timeout，手动没有问题；创建的虚拟机也无法正常使用，便告一段落，现在回想也可能是当时使用不怎么正确。然后使用RDO在fedora19上安装，不管使用update-testing源，还是稳定的yum源，解决了安装过程中各种报错后的系统无法使用。认证错误。最后使用redhat openstack,终于顺利的安装成功，可以体验openstack了。使用redhat openstack安装非常简单，只需要注册一个redhat帐号，然后跟着文档一步一步来就可以了。等对openstack熟悉了，再尝试其他的安装方式。</description></item><item><title>[zz]迅雷回应流氓插件事件 “员工违规解释”存蹊跷</title><link>/posts/zz_thunder_responded_rogue_plug-in_event_quotexplained_staff_violationquot_kept_strange/</link><pubDate>Thu, 22 Aug 2013 14:37:00 +0000</pubDate><guid>/posts/zz_thunder_responded_rogue_plug-in_event_quotexplained_staff_violationquot_kept_strange/</guid><description>2013-08-22 09:34比特网佚名关键字：流氓插件 迅雷 迅雷流氓插件事件 员工违规操作比特(ChinaByte)8月22日消息，今年8月初以来，关于迅雷客户端“制造并传播病毒”的传闻在业内广泛流传，就此，今日迅雷方面做出回应，称报道中所指的“病毒插件”实为公司视频事业部某负责人避开公司流程，擅自制作上线的一个流氓插件。公司目前已开除该事件负责人，同时，对上级负责人给予记过、警告以及罚款等处罚。据了解这款病毒插件在用户手机连接到电脑时，其在满足某些条件时，会在用户不知情的情况下，该程序会后台下载并自动安装APK到连接至当前计算机的手机上，这些APK为“九游棋牌大厅”、“91手机助手”、“360手机助手”、“UU网络电话”、“机锋应用市场”带来流量。扩散近两个月，已有超过2800万用户中招。在昨天迅雷公司总部临时召开的发布会上，迅雷高级副总裁黄芃称，迅雷早在7月27号就接到用户反馈，发现上述程序可能是流氓插件，经过排查后发现，此插件系迅雷集团视频事业部传媒部门某经理避开公司规定流程，私自制作上线的一款插件，公司在发现问题一周后就开除了这位部门经理，并对其上级同时进行处罚。对于迅雷给出的“解释”，外界并不买账。一种观点认为，迅雷是内部冲业绩的铤而走险的行为。据媒体报道，传言出来后，腾讯电脑管家，金山、360等杀毒软件已先后检测到上述恶意程序，并在7月下旬通知迅雷公司进行联合处理，但直到8月21日，迅雷方面才给出官方回应，处理并不及时，说明事件背后有更深层次的原因。迅雷客户端的一位高管邮件向媒体透露，推送九游棋牌大厅、91手机助手、360手机助手、UU网络电话、机锋应用市场的事情，是经过公司领导审批的。&amp;ldquo;置换推广的策略本身没有问题，但是执行手段属于病毒行为，和公司推行用户体验至上的原则是背道而驰的。”也有内部人士称，根本原因在于，迅雷看看今年设定的移动安装量，要求每日新增15万，正常需要推广费用5400万元，但公司给的预算只有800万用于无线推广。该被处理的员工会不会是事件的“替罪羊”？对于这种推测，迅雷方面称，这些应用原本与迅雷集团有流量互换的合作，但该员工的行为并未得到这些应用公司的许可。迅雷CEO邹胜龙在发布会上表示了对用户的歉意，并表示今后会完善公司的员工和流程管理机制。同时迅雷方面目前正通过腾讯电脑管家、金山软件、奇虎360等合作伙伴清除用户电脑上的这款插件。</description></item><item><title>fedora19中使用wps：No necessary symbol fonts</title><link>/posts/fedora19_use_the_wps_no_necessary_symbol_fonts/</link><pubDate>Wed, 21 Aug 2013 08:15:00 +0000</pubDate><guid>/posts/fedora19_use_the_wps_no_necessary_symbol_fonts/</guid><description>1下载如下内容文件名： symbol-fonts-1.2-1.noarch.rpmbox网盘下载链接： https://app.box.com/s/wmsdpn8x9qpcbcnekke1金山快盘下载链接： http://www.kuaipan.cn/file/id_19418406138675465.htm百度网盘下载链接： http://pan.baidu.com/share/link?shareid=3371036765&amp;amp;uk=505215462文件大小： 246 KB (252,171 字节)md5码： 4a7649c69e15983a6e69c31f38f64c62sha1码： 9d00e765169bba5f1351cf7f21a15ae3e26dcb082、把rpm包里面的文件解到mkdir /usr/share/fonts/symbol-fonts目录rpm2cpio ~/下载/symbol-fonts-1.2-1.noarch.rpm |cpio -idum然后执行fc-cache -fv再打开wps就没有问题了。参考地址：http://community.wps.cn/wiki/No_necessary_symbol_fontshttp://bbs.wps.cn/thread-22355435-1-1.html</description></item><item><title>fedora19系统t430s使用小红帽</title><link>/posts/fedora19_system_t430s_use_little_red_riding_hood/</link><pubDate>Tue, 20 Aug 2013 15:19:00 +0000</pubDate><guid>/posts/fedora19_system_t430s_use_little_red_riding_hood/</guid><description>执行以下命令，或者放入开机启动的脚本中即可：set -euid=$(xinput list | sed -n &amp;lsquo;/TPPS/2 IBM TrackPoint/s/.*id=([0-9]+).*/1/p&amp;rsquo;)emu=$(xinput list-props &amp;ldquo;$id&amp;rdquo; | sed -n &amp;lsquo;/Evdev Wheel Emulation (/s/.*(([0-9]+)).*/1/p&amp;rsquo;)but=$(xinput list-props &amp;ldquo;$id&amp;rdquo; | sed -n &amp;lsquo;/Evdev Wheel Emulation Button (/s/.*(([0-9]+)).*/1/p&amp;rsquo;)axs=$(xinput list-props &amp;ldquo;$id&amp;rdquo; | sed -n &amp;lsquo;/Evdev Wheel Emulation Axes (/s/.*(([0-9]+)).*/1/p&amp;rsquo;)xinput set-int-prop &amp;ldquo;$id&amp;rdquo; &amp;ldquo;$emu&amp;rdquo; 8 1xinput set-int-prop &amp;ldquo;$id&amp;rdquo; &amp;ldquo;$but&amp;rdquo; 8 2不同的型号可能值不同，可以通过工具gpointing-device-settings设置。</description></item><item><title>linux 下如何通过软件模拟按键[转-修改]</title><link>/posts/how_software_under_linux_analog_buttons_turn_-_modify/</link><pubDate>Wed, 14 Aug 2013 17:13:00 +0000</pubDate><guid>/posts/how_software_under_linux_analog_buttons_turn_-_modify/</guid><description>其实在/dev/input/by-path目录下面的文件名有表明是什么设备，键盘还是鼠标，可以通过文件名来确认键盘所对应的dev设别，然后对该文件进行处理。然后按以下的内容进行操作即可。linux 下如何通过软件模拟按键[转-修改]转自：http://zhgw01.blog.163.com/blog/static/10414812200992854628702/参考http://www.linuxdiyf.com/viewarticle.php?id=104221名词解释：scancode: 驱动对硬件的标记keycode： 上层应用程序所见的标记，跟硬件的标记不同， 一般为KEY_F1之类的宏一般驱动将scancode绑定到keycode对未绑定的scancode, 可以通过setkeycodes将将其绑定到未使用的keycode注： 有些按键会被解释成acpi event, 可以通过acpi_listen来监听，但不一定成功，目前还没具体了解模 拟按键是上层应用程序的行为， 所以不需要编译成模块，只需要想平常的应用程序那样编译就可以了， 不过它要包含&amp;lt;linux/input.h&amp;gt;这个文件， 同时要明确键盘对应的/dev/input/event[0-4]到底是哪个文件， 此外还需要以root权限来运行赖半仙注解：运行命令 cat /proc/bus/input/devices 在输出里面查找 xxx keyboard 对应的文件是/dev/input/event几。我开始想当然的以为键盘文件是event1,结果死人都调不出来，弄了很久最后从event0开始一个一个试，才发现我的手提电脑键盘文件对应的是event4。在我的电脑上运行命令 ls /dev/input/event* 发现有好多输入设备…………/dev/input/event0 /dev/input/event10 /dev/input/event2 /dev/input/event4 /dev/input/event6 /dev/input/event8/dev/input/event1 /dev/input/event11 /dev/input/event3 /dev/input/event5 /dev/input/event7 /dev/input/event9下面是 cat /proc/bus/input/devices 命令对应键盘文件的一段输出I: Bus=0011 Vendor=0001 Product=0001 Version=ab41N: Name=&amp;ldquo;AT Translated Set 2 keyboard&amp;quot;P: Phys=isa0060/serio0/input0S: Sysfs=/devices/platform/i8042/serio0/input/input4U: Uniq=H: Handlers=kbd event4 B: EV=120013B: KEY=8000 0 0 0 0 0 5007 2002000 380307c f800d001 feffffdf ffefffff ffffffff ffffffffB: MSC=10B: LED=7下面的程序是模拟按键NumLock，就是控制小键盘灯的那个按键，按下去（运行程序没有问题）后小键盘灯就会点亮或者熄灭。 #include &amp;lt;linux/input.h&amp;gt;#include &amp;lt;time.</description></item><item><title>[zz] extJs常用的四种Ajax异步提交</title><link>/posts/zz_extjs_four_common_ajax_asynchronous_commit/</link><pubDate>Thu, 08 Aug 2013 08:09:00 +0000</pubDate><guid>/posts/zz_extjs_four_common_ajax_asynchronous_commit/</guid><description>extJs常用的四种Ajax异步提交分类： ExtJs2010-06-01 16:52 2973人阅读 评论(0) 收藏 举报ajaxextjsfunctionactionuserhtml[java] view plaincopy/** * * 第一种Ajax提交方式 * * * 这种方式需要直接使用ext Ajax方法进行提交 * * * 使用这种方式，需要将待传递的参数进行封装 * * * @return */ function saveUser_ajaxSubmit1() { Ext.Ajax.request( { url : &amp;lsquo;user_save.action&amp;rsquo;, method : &amp;lsquo;post&amp;rsquo;, params : { userName : document.getElementById(&amp;lsquo;userName&amp;rsquo;).value, password : document.getElementById(&amp;lsquo;password&amp;rsquo;).value }, success : function(response, options) { var o = Ext.util.JSON.decode(response.responseText); alert(o.msg); }, failure : function() { } }); } /** * * 第二种Ajax提交方式 * * * 这种方式将为ext的ajax指定一个html表单 * * * 使用这种方式，不需要将待传递的参数进行封装 * * * @return */ function saveUser_ajaxSubmit2() { Ext.</description></item><item><title>[zz]ExtJS之Ext.Ajax.request用法详解</title><link>/posts/zz_extjs_detailed_usage_of_extajaxrequest/</link><pubDate>Thu, 08 Aug 2013 08:07:00 +0000</pubDate><guid>/posts/zz_extjs_detailed_usage_of_extajaxrequest/</guid><description>ExtJS之Ext.Ajax.request用法详解 RIA-ExtJS专栏EXTAjaxjsonOO浏览器 Java代码 &amp;lt;span style=&amp;ldquo;font-size: medium;&amp;quot;&amp;gt;Ext.Ajax.request({ url:&amp;lsquo;findbyid.action&amp;rsquo;, params:{ id:cell.getId() }, success: function(resp,opts) { var respText = Ext.util.JSON.decode(resp.responseText); name=respText.name; oid=respText.id; findbyid(graph,cell,oid,name); //Ext.Msg.alert(&amp;lsquo;错误&amp;rsquo;, respText.name+&amp;quot;=====&amp;quot;+respText.id); }, failure: function(resp,opts) { var respText = Ext.util.JSON.decode(resp.responseText); Ext.Msg.alert(&amp;lsquo;错误&amp;rsquo;, respText.error); } });在Ext开发过程中，基本上时刻需要用到异步请求，那么这个请求到底是怎么执行的呢，我们接下来来探讨下 首先：Ext.Ajax类继承了Ext.data.Connection，为Ajax的请求提供了最大灵活性的操作方式再简单请求基础上我们加上一个使用的 说明的是这种请求通常都是放在触发某个事件的处理方法中的url:就是我们要请求的路径params:里面的参数用逗号隔开，就是我们要发出请求带的参数success:是服务器处理成功返回failure:是服务器处理失败返回重点讲的就是如何处理返回值信息，我们的resp这个参数就显得非常重要了resp是Ext构造的一个返回结果对象，如服务器端返回“this is a test！”（可以通过throw new Exception(&amp;ldquo;this is a test!&amp;quot;)简单实现)。那么返回将是如下内容：Java代码 &amp;lt;span style=&amp;ldquo;font-size: medium;&amp;quot;&amp;gt;tId.1 status.200 statusText.OK getResponseHeader.[object Object] getAllResponseHeaders.Server: Apache-Coyote/1.1 Content-Type: text/html;charset=GBK Content-Language: zh-CN Content-Length: 108 Date: Wed, 31 Oct 2007 12:51:23 GMT responseText. 错误错误：this is a test!</description></item><item><title>rhel6.4/Fedora18/19上kerberos安装实验</title><link>/posts/kerberos_install_experimental_rhel64fedora1819/</link><pubDate>Wed, 31 Jul 2013 06:05:00 +0000</pubDate><guid>/posts/kerberos_install_experimental_rhel64fedora1819/</guid><description>在rhel6.4上安装kerberos实验，理解kerberos原理。安装步骤如下：安装krb，yum install krb5-*修改hosts文件：添加ip kerberos.example.com kerberos主要是修改主机名，修改host是为了找到地址在fedora18/19等系统还需要修改/etc/hostname，添加主机名：kerberos.example.com在rhel的系统中在 /etc/sysconfig/network文件中如果以上修改有误，可能会提示默认的krb配置基本就可以使用了，krb初始化kdb5_util create -r EXAMPLE.COM -s启动服务service krb5kdc start安装完毕，可以使用你的Krb服务了。测试方法：创建一个sample的principal，用来给服务程序使用kadmin.local:addprinc sample/kerberos.example.com@EXAMPLE.COMkadmin.local:ktadd -k /etc/krb5.keytab sample/kerberos.example.com@EXAMPLE.COM创建一个用户的principalkadmin.local:addprinc test1/kerberos.example.com@EXAMPLE.COM运行测试服务程序：sserver -p 8899 -s sample登录系统，执行kinit获取principal:kinit test1/kerberos.example.comklist查看相关内容sclient kerberos.example.com 8899 sample返回success，说明配置正确。其他测试程序1、sim_serversim_server -p 8888 -s samplesim_client -p 8888 -h kerberos.example.com -m hello2、uuserver修改/etc/services添加uu-sample 8888/tcp #uu-sample添加一个新的pricipal,使用该principal登录，然后执行uuserver用另外一个principal登录，然后执行uuclient kerberos.example.com message</description></item><item><title>install vmware 9.0.2 on fedora 19</title><link>/posts/install_vmware_902_on_fedora_19/</link><pubDate>Tue, 30 Jul 2013 13:20:00 +0000</pubDate><guid>/posts/install_vmware_902_on_fedora_19/</guid><description>不能用，需要修改vmware的驱动，在http://forums.fedoraforum.org/showthread.php?t=292907找到了解决办法，内容如下。Re: vmware player 5.0.2 onf fc19 (3.10.3-300.fc19.x86_64) - who got it running?I have 5.0.2 running. To get it running at all, I first had to do a tweak to the /usr/bin/vmplayer file to allow VMPlayer to run in Fedora 19.1. Open /usr/bin/vmplayer in nano or other text editor of your choice, using sudo or su.2. Look for the lines that read as follows:Code:3. Add the following after the above lines:Code:4. Save the file.</description></item><item><title>[zz]RHEL 5/6 差异：时间处理机制</title><link>/posts/zz_rhel_56_difference_time_handling_mechanism/</link><pubDate>Mon, 29 Jul 2013 17:13:00 +0000</pubDate><guid>/posts/zz_rhel_56_difference_time_handling_mechanism/</guid><description>when you use different linux system,you will find the time&amp;rsquo;s different between the systems,here is the reason.RHEL 5/6 差异：时间处理机制06.29.2012, 系统服务 , by Roger.RHEL 5/6 差异：时间处理机制作者：Roger简介本文介绍了在 RHEL5 和 RHEL 6 两个版本系统中，对待时间的差异。目的在于帮助我们了解系统，应对OS升级的改动。概述RHEL 5/6 时间机制差异类别RHEL 5RHEL 6建议Anaconda 参数timezone &amp;ndash;utc修改/etc/sysconfig/clock修改/etc/adjtime对用户透明，不用调整开机初始化脚本，硬件时钟到系统时钟/etc/rc.d/rc.sysinit传参调用hwclock内核直接读取rtc_cmos获取时间/etc/sysconfig/clock需要区分关机脚本，系统时钟到硬件时钟/etc/rc.d/init.d/halt传参数调用hwclock/etc/rc.d/init.d/halt直接调用hwclock/etc/sysconfig/clock需要区分NTP软件包一个包：ntp-4.2.2p1-9.el5_3.2三个包：ntp-4.2.4p8-2.el6.centos.i686ntp-perl-4.2.4p8-2.el6.centos.i686ntpdate-4.2.4p8-2.el6.centos.i686RHEL 6 把 RHEL 5 一个包拆成了三个RHEL 6 建议三个包都安装ntpd启动脚本一个脚本：/etc/rc.d/init.d/ntpd两个脚本：/etc/rc.d/init.d/ntpd/etc/rc.d/init.d/ntpdateRHEL 6 中添加了ntpdate启动脚本，相当于额外多了一个服务，需要注意RHEL 5 与 RHEL 6 中，时间这块，外围软件包改动并不大，例如hwclock，NTP。改动比较大的是：Anaconda安装系统时，timezone &amp;ndash;utc的处理方式。开机读取硬件时钟的机制。关机写入硬件时钟的机制。linux 时间存储 原理分析首先需要了解的概念：硬件时钟系统时钟其次，BIOS里硬件时钟存的仅是一个UNIX时间戳。这个时间戳，有UTC时钟和LOCAL时钟两钟存法。UTC时间LOCAL时间（本地时间）注意点：我们所说的system clock use UTC (timezone &amp;ndash;utc) 实际上就是指BIOS里的时钟存法。与系统的“时区”没有关系。这点不要混淆。这里举一个你常见的例子：笔记本双系统，win+linux，如果linux使用了UTC时间，那么两个系统就会差8小时。原因：Unix规范里BIOS时钟存UTC时间戳，但windows改成了只支持存LOCAL时间戳（就是你墙上的时间），而linux两个格式都支持。这时，如果你linux使用了UTC时间，就会把BIOS的时间戳当作UTC时间，而你的windows把BIOS时间戳当作LOCAL时间。所以无论你怎么调，两个系统时间都不会一致。hwclock说到linux下的时钟，一定不能忽略hwclock，硬件时钟和系统时钟的互写就全靠它了。后续我们详解hwclock的工作机制。推荐看 man clock。开机对时钟的处理我们电脑关机状态时，硬件上的晶振会持续保存一个时间，这个时间就是硬件时钟。进入BIOS便可以看到。开机后，系统将硬件时钟读入系统，然后开始维持时间的增长。硬件时钟仅开机读取一次，由于进入了OS，我们有很多途径让时钟更准确，比如NTP等，这时的硬件时钟对我们是没有用的。关机对时钟的处理要关机了，系统会把时间写入硬件时钟，相当于更新硬件时钟。RHEL 5/6 都是/etc/rc.d/init.d/halt调用hwclock来写入硬件时钟，细节上略有不同，但都是做一样的事情。hwclockRHEL 5/6 中hwclock机制并没有变化：这里需要注意的是：hwclock维护一个文件，/etc/adjtime，用来确定硬件时钟是UTC还是LOCAL。hwclock原理分析：我们直接执行hwclock，就是读取硬件时钟。01[root@centos6 install]# strace -e trace=open hwclock02open(&amp;quot;/etc/ld.so.cache&amp;quot;, O_RDONLY) = 303open(&amp;quot;/lib/libaudit.</description></item><item><title>[zz]“全球最牛”黑客美国暴毙 死前计划表演遥控杀人(图)</title><link>/posts/zz_quotthe_world39s_most_cattlequot_hackers_united_states_plans_to_perform_remote_kill_died_suddenly_died_figure/</link><pubDate>Mon, 29 Jul 2013 10:59:00 +0000</pubDate><guid>/posts/zz_quotthe_world39s_most_cattlequot_hackers_united_states_plans_to_perform_remote_kill_died_suddenly_died_figure/</guid><description>“全球最牛”黑客美国暴毙 死前计划表演遥控杀人(图)2013年07月29日 02:32来源：北京晨报分享到：4849人参与566条评论巴纳拜·杰克在黑客会议上，自动提款机不断吐出钞票。原标题：全球最牛黑客暴毙 生前曾让ATM机吐钞票 死前计划表演遥控杀人现年35岁的美国著名黑客巴纳拜·杰克(见图)在2010年“黑帽”黑客会议上利用他独创黑客技术令自动提款机狂吐钞票，一跃成为全球最牛的“明星黑客”。而他本打算在7月31日开幕的2013年“黑帽”黑客会议上，展示一项更为惊人的黑客绝技——遥控杀人。然而蹊跷的是，7月25日，就在这项“黑客绝技”曝光前夕，杰克突然在美国旧金山神秘死亡！据报道，巴纳拜·杰克是一名出生于新西兰的黑客、程序员和计算机安全专家。他曾花了2年时间研究如何破解自动提款机。2010年7月28日，在美国拉斯维加斯举行的一年一度的“黑帽”黑客会议上，杰克将2台ATM搬到“黑帽”会场上，他刚一执行破解程序，自动提款机便不断吐出钞票，在地上堆成一座小山！这段“提款机破解秀”堪称2010年“黑帽”黑客会议上最为轰动的精彩好戏。时隔整整3年之后，身为“明星黑客”的杰克重出江湖，打算在7月31日开幕的“黑帽”黑客会议上，展示一项更为惊人的“黑客绝技”——在9米之外入侵植入式心脏起搏器等无线医疗装置，然后向其发出一系列830V高压电击，从而令“遥控杀人”成为现实！杰克声称，他已经发现了多家厂商生产的心脏起搏器的安全漏洞。由于美国警方拒绝透露杰克死亡细节，杰克的死引发了各种疯狂阴谋论——有阴谋论者指出，杰克最新针对医疗设备的“遥控杀人”技术不仅会对公众的生活安全构成威胁，也将令生产这些存在漏洞的医疗设备的厂商的名誉和经济利益遭到重创，不排除杰克因此惹火烧身，招来杀身之祸。晨报综合消息</description></item><item><title>[zz]报道称巴西遭到NSA重点监视 要求美方做出解释</title><link>/posts/zz_reported_that_brazil_was_the_focus_of_the_monitoring_requirements_of_the_us_nsa_explanation/</link><pubDate>Mon, 08 Jul 2013 15:57:00 +0000</pubDate><guid>/posts/zz_reported_that_brazil_was_the_focus_of_the_monitoring_requirements_of_the_us_nsa_explanation/</guid><description>报道称巴西遭到NSA重点监视 要求美方做出解释2013-07-08 09:38:38 1708 次阅读 稿源：cnBeta.COM 0 条评论昨日早些时候，巴西日报《Globo》上的一篇报道称，在过去的几十年里，美国国家安全局(NSA)一直在监视发起自该国的电子通讯和电话呼叫。此前揭露美国高度机密的监视项目的《卫报》记者Glenn Greenwald合著了这篇报道。该报道据说已通过斯诺登向Greenwald泄露的进一步文档而被证实，后者目前正在寻求多个国家的庇护，以期避免其在美国的间谍指控。该报道在揭示了有多少流量被监视后就戛然而止，但称巴西被NSA当做重点监视对象。该国外交部在一份声明中表示，&amp;ldquo;巴西政府对于巴西民众的电子和电话通讯被美国情报机构当做监视目标的新闻表示严重关切&amp;rdquo;。巴西已经表示，它将要求美方官员对此作出解释，并向国际电信联盟寻求解决方案，以更好地确保该国民众的隐私。[编译自：TheVerge , 来源：Reuters]</description></item><item><title>Snowden声称NSA和以色列合作开发了Stuxnet蠕虫</title><link>/posts/snowden_claimed_that_nsa_and_israel_jointly_developed_the_stuxnet_worm/</link><pubDate>Mon, 08 Jul 2013 15:49:00 +0000</pubDate><guid>/posts/snowden_claimed_that_nsa_and_israel_jointly_developed_the_stuxnet_worm/</guid><description>Snowden声称NSA和以色列合作开发了Stuxnet蠕虫2013-07-08 16:24:53 1826 次阅读 稿源：Solidot 0 条评论Edward Snowden在接受德国《明镜周刊》的采访中透露（英文翻译），美国国家安全局（NSA）和以色列联手开发了破坏伊朗铀浓缩设备的Stuxnet蠕虫。《纽约时报》曾在2011年引用一本新书的内容声称，美国和以色列开发和部署了Stuxnet蠕虫，目的是通过向工业控制系统发送特定指令改变转速破坏伊 朗铀浓缩离心机。Snowden指出，NSA有一个部门叫外国事务理事会FAD，它一直与外国政府如以色列密切合作，与以色列共同开发了Stuxnet。采访并没有透露多少细节。Snowden说，英国情报总监GCHQ的监控项目Tempora在情报领域首次引入了全盘储存概念，保存所有数据，而不管数据究竟是什么，是否侵犯隐私，凡是发送或经过英国的数据包都会被GCHQ保存下来。</description></item><item><title>git-web中添加用户认证</title><link>/posts/git-web_to_add_user_authentication/</link><pubDate>Thu, 04 Jul 2013 10:10:00 +0000</pubDate><guid>/posts/git-web_to_add_user_authentication/</guid><description>git-web默认配置没有用户认证,有时为了权限控制,认证还是必须的.在网上找了下,动手修改,解决办法如下:使用一下的配置文件可以添加密码验证&amp;lt;VirtualHost *:80&amp;gt; ServerName gitweb.example.com DocumentRoot /var/www/gitweb/public_html DAV on AuthType Basic AuthName &amp;ldquo;Private Git Repository&amp;rdquo; AuthUserFile /etc/apache2/dav_git.passwd Require valid-user Options ExecCGI +FollowSymLinks +SymLinksIfOwnerMatch AllowOverride All order allow,deny Allow from all AddHandler cgi-script cgi DirectoryIndex gitweb.cgi 然后使用设置HTTP认证密码，这个密码和git仓库的提交无关htpasswd -c /etc/apache2/dav_git.passwd YourName来设置密码文件中的密文如果没有需要开启模块12. 为gitweb指定仓库地址 编辑 /etc/gitweb.conf 写入$projectroot = &amp;ldquo;/var/git&amp;rdquo;; 13. 开启apache2相应模块a2enmod dav_fsa2enmod dav</description></item><item><title>[zz][图]安全专家展示如何成功从银行“盗取”1400万美元</title><link>/posts/zz_figure_security_experts_show_you_how_to_succeed_from_the_bank_quotstealquot__14_million/</link><pubDate>Sat, 18 May 2013 15:14:00 +0000</pubDate><guid>/posts/zz_figure_security_experts_show_you_how_to_succeed_from_the_bank_quotstealquot__14_million/</guid><description>[图]安全专家展示如何成功从银行“盗取”1400万美元teikaei 发布于 2013-05-16 11:43:40|9361 次阅读 稿源:cnBeta.COM 在很多影视作品中，我们可以看到很多高智商的抢劫者都会利用银行的一些安全漏洞来实施银行抢劫。近日，安全专家Nisha Bhalla就向人们展示了他是如何成功地从银行“盗取”了1400万美元的。Bhalla是安全公司Security Compass的CEO。这家公司专门负责入侵目标公司的安全系统并寻找存在于该系统中的安全漏洞。近日，美国的一家银行就专门聘请了这家公司来帮他们进行安全测试。而测试的结果结果就是&amp;ndash;这家银行的安全系统并不安全。据悉，Bhalla利用漏洞在该银行的系统中为自己设置了一个支票账号，并在上面为自己填入1400万美元的款项。然后，他再到一台ATM取款机上打印出了一张收据（如下图）&amp;ndash;显示此时的他拥有1400万美元的资金。</description></item><item><title>[zz][图]默认阻止第三方Cookie Mozilla放出Firefox 22 beta版本</title><link>/posts/zz_image_default_prevent_third_parties_cookie_mozilla_released_firefox_22_beta_version/</link><pubDate>Sat, 18 May 2013 15:14:00 +0000</pubDate><guid>/posts/zz_image_default_prevent_third_parties_cookie_mozilla_released_firefox_22_beta_version/</guid><description>[图]默认阻止第三方Cookie Mozilla放出Firefox 22 beta版本study875发布于 2013-05-17 08:02:17|2250 次阅读 稿源:cnBeta.COM 就在前几天Mozilla推送Firefox 21正式版不久，首个Beta版本Firefox 22就出现在我们的面前。新版本带来一些新的功能和改善，并有望加入了6周前发布的长期稳定版本中。新版相比较Firefox 21最大的改进在于为用户提供更加安全的保护机制，能够防止未经授权的第三方cookie。在默认情况下，所有的第三方cookies都处于屏蔽状态，用 户需要通过设置才能在知情的情况下打开。</description></item><item><title>[zz]LulzSec四名黑客成员在英国获刑</title><link>/posts/zz_lulzsec_hacker_four_members_jailed_in_britain/</link><pubDate>Sat, 18 May 2013 15:12:00 +0000</pubDate><guid>/posts/zz_lulzsec_hacker_four_members_jailed_in_britain/</guid><description>LulzSec四名黑客成员在英国获刑teikaei 发布于 2013-05-17 10:14:16|1862 次阅读 稿源:cnBeta.COM 据外媒报道，日前，黑客组织LulzSec的四名成员在英国法庭接受了审判。他们承认曾攻击过20世纪福克斯、CIA、任天堂、索尼等多家知名公司和机构。根据审判结果，代号为“Topiary”的Jake Davis将在青年劳改所中服刑2年时间；代号为&amp;quot;Viral&amp;quot;的Ryan Cleary则被判在监狱服刑32个月，不过实际上他只需要服满16个月即可；</description></item><item><title>[zz]“叙利亚电子军”入侵FT网站及其Twitter账户</title><link>/posts/zz_quotsyrian_electronic_armyquot_invasion_ft_website_and_twitter_accounts/</link><pubDate>Sat, 18 May 2013 15:05:00 +0000</pubDate><guid>/posts/zz_quotsyrian_electronic_armyquot_invasion_ft_website_and_twitter_accounts/</guid><description>“叙利亚电子军”入侵FT网站及其Twitter账户ugmbbc发布于 2013-05-18 07:03:00|941 次阅读 稿源:华尔街见闻 感谢财经资讯的投递北京时间5月17日晚8点，黑客组织叙利亚电子军(Syrian Electronic Army)攻击了英国金融时报(FT)的网站极其Twitter账户。 如下图所示，叙利亚电子军在FT的科技博客栏目下留言：“叙利亚电子军到此一游！”FT的Twitter帐号也受到了该组织的入侵：此前英国卫报(Guardian)也受到过该组织类似攻击。今年4月24日，华尔街见闻曾报道，叙利亚电子军成功入侵美联社Twitter账户，发布白宫爆炸虚假消息，引发美股大幅震荡。为了支持叙利亚人民脱离西方媒体不实报道的笼罩，叙利亚电子军在其网站上宣称将大肆进攻媒体和政府网站。下图是此前叙利亚电子军入侵BBC的天气预报Twitter账户时发布的搞笑消息：以色列特海法将发生海啸，建议居民(犹太人)返回波兰。还有特拉维夫周六气温5000开尔文。</description></item><item><title>Linux 下的文件加密</title><link>/posts/file_encryption_under_linux/</link><pubDate>Tue, 14 May 2013 16:23:00 +0000</pubDate><guid>/posts/file_encryption_under_linux/</guid><description>Linux 下的文件加密2009-06-26 xiao H Posted in 系统管理 以前我在blog 写过两篇关于linux 下目录加密的文章用Cryptkeeper和EncFS 完成目录加密和用Cryptsetup LUKS 加密目录，今天我想说说文件加密，先说简单的用VIM 加密文本文件：vim 加密使用 -x 参数，即vim -x myfile然后会提示让你输入两次密码，这样就算给你的文件加上密码了，下次要看文件用VIM 打开会要求输入密码，输入错误密码则会得到一堆乱码，用其他编辑器打开也是一堆乱码。要清除密码只要在正确打开文件后用 “:X” 指令，然后给一个空密码就行。当然vim 加密还是有很多局限的，算法弱并且中间会有交换文件，交换文件是不加密的，虽然有”-n” 参数可以不使用交换文件但不用交换文件让我不得不时刻记得要存盘。vim加密的算法很弱所以要更好的保护你的文件你需要专业的加密工具，如openssl，gpg。对称加密：a.用openssl 加密文件:加密openssl enc -aes-128-ecb -e -in myfile-out myfile-aes解密openssl enc -aes-128-ecb -d -in myfile-aes -out myfileenc 后面跟你具体的加密算法-aes-128-ecb 所使用的算法-e/-d 加密/解密-in 要被加/解密的文件-out 被加/解密后的文件b.用GnuPG加密文件关于GnuPG 之前有另一篇博文 我的GnuPG 使用笔记有关于GnuPG 更多的内容这里只说一下加密。加密gpg -c myfile #输入密码后会产生一个myfile.gpg 文件，这就是加密后的文件。解密gpg -o myfile -d myfile.gpg #解密文件myfile.gpg 并将解密后的文件输出为myfile。非对称加密前面说的都是对称加密，现在说一下非对称加密，这个应该说是我们目前使用的最安全的方法了。加密gpg -ea -r &amp;ldquo;lily.yu&amp;rdquo; hello.txt #使用lily.yu 这个密钥加密hello.txt，你会得到一个加密后的文件hello.txt.asc。-a 表示已ASCII 输出.解密gpg -o new.txt -d hello.txt.asc #解密hello.txt.asc 文件并输出到 new.</description></item><item><title>【zz]我苦苦寻找：人生的真正意义是什么</title><link>/posts/zz_i_have_been_looking_for_what_is_the_true_meaning_of_life/</link><pubDate>Sun, 07 Apr 2013 11:09:00 +0000</pubDate><guid>/posts/zz_i_have_been_looking_for_what_is_the_true_meaning_of_life/</guid><description>我苦苦寻找：人生的真正意义是什么 2012-06-22 11:55:34| 分类： 人生 |字号 订阅人生没有意义，但是我们每一个人要为自己确立一个意义给人生加个意义 那是一所很有名望的大学。从我的演讲一开始就不断地有纸条递上来。纸条上提得最多的问题是??&amp;ldquo;人生有什么意义？请你务必说真话，因为我们已经听过大多言不由衷的假话了。&amp;rdquo; 我 念完这个纸条以后台下响起了掌声。我说你们今天提出这个问题很好，我会讲真话。我在西藏阿里的雪山之上，面对着浩瀚的苍穹和壁立的冰川，如同一个茹毛饮血 的原始人，反复地思索过这个问题。我相信，一个人在他年轻的时候，是会无数次地扣问自己??我的一生，到底要追索怎样的意义？ 我想了无数个晚上和白天，终于得到了一个答案。今天，在这里，我将非常负责地对大家说，我思索的结果是人生是没有任何意义的！这句话说完，全场出现了短暂的寂静，如同旷野。但是，紧接着就响起了暴风雨般的掌声。 那是我在演讲中获得的最热烈的掌声。在以前，我从来不相信有什么&amp;quot;暴风雨般的掌声&amp;quot;这种话，觉得那只是一个拙劣的比喻。但这一次，我相信了。我赶快用手做了一个&amp;quot;暂停&amp;quot;的手势，但掌声还是绵延了若干时间。 我说，大家先不要忙着给我鼓掌，我的话还没有说完。我说人生是没有意义的，这不错，但是??我们每一个人都要为自己确立一个意义！ 是 的，关于人生意义的讨论，充斥在我们的周围。很多说法，由于熟悉和重复，已让我们??从熟视无睹滑到了厌烦。可是，这不是问题的真谛。真谛是，别人强加给 你的意义，无论它多么正确，如果它不曾进入你的心理结构，它就永远是身外之物。比如我们从小就被家长灌输过人生意义的答案。在此后漫长的岁月里，谆谆告诫 的老师和各种类型的教育，也都不断地向我们批发人生意义的补充版。但是有多少人把这种外在的框架，当成了自己的标杆，并为之下定了奋斗终身的决心？ 那一天结束讲演之后，我听到有同学说，他觉得最大的收获是听到一个活生生的中年人亲口说，人生是没有意义的，你要为之确立一个意义。 其 实，不单是中国的年轻人在目标这个问题上漂浮不定，就是在美国的著名学府哈佛大学，有很多人在青年时代也大都未确立自己的目标。我看到一则材料，说某年哈 佛的毕业生临出校门的时候，校方为他们做了一个有关人生目标的调查、结果是27％的人完全没有目标，60％的人目标模糊，10％的人有近期目标，只有3％ 的人有着清晰长远的目标。25年过去了，那3％的人不懈地朝着一个目标坚韧努力，成了社会的精英，而其余的人，成就要相差很多。 这就是人生的意义。 还有： 人生的意义 不管你是否准备好，有一天一切都会结束。不再有旭日东升，不再有灿烂的白昼，不再有一分一秒的光阴。你收藏的一切，不论是弥足珍贵的还是已经忘记的，都将留别人。 你的财富、名望和世俗的权利都将变成细枝末节的事情，不管你拥有的还是亏欠的，都不再重要。 你的嫉恨、冤仇、挫败和妒嫉之心终将消失。 同样，你的希望、雄心、计划和未竟之事都将终止。曾经无比重要的成败得失也将褪色。 你不自哪里，用什么方式生活都不重要了。 你是貌美如花还是才华横溢也不重要了。你的性别、肤色、种族都无关紧要了。 那么什么变得重要了呢？你有生之日的价值怎么来衡量呢？ 重要的不是你所买到的，而是你所创造的。 重要的不是你所得到的，而是你所付出的。 重要的不是你的成功，而是你的价值。 重要的不是你学到的，而是你传授的。 重要的是你每一次正直、怜悯、勇敢和牺牲之行为能够使人充实，让人强大或是能够激励他人，让他们以你为榜样。 重要的不是你的能力，而是你的性格。 重要的不是你认识多少人，而是在你离开的时，有多少人感到这是永久的损失。 重要的不是你的记忆，而是爱你的人的记忆。 重要的是你为人所怀念的时间有多长，重要的是谁在怀念你，重要的是他们为什么怀念你。 让我们的一生不是因为偶然而变得重要，不是因为环境而变得重要，而是我们自己的选择，选择让自己的生命有意义添加评论云水谣2009 | 2009-11-18 21:58:58有0人认为这个回答不错 | 有0人认为这个回答没有帮助人的一生说长亦长，说短也短。当我们真正用心去感受生命的时候，我们才明白了 生命原本很短暂。人的一生，悲哀也好，微笑也罢，何须过多的计较名利与物欲，人生真正的内涵与定位是走过的每一天。你笑也一天，你哭也一天，既然如此何不 放松自己，用一份坦然，真实的走过每一天！学会感恩，学会尊重。感恩让你发现身边的美丽色彩，也让你明白什么是感动的泪水，尊重让你寻找到灵魂的平等与那 份至高的人格，让你时时握住一份真诚的微笑。 快乐是一种心境，幸福是一种感觉。每一条道路通入五湖四海,只要我们行走的途中，少一些烦恼，多一些快乐&amp;hellip; 人就这么过一生，路在自己的脚下，心伴随在你左右，就看你如何去书写自己的精彩，如何去勾划自己的风景！添加评论俯卧撑PK打酱油 | 2009-11-18 22:07:27有0人认为这个回答不错 | 有0人认为这个回答没有帮助楼主，你好，人生的真正的意义是什么是个人生哲学的问题没有人能给出一个明确的让他人都能接受和信服的答案和说法虽然很多哲学家和思想家都有自己的对于人生意义的说法，但那仅仅是一个说法而不是真理之所以如此，在于每个人都是特殊的，有着不同的生活背景甚至是不同的文化背景，所以对于意义的解释和认同都是有区别的更重要的，人生的意义不是先在的，而是在生活中主体赋予的。换句话说，意义是不断生成的，而不是一个具体的概念。所以，当你追问人生意义的时候，你是意识到了你的生活以及生活的追求和目标而已，具体的意义只能在你的生活中总结和体验。以上仅仅是个人看法，仅供参</description></item><item><title>eclipse出错</title><link>/posts/eclipse_error/</link><pubDate>Tue, 19 Mar 2013 12:46:00 +0000</pubDate><guid>/posts/eclipse_error/</guid><description>出现错误，日志文件提示： 突然就想起来昨晚更新了系统包，应该是python的版本不对，把~/.eclipse下面的东西清除掉就可以了``` BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=zh_CNCommand-line arguments: -os linux -ws gtk -arch x86_64!ENTRY org.eclipse.ui 2 2 2013-03-07 15:58:25.830!MESSAGE Invalid preference category path: org.eclipse.birt.chart.reportitem.ui.ChartPreferencePage (bundle: org.eclipse.birt.chart.ui.extension, page: org.eclipse.birt.chart.ui.swt.fieldassist.preferences.FieldAssistPreferencePage)!ENTRY com.aptana.shared_core 1 1 2013-03-07 15:58:31.238!MESSAGE Information about process of adding new interpreter:- Chosen interpreter (name and file):&amp;lsquo;Tuple - Ok, file is non-null. Getting info on:/usr/bin/python2.7- Beggining task:Getting libs totalWork:100- Setting task name:Mounting executable string&amp;hellip;- Setting task name:Executing: /usr/bin/python2.7 -u /usr/share/eclipse/dropins/pydev/eclipse/plugins/org.python.pydev_2.7.1.2012100913/pysrc/interpreterInfo.py- Setting task name:Making pythonpath environment&amp;hellip; /usr/bin/python2.</description></item><item><title>pcre使用</title><link>/posts/pcre_use/</link><pubDate>Thu, 14 Mar 2013 06:22:00 +0000</pubDate><guid>/posts/pcre_use/</guid><description>在网上找到的pcre使用的资料，PCRE是一个NFA正则引擎，不然不能提供完全与Perl一致的正则语法功能。但它同时也实现了DFA，只是满足数学意义上的正则。PCRE提供了19个接口函数，为了简单介绍，使用PCRE内带的测试程序(pcretest.c)示例用法。1. pcre_compile原型：#include &amp;lt;pcre.h&amp;gt;pcre *pcre_compile(const char *pattern, int options, const char **errptr, int *erroffset, const unsigned char *tableptr);功能：将一个正则表达式编译成一个内部表示，在匹配多个字符串时，可以加速匹配。其同pcre_compile2功能一样只是缺少一个参数errorcodeptr。参数：pattern 正则表达式options 为0，或者其他参数选项errptr 出错消息erroffset 出错位置tableptr 指向一个字符数组的指针，可以设置为空NULL示例：L1720 re = pcre_compile((char *)p, options, &amp;amp;error, &amp;amp;erroroffset, tables);2. pcre_compile2原型：#include &amp;lt;pcre.h&amp;gt;pcre *pcre_compile2(const char *pattern, int options, int *errorcodeptr, const char **errptr, int *erroffset, const unsigned char *tableptr);功能：将一个正则表达式编译成一个内部表示，在匹配多个字符串时，可以加速匹配。其同pcre_compile功能一样只是多一个参数errorcodeptr。参数：pattern 正则表达式options 为0，或者其他参数选项errorcodeptr 存放出错码errptr 出错消息erroffset 出错位置tableptr 指向一个字符数组的指针，可以设置为空NULL3. pcre_config原型：#include &amp;lt;pcre.h&amp;gt;int pcre_config(int what, void *where);功能：查询当前PCRE版本中使用的选项信息。参数：what 选项名where 存储结果的位置示例：Line1312 (void)pcre_config(PCRE_CONFIG_POSIX_MALLOC_THRESHOLD, &amp;amp;rc);4. pcre_copy_named_substring原型：#include &amp;lt;pcre.h&amp;gt;int pcre_copy_named_substring(const pcre *code, const char *subject, int *ovector, int stringcount, const char *stringname, char *buffer, int buffersize);功能：根据名字获取捕获的字串。参数：code 成功匹配的模式subject 匹配的串ovector pcre_exec() 使用的偏移向量stringcount pcre_exec()的返回值stringname 捕获字串的名字buffer 用来存储的缓冲区buffersize 缓冲区大小示例：Line2730 int rc = pcre_copy_named_substring(re, (char *)bptr, use_offsets,count, (char *)copynamesptr, copybuffer, sizeof(copybuffer));5.</description></item><item><title>[zz]外媒：证明ARM是错的 要为英特尔“平反”</title><link>/posts/zz_foreign_media_arm_is_wrong_to_prove_intel_quotrehabilitatedquot/</link><pubDate>Tue, 12 Mar 2013 05:03:00 +0000</pubDate><guid>/posts/zz_foreign_media_arm_is_wrong_to_prove_intel_quotrehabilitatedquot/</guid><description>外媒：证明ARM是错的 要为英特尔“平反”ugmbbc发布于 2013-03-12 07:55:43|7175 次阅读 稿源:腾讯数码 随着ARM架构处理器在移动市场的崛起，英特尔所坚持的x86架构似乎被认为是错的，一直以来也有不少人坚持这样的观点，Seeking Alpha作者Ashraf Eassa近日却撰文表示，ARM是错的，ARM在PC领域和服务器领域会很快消亡，而英特尔则将在平板和手机领域获得更多的份额，以下是原文：我 欣赏ARM公司如今的成绩和产品，但是我对其首席执行官近年来宣称“ARM指令集架构在能效方面，相对于竞争对手英特尔的芯片具有天然架构优势”的夸大言 论表示质疑。一直以来，我在《Seeking Alpha》上都表达了这样的观点：指令集因素对于功耗的影响是可以忽略不计的，微处理器架构（真正的处理器设计）才是决定“每瓦性能比”指标的关键。在 这篇文章中，我将向大家展示来自学术机构的一些研究成果，这些研究证实了我的观点。同时，我还将就其长远意义进行更加深入的分析。先从这段我采访ARM首席执行官的摘录写起：“英特尔必然会赢得一些智能手机设计。我们将英特尔视为非常重要的竞争对手。它们能否成为能效方面的领导者？不，当然不会。”这一观点已被解读成一个观念，即英特尔X86指令集存在一些固有的能效问题。这导致许多非技术人员发表了被误导了的言论，认为英特尔应该“获取ARM授权许可”并“构建ARM芯片。”这是一个明显荒谬的观念，而更多明智的人则一再指出：所有这些只是微架构设计的目标。从历史上看，英特尔一直将更高性能设计作为目标。显然，这将导致更大的功耗。此外，由于性能/功耗比曲线是非线性的，这些因素会让人们会误以为：ARM能够以更低的功耗升级至英特尔的性能水平。微架构vs.指令集广义的“ARM芯片”的概念正被误读。“ARM芯片”有两种类型：·通用内核：对于那些没有资源和意愿来开发其自有处理器的公司，ARM提供了完整的CPU内核设计。从性能/功耗比的角度来看，这些内核通常都相当不错，这也是它们被广泛采用的原因。·定制内核：希望针对特定负载而提供差异化能力的公司，会采用定制CPU内核。ARM自有的CPU内核对大部分智能手机/平板电脑来说足够高效和强大。然而，诸如苹果和 高通这样的企业认为，有必要在内核设计方面走自己的路，因此每家公司的内核设计都有各自不同的性能/功耗特性。如果能效单纯是指令集带来的，那么高通和苹 果就没有必要做这项工作——这分明就是浪费钱。我的主张是：实际的芯片设计，再加上制造这个芯片所采用的晶体管技术，才是性能/功耗比的决定因素。简 单地说，“ARM指令集”是用来实现软件兼容性的。因此，一款苹果ARM内核能够运行与高通ARM内核相同的代码。当然，指令集还定义了其他一些事情，例 如内存如何寻址、哪些指令需要被执行、有多少寄存器可用。但实际上，大多数的指令集（X86、POWER、ARM、MIPS）都是非常出色的。研究结果证明了这一点由威斯康辛大学的几名研究人员撰写的，并在IEEE高性能计算机架构国际研讨会上发表的研究报告，得出了以下结论，澄清了业界对ARM/X86的不实传言：·性能的差异是由微架构的差异所导致的，与ISA（指令集架构）无关。·能耗同样与ISA无关。·ISA差异会对技术实现方法产生影响，但是现代微架构技术已经让这些影响不具备实际意义；从根本上说，不存在某个ISA更加高效。·ARM和X86的具体实现仅仅是为不同性能水平进行优化的设计点而已。尽管技术领域的许多人一直持有这样正确的观点，但是投资界则基本上都被蒙在鼓里。那么，这些研究结果意味着什么呢？ARM在服务器领域将很快消亡ARM服务器设计的一大“卖点”，就是被“神话”的强于英特尔的能效。但是，ARM指令集架构在该领域并无优势，而英特尔通过调整精化其下一代微架构，将达到传统ARM的功耗水平。但与ARM竭力吹捧的指令集架构优势不同，英特尔具备以下实际的优势：· 在服务器厂商当中的口碑：英特尔目前拥有服务器市场，并已反复证明它能够生产可靠、快速、高效的解决方案。构建服务器来支持网站关键节点的人们，将会非常 犹豫转向使用像ARM这样的“小家伙”作为服务器的核心。具有讽刺意味的是，不断痛失服务器市场份额的AMD公司，可能是仅有的一家在服务器领域口碑不错 的微服务器厂商，因为它在服务器芯片业务方面有十多年的经验。·全球最先进的晶体管技术：从根本上讲，处理器取决于晶体管。在给定功率的芯 片中内置的晶体管数量越多、每个晶体管消耗的功率越少，你就能让芯片变得更快、更好和更便宜。当其他芯片厂还在苦苦挣扎于28纳米 HKMG（高K金属栅极）的时候，英特尔已经进入22纳米制程，即第一代三栅极，同时也是其第三代高K金属栅极制程。今年即将推出的基于该制程技术的全新 凌动处理器，将会把Applied Micro的40纳米制程的“X-Gene”以及其它32纳米/28纳米制程设计的芯片打得片甲不留。随着英特尔在2014年切入14 纳米，竞争对手的日子会更难过。AMD同样处于劣势。·长期积累的微架构经验：英特尔5年前推出的凌动内核，已被证明足以有效抗衡ARM Cortex A9、高通最新卓越的“Krait”以及苹果耀眼的“Swift”。在32纳米制程方面，英特尔古老的内核在能效上与最好的32纳米/28纳米ARM设计 相比，非常具有竞争力。你能否想象在英特尔今年过渡至全新微架构，并将在制程技术方面领先1到2代（22nm + FinFET）的状况下，将会发生什么？这甚至不能被称为竞争。英特尔不仅拥有主场优势，还极有可能具备能够以比竞争对手成本更低的方式构 建用于服务器的卓越芯片，这将封死ARM服务器厂商进入的大门。哦，我还忘了提及另一个优势：英特尔具有自己的晶圆厂(可保留晶圆代工厂的利润在自己手 里)，而其它所有公司都必须向台积电/GloFo/联电/三星付费，这使得英特尔拥有显著的成本结构优势。ARM在传统PC领域将很快消亡这一研究报告对于提高性能方面得出以下观点：高性能处理器相较于低性能处理器需要更多的功耗，这与指令集架构或是能效无关。它们遵循公认的功耗/性能相互制约的魔方。这 就是为什么无论何时有人一说英特尔的“内核”产品“能效不高”，我就失望摇头的原因。性能的增加和能耗不是线性增加的关系。你不能简单地将一个低功耗 ARM或凌动处理器的性能和能耗乘以数倍，然后就声称这样的处理器的内核将比目前更强大的处理器的内核更高效。人们的确试图在一个芯片或系统上坚持内置任 意数量的内核，然后宣称目前“大”内核设计的处理器是不必要的。但这是有条件的，即软件执行必须高度并行在任意数量的小内核上，而丝毫不考虑软件中单线程 执行的性能。对于大部分工作负载而言，这是一个非常大的常识性假设错误。在PC领域，英特尔拥有“数十年经验”这一优势，再加上非常明显的制程技术领先优势，以及长期沉淀的软件基础，任何ARM厂商都绝无可能在传统Windows PC领域玩得转，除非安卓或Chrome操作系统取得显著进展，才有可能与英特尔和AMD在同场竞争。英特尔将在平板电脑/手机领域获得市场份额世界上最流行的操作系统——谷歌的安卓——完全与指令集无关，英特尔正在积极地与那些仅编写ARM原生代码的软件开发者合作，以便进行重新编译。有趣的是，我曾经花几周时间使用基于英特尔处理器的摩托罗拉Razr i手机，发现任何在其上运行的应用程序都不存在兼容性问题。在 平板电脑和变形设备设计方面，英特尔在Windows 8领域只与AMD竞争，并与Nvidia、高通、三星及其它亚洲系统芯片（SoC）厂商竞争安卓市场份额（所有这些平台都基于ARM）。我并不知道英特尔 在这块市场可以取得多少市场份额，但是它将拥有一个强大的产品，使其至少在这块市场中分得不小的一杯羹。在手机领域，我注意到一些能够提供 顶尖调制解调器的公司数量正不断减少。高通、英特尔和博通将是该领域的主要厂商，未来一两年，英特尔将伴随其在LTE领域所取得的进展而赢得美国市场的设 计订单。英特尔缺席美国市场与X86/ARM并没有多大关系，而完全是因为LTE。是否曾注意到高通是如何进入每个在美国市场销售的手机的？完全是由于调 制解调器。X86/ARM是一个争议点，如果英特尔设计基于ARM的芯片，那么它将在这个领域颗粒无收。结论没 错，ARM的股价正呈上升趋势；是的，它现在占据平板电脑/智能手机市场的绝大多数份额，平板电脑/智能手机被称为“由兼容ARM的系统芯片（SoC）驱 动的设备”，但是由此贬损英特尔的实力是荒诞可笑的。有人曾告诉我，英特尔必须与整个ARM生态系统竞争。但事实并非如此，英特尔是在与ARM生态系统内 部的公司进行竞争，而这些公司之间同样存在类似的竞争……虽然可能还需要一些时间，但是未来对英特尔更加利好：来源：seekingalpha</description></item><item><title>[zz]如果想保持神秘的话 请不要轻易在社交网站上点“赞”哦</title><link>/posts/zz_if_you_want_to_maintain_the_mystery_then_please_do_not_easily_spot_on_the_social_networking_site_quotlikequot_oh/</link><pubDate>Tue, 12 Mar 2013 04:46:00 +0000</pubDate><guid>/posts/zz_if_you_want_to_maintain_the_mystery_then_please_do_not_easily_spot_on_the_social_networking_site_quotlikequot_oh/</guid><description>如果想保持神秘的话 请不要轻易在社交网站上点“赞”哦ugmbbc发布于 2013-03-12 10:54:06|2707 次阅读 稿源:生物360 感谢生物博士僧的投递“如果想保持神秘的话，请不要轻易在社交网站上点’赞‘哦。”一项研究证明了多种个人特征——诸如政治或宗教观、性别、种族和性倾向——可以通过一个人在脸谱网（Facebook）上的“赞”（Like）记录加以预测。研究人员开发了一个数学模型从而根据58000位美国脸谱网用户的“赞赏”记录预测一个人的特征和偏好。研究人员使用来自这些志愿者的脸谱网档案的人口统计信息和通过网上调查测试衡量的智力、人格和对生活满意度等其他特征训练了这个模型。这个模型准确地预测了研究参与者的性别、种族出身和性倾向，在93%的情况下正确地识别出了男性和女性、在95%的情况下正确地识别出了非洲裔美国人和白人，并且在88%的情况下正确识别出了同性恋和异性恋。该模型还在超过80%的情况下正确地对民主党人和共和党人、基督教徒和穆斯林加以分类，但是该模型 在预测关系状态、药物滥用以及父母的关系状态方面的准确度较低。研究进一步发现这个模型几乎与预测一位用户对经历的开放程度的小型人格测试一样准确。研究人员表示，这些发现可能对于改善许多产品和服务的供给有用，但是也可能对于个人隐私有负面的影响。</description></item><item><title>[zz]黑帽欧洲2013会议：10个有趣的安全简报</title><link>/posts/zz_black_hat_europe_2013_conference_10_interesting_security_briefing/</link><pubDate>Tue, 12 Mar 2013 04:45:00 +0000</pubDate><guid>/posts/zz_black_hat_europe_2013_conference_10_interesting_security_briefing/</guid><description>黑帽欧洲2013会议：10个有趣的安全简报raymon725发布于 2013-03-12 11:13:15|739 次阅读 稿源:linuxeden 还有什么比一群黑客在本周蹲在阿姆斯特丹召开 黑帽欧洲 2013 会议更让人关注的呢？我们不敢猜测，但正面的消息是他们为我们准备了一份礼物 —— 关于 10 个有趣的安全简报。与会者将讨论如何 Android 和 Windows 8 的漏洞，并提供与会者关于如何保护这些和其他平台的建议。下面是这 12 个简报的内容：*超越犯罪攻击:时间攻击: 一对Imperva理工学院的研究人员将引入定时信息泄漏(时间)攻击,简化了犯罪攻击,可以用来虐待SSL/TLS数据压缩HTTP会话劫持。利用HTTP请求,时间攻击追求HTTP响应。别担心,这些家伙还在讨论时间攻击的缓解措施。[ QUIZ: Black Hat&amp;rsquo;s most notorious incidents ]*保护医疗设备: 来自 InGuardians 的杰伊·拉德克利夫的主题是解决医疗设备安全的粘性和恐怖。他说,这个话题是很混乱的，主要是理清思路。这样的设备分为三类，并从不同安全角度上进行讨论。*云存储服务与您的防火墙——没有比赛: CRSgroup的杰克·威廉姆斯将揭示如何存储同步服务,如Dropbox,通常安装在流氓时尚企业网络上,创建一个数据丢失保护的挑战以及对恶意软件的方式渗透到组织。*移动设备保护器有多安全?: 研究者从Vulnex分享发现来自智能手机、平板电脑和笔记本电脑的一些威胁安装的程序，如 GPS 跟踪器和远程数据删除。*一个公路交通噩梦的考虑: 类似谷歌导航和Waze工具可以帮助司机在驾车中避免迷路，但如果黑客侵入这些系统并决定每个人都头朝同一个方向，又该如何？汉堡科技大学博士生Jeske Tobias将为你解释这个过程。*连电器都不安全:设备安全: 你的网络、电子邮件可能会有一些硬件或者软件的防火墙，但是电器如何呢？来自 NCC 集团的本•威廉姆斯为你讲解。*视频会议系统: 安全顾问莫里茨Jodeit 演示了宝利通视频会议系统的 H.323 中半双工的高端通过漏洞——以及如何使用 rootkit 进行监测。*一个真的蜜罐: 诺基亚研究员将描述一个积极的概念,一个蜜罐不只是诱惑和陷阱入侵者,还提供持续攻击从而控制系统。*应用程序沙箱安全: 研究人员在这个简报将解释缺乏沙盒标准可能使这些所谓的安全系统不太安全。*Dock 怎么了?: NCC集团的安迪·戴维斯说,灵活性使得笔记本电脑变得脆弱性可攻击, 他支持通过检测受损 Dock 设备来降低风险。[via pcadvisor]</description></item><item><title>[zz]Chrome、Firefox、IE 10、Java、Win 8 在Pwn2Own上全部沦陷</title><link>/posts/zz_chrome_firefox_ie_10_java_win_8_at_pwn2own_all_fall/</link><pubDate>Sun, 10 Mar 2013 02:41:00 +0000</pubDate><guid>/posts/zz_chrome_firefox_ie_10_java_win_8_at_pwn2own_all_fall/</guid><description>Chrome、Firefox、IE 10、Java、Win 8 在Pwn2Own上全部沦陷ugmbbc发布于 2013-03-08 17:48:58|11286 次阅读 稿源:solidot 在惠普赞助的年度黑客挑战赛Pwn2Own上，Chrome、Firefox和IE 10浏览器，Java和Win 8相继沦陷。其中，法国安全公司Vupen Security的 研究人员组合利用多种攻击技术（包括两个IE10 0day漏洞），绕过了微软的多重安全防线，入侵了运行在Surface Pro（Win8）平板上的IE10浏览器，从而赢得了10万美元奖金。MWR Labs的两位安全研究人员利用了Chrome 25中未发现的漏洞和一个内核权限提升漏洞入侵了运行在Windows 7上的 Chrome浏览器，同样获得了10万美元奖金。苹果的浏览器 Safari尚未沦陷。成功演示攻击的安全研究人员不会对外披露细节，他们将会通知微软、Mozilla、Google和Oracle，而攻击代码只会保留在挑战赛组织者手中。</description></item><item><title>[zz][多图]科技圈最具权势25大女工程师</title><link>/posts/zz_multi_top_25_most_powerful_technology_circles_female_engineers/</link><pubDate>Sat, 09 Mar 2013 08:06:00 +0000</pubDate><guid>/posts/zz_multi_top_25_most_powerful_technology_circles_female_engineers/</guid><description>[多图]科技圈最具权势25大女工程师study875发布于 2013-03-08 07:36:56|3279 次阅读 稿源:腾讯科技 北京时间3月8日消息，美国科技博客BusinessInsider近日撰文称，在科技领域，女性工程师可谓凤毛麟角，这和产业属性以及就业潜规则不无关系。但是，近几年来，在引领风骚的美国科技领域，出现了许多名声鹊起、德高望重的女性工程师。Business Insider汇总整理了25位在科技领域最具影响力的女性工程师名单，雅虎CEO梅耶尔、Facebook的工程主管乔思林•高德费恩等悉数登榜。以下是Business Insider全文：有人说，当身怀六甲的玛丽莎•梅耶尔（Marissa Meyer）接过雅虎帅印之时正是暗喻男女不平等的“玻璃天花板（glass ceiling）”现象终结之日（译者按：glass ceiling是个很老的概念，通常指在某类个体在组织中，提升到一定阶段之后会再也无法提升的现象，比如女性在公司组织中普遍的遭遇）。从梅耶尔赴任雅虎那天起，全球的科技产业似乎已经开启了一个崭新的时代。但是事实却并非如此乐观——当前的女性工程师依然稀缺，特别是软件类开发工程师。比如说在科技领域走在最前沿的美国，有个数字就可以提供最强有力的佐证——2010-11学年，全美获得计算机科学学位的学员中女性的比例只有12%。但是，同样是在美国，那里也有很多旨在鼓励女性进入科技领域并在那里大展宏图的机构和项目，比如说女性编程员研究所（Ladycoders seminars）和Anita Borg女性和技术研究所（Anita Borg Institute，简称ABI），后者日前刚颁发了新一界的“年度女性洞察力奖”（Women of Vision Awards），获奖者是在机器人项目以及儿科领域颇有建树的（玛雅•玛大利）Maja Matarić。当时光的年轮转到今天，对于选择科技生涯的女性们而言，她们的前途是不可限量的。如今她们将会有大把的机会成为一家大公司或者前景无限的创业型公司里的女强人。1.人物：吉纳维夫•贝尔（Genevieve Bell）头衔：英特尔实验室互动与体验研究院主管吉纳维夫•贝尔其实是一个人类学家，她加入英特尔主要是为了帮助公司开发更易于用户接受的芯片级产品。两年前，在公司的要求下，吉纳维夫一手打造了一个新的研发团队，这也是英特尔能够PC芯片级上游始终走在最前端的重要原因之一。同时，吉纳维夫同时也是知名科技类书刊《预测一个数字化的未来：普适计算的困境和神话》（Divining a Digital Future: Mess and Mythology in Ubiquitous Computing）的作者，而且还是ABI“2013年度女性洞察力奖”（Women of Vision Awards）的获得者之一。2.人物：思林•高德费恩（Jocelyn Goldfein）头衔：Facebook的工程主管乔对于一家像Facebook这样的大网站而言，技术部的重要性首当其冲，而乔思林正是这个部门的领头人，她主要负责Facebook的产品设计和页面规划，比如说资讯Feed、搜索以及图片项目。高德费恩在科技领域的资历深厚。在加入Facebook之前，她在全球最大的虚拟化解决方案厂商Vmware任副总裁一职。和其他入榜的女性一样，她也是“帮助更多的女性进入科技工程领域”的倡导者之一。03.人物：玛丽莎•梅耶尔（Marissa Meyer）头衔：雅虎CEO作为雅虎的掌舵人，玛丽莎•梅耶尔不惧争议奋往直前，最终带领雅虎暂时摆脱困境。事实证明，精通技术的玛丽莎•梅耶尔绝对是科技领域当之无愧的女中豪杰。玛丽莎•梅耶尔的资历显赫。她是谷歌的第20个职员，也是谷歌的第一位女性职员。梅耶尔在谷歌发展壮大过程中起到了至关重要的作用，包括“谷歌搜索”、“图片”、“地图”、“书刊”、“资讯”以及“工具栏”等技术和产品，梅耶尔都居功至伟。与此同时，梅耶尔还是全球第一大连锁超市沃尔玛的董事会成员。4.人物：金伯•洛克哈特（Kimber Lockhart）头衔：云存储科技公司Box的技术总监作为技术总监，洛克哈特带领着她的团队，为Box的网页应用开发了大量的新产品和新功能。而在此之前，洛克哈特一直致力于自我创业，她其实也是云技术公司Increo Solutions的创始人。2009年，Box并购Increo Solutions，洛克哈特也随之加入Box。值得一提的是，Box并购Increo Solutions之前，身为Increo Solutions首席执行官的洛克哈特就开发过一款名为“Backboard”的协同服务技术。5.人物：玛雅•玛大利（Maja Matarić）头衔：在机器人项目以及儿科领域颇有建树的教授玛雅•玛大利是南加利福尼亚大学的一名教授，主要研究机器人项目，她的作品可以帮助到各种各样的人。在医学领域，她研发的机器人可以帮助治疗中风患者、自闭症儿童、肥胖儿童以及老年痴呆等。值得一提的是，玛雅也是“2013年度女性洞察力奖”获奖者之一。6.人物：戴安妮•格林（Diane Greene）头衔：天使投资人、VMware联合创始人戴安妮•格林是全球最具实力的虚拟化解决方案厂商VMware的联合创始人。2007年，在格林的带领下，VMware成功上市，2008年，功成名就的格林从VMware急流勇退。如今的格林在谷歌董事会拥有一席，而且她也是一名顾问和天使投资人，她投资的Nicira在去年被VMware以12.6亿美元的价格收购。7.人物：薇琪•汉森（Vicki Hanson）头衔：邓迪大学教授、IBM研究员薇琪•汉森是邓迪大学的一名教授，同时也是IBM研究院的一名名誉研究员。她致力于计算机运算和有特殊需求的人类之间的交汇领域相关的研究工作。一连串的奖项是对薇琪研究工作的最大肯定。常年来，她一直在帮助科技公司如何更好的进行开发产品和设计，不论是在软件编程领域还是在像触摸屏这样的高科技样机产品的设计领域，薇琪都有她独到之处。同时，薇琪也是“2013年度女性洞察力奖”的获奖者之一。8.人物：劳伦•斯塔斯（Lauren States）头衔：IBM云计算及公司发展规划部首席信息官劳伦•斯塔斯是IBM云计算策略的负责人，她的项目包括IBM在全球推出的战略理念——智慧星球。同时，她还负责公司的业务分析工作。斯塔斯算是IBM的元老了，早在上世纪90年代，她还是一名青色毕业生时便以初级系统编程人员的身份加入了IBM。时至今日，从行政助理到软件群组的技术员，斯塔斯可以说在IBM公司的每一个工作岗位都留下了自己的印记。值得一提的是，斯塔斯还在公司内部发起了一项专门负责内部人才培养的计划。她看上去是不是很脸熟呢？没错，她在IBM智慧星球的电视广告上露过脸。9.人物：玛丽安娜•特塞尔（Marianna Tessel）头衔：VMware工程部副总裁全球最具实力的虚拟化解决方案厂商VMware有个庞大的工程部，而特塞尔正是这个强大开发团队的带头人。她的团队成员有200多人组成，专门负责为全球2000多家客户解决技术相关的问题。值得一提的是，特塞尔还是多项专利的持有人。10.人物：珍•菲茨帕特里克（Jen Fitzpatrick）头衔：谷歌地理及本地化工程部副总裁菲茨帕特里克也是谷歌最早的员工之一。她1999年就加入了谷歌，当时的工作是负责谷歌搜索引擎搜索结果的优化工作。此外，她还负责用户界面开发，包括页面目录搜索服务、谷歌地图等项目。谷歌的geo-loco移动科技部门也已经正式转交给了她。值得一提的是，她的前任正是去年加盟雅虎的梅耶尔。11.人物：帕德玛西•华莱尔（Padmasree Warrior）头衔：思科首席技术官兼首席策略官帕德玛西•华莱尔于2007年加入Cisco，并于去年正式就任思科首席策略官一职，同时依然保留首席技术官职位。在华莱尔的科技职业生涯中，到目前为止她已经获得许多的奖项，其中的“世界科技女性名人堂（Women in Information Technology International Hall of Fame）”分量最重。作为一名成功的女性，华莱尔不忘其他艰苦奋斗中的女同胞。近几年来，她一直在帮助和指导创业中的女性朋友，比如说文胸电子商务平台True&amp;amp;Co的创始人（阿什•拉玛莫塞）Aarthi Ramamurthy就从华莱尔那里受益良多。12.人物：劳拉•马瑟（Laura Mather）头衔：安全软件开发商SilverTail首席策略官兼联合创始人全年，全球数据存储巨头EMC斥巨资收购了Silver Tail，同时也把在互联网安全领域首屈一指的专家劳拉•马瑟招致麾下。2008年，马瑟和其他几位友人共同创立了安全软件开发商SilverTail，她们开发的防诈骗系统被广泛用于银行系统和电子商务网站。同时，马瑟还是网络反钓鱼工作小组Operational Policy的总经理，这是一家非盈利机构，旨在应对那些基于电子邮件的安全威胁，比如说网络钓鱼、网域嫁接以及电子欺诈等。13.人物：鲁奇•桑维（Ruchi Sanghvi）头衔：网络存储在线应用Dropbox的运营主管和劳拉•马瑟一样，鲁奇•桑维（Ruchi Sanghvi）加入Dropbox也是因为后者收购了她的公司。今年2月份，Dropbox收购了桑维创办的Cove——一个致力于解决中小企业办公协作和交流的公司。桑维成为了Facebook的首位女员工，她主要负责给Facebook Platform以及Facebook Connect做产品规划工作。14.人物：安德里亚•博班克（Andrea Burbank）头衔：Pinterest的搜索及数据挖掘工程师去年，安德里亚•博班克从微软跳槽到了社交网站Pinterest。在此之前，她主要负责微软的搜索引擎必应的开发工作。在加盟微软之前，她供职于另一家搜索引擎公司Powerset——2008年被微软以1亿美元的价格收购。从经历上看，博班克可以说在搜索领域资历非常深厚。知名社交网站Pinterest不仅得到了大量女性用户好评，同时，Pinterest在业界也以“适合女性工程师成长和发展”而闻名。时至今日，Pinterest先后从苹果、Quora、谷歌、YouTube、必应以及LinkedIn等公司挖来了不少女性工程师。15.人物：瑟琳娜•托巴科瓦拉（Selina Tobaccowala）头衔：全球知名网络调查公司SurveyMonkey的高级副总裁瑟琳娜•托巴科瓦拉就职于知名网络调查公司SurveyMonkey，她是该公司工程开发团队的领军人物。她因创办Evite.com而声名鹊起。后来，Evite.com被娱乐票务和营销公司Ticketmaster巨额收购。16.人物：保拉•朗（Paula Long）头衔：数据收集技术开发商DataGravity首席执行官兼联合创始人保拉•朗现在是新创公司DataGravity（数据情报收集技术开发商）的CEO兼联合创始人，但是事实上，让朗的名号响彻业界的却是她与其他友人联合创办的iSCSI存储公司——EqualLogic——2007年被戴尔以14亿美元的价格并购。作为一家初创公司，DataGravity正在被业界所重视。上个月，DataGravity宣布已经在第二轮融资中获得了3000万美元的投资。如果算上去年4月获得的1200万美元投资，现在公司总共获得了4200万美元的风险投资。此外，朗还是在线存储服务商SugarSync的董事会成员，并为其他初创存储厂商担任顾问。17.人物：王忻（Niniane Wang）头衔：电子商务公司Minted首席技术官王忻目前负责领导Minted的工程团队。Minted是一家全球独立美术设计师社区，同时也是一家电子商务网站，印刷并销售他们最棒的设计，主要为纸质品，比如节日贺卡、结婚请柬、笔记本、日历。在加盟Minted之前，王忻在谷歌和微软的工程团队积累了11年的工作经验。她负责过的项目包括微软操作系统中的Desktop Search功能（王忻因此还获得了谷歌创始人奖）、Gmail邮件、Google Lively虚拟社区以及微软的Flight Simulator模拟飞行游戏。此外，王忻还持有33项个人专利。18.人物：玛丽•安•戴维森（Mary Ann Davidson）头衔：甲骨文首席安全官玛丽•安•戴维森在甲骨文出任首席安全官之要职，她的责任是确保甲骨文的产品不能存在任何大的安全漏洞。在甲骨文的各种安全科技巡展上，她多次在公众场合露面。她现在也是包括ISSA（Information Systems Security Association，信息安全系统协会)在内的多家集团和机构的董事会成员。近期，玛丽•安•戴维森正式入选ISSA名人堂。19.</description></item><item><title>[zz][多图+下载]隐藏在亚马逊导航菜单的武林秘籍</title><link>/posts/zz_multi-map__download_to_hide_the_navigation_menu_in_the_amazon_martial_arts_cheats/</link><pubDate>Sat, 09 Mar 2013 06:28:00 +0000</pubDate><guid>/posts/zz_multi-map__download_to_hide_the_navigation_menu_in_the_amazon_martial_arts_cheats/</guid><description>[多图+下载]隐藏在亚马逊导航菜单的武林秘籍LonelyJames发布于 2013-03-09 08:42:45|6509 次阅读 稿源:煎蛋 亚马逊给菜单加上了一个紫色三角形的缓冲地带.当鼠标移动到紫色三角的范围时,二级菜单并不会立马变化,而是有一定延迟.而当你直上直下地移动鼠标的时候,二级菜单则会很快变化,所以才会保证有如丝般顺滑的感觉.直接简单暴力的对比:亚马逊的悬停菜单.其他网站的悬停菜单.看出区别来没,亚马逊的悬停菜单可谓如丝般顺滑.而其他菜单却会有一定令人不爽的延迟.这当然不是因为电脑太慢,这种延迟设计是为了避免下面这样的尴尬…只是这个例子实在太棒了,我可一点没有黑bootstrap的意思哦!*所以亚马逊到底用了神马黑科技在菜单上?*亚马逊的秘密设计在于,他们给菜单加上了一个下图中紫色三角形的缓冲地带.当鼠标移动到紫色三角的范围时,二级菜单并不会立马变化,而是有一定延迟.而当你直上直下地移动鼠标的时候,二级菜单则会很快变化,所以才会保证有如丝般顺滑的感觉却不会出现上面那种尴尬呃情况.作为一个有理想有抱负的Geek,怎能无视这么Cooooooool的导航.我已经安全将其借鉴到新网站了,另外我对山寨亚马逊的行为可一点也不羞愧!&amp;ldquo;我敢肯定这秘籍早就被发现了,只是我们疑惑之解决之然而忘之,于是再惑之再解决之又则再相忘于江湖.(I’m sure this problem was solved years and years ago, forgotten, rediscovered, solved again, forgotten, rediscovered, solved again.)&amp;quot;(我是从日文站上看到的英语不是我很菜啊只有乱翻译了)by Ben Kamens任何人也想玩的可以下载这个JQuery-menu-aim 试试效果:D================================致那些和我一样看到这个就情不自禁打开淘宝找类似导航条却没找到的人们:京东天猫苏宁当当跟原版比起来真是有过之而无不及啊。</description></item><item><title>[zz]苹果10年工龄以上员工可享受“离岗留职”待遇</title><link>/posts/zz_apple39s_10_years_of_service_or_more_employees_can_enjoy_quotretention_undergoquot_treatment/</link><pubDate>Sat, 09 Mar 2013 06:25:00 +0000</pubDate><guid>/posts/zz_apple39s_10_years_of_service_or_more_employees_can_enjoy_quotretention_undergoquot_treatment/</guid><description>苹果10年工龄以上员工可享受“离岗留职”待遇ugmbbc发布于 2013-03-09 09:42:14|3776 次阅读 稿源:腾讯科技 苹果人力资源的工作流程看上去充满奇趣。据科技博客作者约翰·格鲁伯（John Gruber）透露称，苹果的员工可以享受“离岗留职”的待遇，按照苹果的这一政策，员工可以离开公司、最长两年时间之后再重返公司，在这两年的时间内，这些离开的员工仍将在苹果公司保留职位。事实上，员工的确可以离开公司，而且如果他们在两年之内重返公司的话，两年的离职就像是从未发生过一样，员工重返公司的职位不会离职而受影响。不过，员工在离职的这段的时间内，将不会得到薪酬，但也不会丢失他们在苹果公司的岗位。不过，据格鲁伯透露，只有在苹果公司已经工作10年以上的员工才能享受上述待遇。当然，苹果的做法与一些公司大不相同。一些公司认为，那些离职的员工会对仍留下来的员工产生伤害，因为有员工离职的话，就将意味着留下来的员工将面临着更加繁重的任务。特别是，一些员工在离开后会加盟竞争对手公司，这样将会对原来的公司产生更大的伤害，而且在这样的公司，一旦这些员工离职，可能会被视为“叛徒”，而可能会不被其他未离职的员工所接纳。但是，苹果一直非常神秘，而且也非常独立，因此人们可能会质疑苹果可能也会采取与那些公司相似的政策——即根本不会再聘用那些已经离职的员工。不过，与这些猜疑相反的是，苹果会给离职的员工到其它地方尝试的机会，而且还不会损害苹果。格鲁伯称，苹果公司没有休假制度，因此，这种两年的离岗留职政策也有点类似于一种休假方式。当年，史蒂夫·乔布斯（Steve Jobs）重返苹果之后，取消了公司的休假制度。后来，许多员工都申请了两年的“休假”，之后再离职。因此，苹果宣称，员工在离开之后，如果想改变主意的话，那么还可以再回来。对此，格鲁伯认为，苹果的这种政策也非常明智，因为苹果面临的最大一个威胁就是人才的流失，然而，如果能够让离职的员工很容易地再重返公司，那么这种威胁就将减少很多。</description></item><item><title>[zz]Google OS为年度黑客大赛Pwnium 3准备了$314.159万 但无人能拿走</title><link>/posts/zz_google_os_annual_hacker_contest_pwnium_3_prepare_the__3141590_but_no_one_can_take_away_as/</link><pubDate>Sat, 09 Mar 2013 06:17:00 +0000</pubDate><guid>/posts/zz_google_os_annual_hacker_contest_pwnium_3_prepare_the__3141590_but_no_one_can_take_away_as/</guid><description>Google OS为年度黑客大赛Pwnium 3准备了$314.159万 但无人能拿走study875发布于 2013-03-09 10:54:00|1020 次阅读 稿源:cnBeta.COM 在本周温哥华召开的Pwnium 3竞赛大会上Google拿出了314.159万美元作为奖金，让那些开发者找寻Chrome OS的漏洞，但是Google最终宣布目前并未有开发者能够拿到完整的奖金，但是会对目前提供的相关漏洞进行评估然后支付相关的奖金。在今年的Pwnium 3竞赛上Google则将焦点集中在Chrome OS系统，相比较往年奖金上升了很多，往年最高奖金为6万美元，而今年直接提升至了314.159万，而且这个数字是圆周率，所以更具意义。</description></item><item><title>[zz]Google Play也不安全 10款应用就有一款携带恶意程序</title><link>/posts/zz_google_play_is_not_safe_to_carry_10_applications_have_a_malicious_program/</link><pubDate>Sat, 09 Mar 2013 06:16:00 +0000</pubDate><guid>/posts/zz_google_play_is_not_safe_to_carry_10_applications_have_a_malicious_program/</guid><description>Google Play也不安全 10款应用就有一款携带恶意程序study875发布于 2013-03-09 11:16:44|616 次阅读 稿源:cnBeta.COM 随着Android在全球移动平台的风生水起俨然成为了恶意程序下手的目标，根据趋势科技通过旗下的移动应用程序信誉服务对超过200万的应用进行调查统计发现在10款从Google Play上下载的Android应用中就有1款应用携带恶意程序，在2013年Android手机遭受恶意程序工具的次数将突破100万起。对200万款应用进行分析之后趋势科技发现了293091款应用都携带各种恶意程序，甚至其中有150203款应用携带的恶意程序属于“高危”级别，还有443294款应用会链接到各种收费平台上。在这293091款应用中其中有68740款应用直接是从Google Play上下载下来的，目前Play拥有约70万的应用程序，相当于每10个应用程序就有一个是携带恶意程序的应用。</description></item><item><title>[zz]Adobe Flash Player的漏洞再次曝光 已成功获取管理员权限</title><link>/posts/zz_adobe_flash_player_vulnerabilities_have_been_successfully_re-exposure_to_obtain_administrator_privileges/</link><pubDate>Sat, 09 Mar 2013 06:15:00 +0000</pubDate><guid>/posts/zz_adobe_flash_player_vulnerabilities_have_been_successfully_re-exposure_to_obtain_administrator_privileges/</guid><description>[图]Adobe Flash Player的漏洞再次曝光 已成功获取管理员权限study875发布于 2013-03-09 11:28:56|616 次阅读 稿源:cnBeta.COM 周四我们曾报道在在惠普赞助的年度黑客挑战赛Pwn2Own上，Chrome、Firefox和IE 10浏览器，Java和Win 8相继沦陷。其中，法国安全公司Vupen Security的研究人员发现了Windows 8平台IE 10的两个0-day漏洞。今天该公司再次宣布他们已经成功找到Adobe Flash Player的漏洞，已经成功在安装Flash的主机上获取系统管理员的权限。Flash显然已经不是最近才爆出相关的问题，在今年2月份的时候Adobe就紧急连续发布了三个安全修复补丁，其中两个补丁主要是紧急修复黑客曝光的漏洞。我们相信不久之后Adobe将会发布相关的修复补丁</description></item><item><title>[zz]Phil Shciller推文：Android存在各种安全漏洞和恶意软件</title><link>/posts/zz_phil_shciller_tweets_android_presence_of_various_security_vulnerabilities_and_malware/</link><pubDate>Fri, 08 Mar 2013 10:59:00 +0000</pubDate><guid>/posts/zz_phil_shciller_tweets_android_presence_of_various_security_vulnerabilities_and_malware/</guid><description>Phil Shciller推文：Android存在各种安全漏洞和恶意软件ugmbbc发布于 2013-03-08 06:46:13|973 次阅读 稿源:MacX 感谢cc的投递苹果全球营销高级副总裁Phil Schiller并不经常在推特上发表自己的观点，大多数情况下他会祝大家圣诞快乐或者当旧金山巨人队获得冠军时表示祝贺。不过今天Phil发表推文，给出了一个关于Android被恶意软件侵袭的文章链接，这篇文章来自安全公司F-Secure。苹果全球营销高级副总裁Phil Schiller并不经常在推特上发表自己的观点，大多数情况下他会祝大家圣诞快乐或者当旧金山巨人队获得冠军时表示祝贺。不过今天Phil发表推文，给出了一个关于Android被恶意软件侵袭的文章链接，这篇文章来自安全公司F-Secure。文章中主要提到Android目前存在各种安全漏洞和恶意软件，Phil还提到“请大家注意安全”来调侃Android的安全性。2012年发生的301起移动安全实践中有79%是针对Android平台的，针对iOS平台的只有0.7%。Phil发布的这条推文似乎不像是苹果的作风，通常情况下苹果会一直保持沉默。这可能也是苹果想要加强公共关系的一种做法。</description></item><item><title>[zz]Android手机被冷冻后：所有加密数据全部可以访问???</title><link>/posts/zz_android_phone_is_frozen_all_encrypted_data_can_all_be_accessed/</link><pubDate>Fri, 08 Mar 2013 10:57:00 +0000</pubDate><guid>/posts/zz_android_phone_is_frozen_all_encrypted_data_can_all_be_accessed/</guid><description>Android手机被冷冻后：所有加密数据全部可以访问ugmbbc发布于 2013-03-08 06:42:13|5857 次阅读 稿源:Macx 感谢ab的投递德国的安全专家发现只要将Android智能手机冷冻，那么所有加密的数据都可以访问。作为Ice Cream Sandwich的一部分，谷歌的加密发那个发可以通过冷冻一个小时攻破。冷冻之后的Android手机进入了所谓的可攻破模式，安全专家可以访问之前加密的联系人、历史记录和照片。当Android手机被冷冻时，电池迅速的断开并重新连接，随后手机进入了定制的软件系统，而不是Android系统。Android加密通过冷冻就可以被攻破可能会让手机上的数据变得不够安全，尤其是企业和**用户，他们的手机中通常会有敏感数据。这次参加测试的是Galaxy Nexus手机，其他Android手机可能会有同样的结果。低温导致数据在内部芯片上消失的速度减慢，研究人员正是利用这种现象获得了加密密钥并将手机上所有的加密数据攻破。</description></item><item><title>[zz]Pwn2Own 2013黑客大赛：Win8+IE10已沦陷</title><link>/posts/zz_pwn2own_2013_hacking_contest_win8__ie10_has_occupied/</link><pubDate>Fri, 08 Mar 2013 05:48:00 +0000</pubDate><guid>/posts/zz_pwn2own_2013_hacking_contest_win8__ie10_has_occupied/</guid><description>Pwn2Own 2013黑客大赛：Win8+IE10已沦陷teikaei 发布于 2013-03-08 10:43:54|4478 次阅读 稿源:驱动之家 当看到Pwn2Own 2013黑客大赛上令人眼馋的巨额奖金，你就应该能想到，那些浏览器什么的，坚持不了多久的，肯定会有一大批会在大赛第一天就被黑客攻破。果不其然，目前，Firefox、IE10、Java和Chrome都已经被攻克。法国安全公司VUPEN宣布，他们已经利用漏洞成功黑掉了Windows 8平台上的IE10、Windows 7平台上的Firefox 19、Java。“我们利用Surface Pro上的两个IE10 0day漏洞绕过了沙盒防护，攻破了Windows 8。”VUPEN表示，所有他们在Pwn2Own大赛上使用的0day漏洞和技术都已经报告给了受影响的软件供应商，也就是微软、Mozilla和甲骨文，以方便他们发布相关补丁保护用户免受类似的攻击。此外，MWR实验室的专家们完全绕过了最新稳定版Chrome的沙盒防护，成功拿下Chrome。“通过访问一个恶意网页，它的一个漏洞允许我们在沙盒渲染进程中获取代码执行权。”Accuvant实验室的Josh Drake和来自Contextis的James Forshaw也都攻克了Java。</description></item><item><title>[zz]Chrome 25被黑客攻破 Google发布紧急更新</title><link>/posts/zz_chrome_25_was_hacked_google_released_an_emergency_update/</link><pubDate>Fri, 08 Mar 2013 05:47:00 +0000</pubDate><guid>/posts/zz_chrome_25_was_hacked_google_released_an_emergency_update/</guid><description>Chrome 25被黑客攻破 Google发布紧急更新study875发布于 2013-03-08 11:04:57|4185 次阅读 稿源:驱动之家 我们刚刚介绍过，在今年的Pwn2Own 2013黑客大赛首日上，Firefox、IE10和Chrome都已经被黑客攻破。其中，MWR实验室的专家们完全绕过了最新稳定版Chrome的沙盒防护，成功拿下Chrome 25。当然，MWR将攻破Chrome所使用的高危漏洞报告给了Google，Google动作迅速，不到一天，就已经拿出了解决方案，并发布了最新的Chrome 25.0.1364.160，主要就是修复这个漏洞。建议Windows、Mac、Linux及时进行自动更新或手动下载更新。根据描述，该漏洞是WebKit核心中的类型混淆（Type confusion），详情并未公布。Google表示，只有当大部分用户都更新到最新版Chrome时，这些Bug的详情才有可能公开。官方下载页面：http://www.google.cn/intl/zh-CN/chrome/browser/</description></item><item><title>[zz]几乎所有Web和移动应用都容易受攻击</title><link>/posts/zz_almost_all_web_and_mobile_applications_are_vulnerable/</link><pubDate>Fri, 08 Mar 2013 05:47:00 +0000</pubDate><guid>/posts/zz_almost_all_web_and_mobile_applications_are_vulnerable/</guid><description>几乎所有Web和移动应用都容易受攻击study875发布于 2013-03-08 10:47:21|719 次阅读 稿源:腾讯科技 应用测试服务商Cenzic公司在一份最新的报告中指出，在它测试的所有基于Web的应用和移动应用中，有99％都存在可以被网络犯罪分子利用的安全漏洞，而且每个应用的漏洞数量平均达13个。报告中的图表展示了存在漏洞的领域，报告本身则详细介绍了这些问题在涉及到web、云、移动应用时的出现频率和严重程度。最常见的问题类型是跨站脚本攻击（即上图中XSS），它导致移动应用容易遭受个人隐私、会话管理等方面的威胁。Cenzic首席技术官斯科特·帕西（Scott Parcel)表示，公司必须重视应用层的安全性，目前很多公司显然对现有和潜在的威胁视若无睹。 “急于创建大量互相连接的移动应用，导致公司将保护墙打穿，装上了没有上锁的门，安全问题非常严重。”帕西说。业界人士评论说：也许一些云服务和web服务会驳斥Cenzic的报告，但看到过这份报告的用户还是会忧心忡忡，夜不能寐。来源：hothardware</description></item><item><title>[zz]Gozi病毒三名主犯今日被起诉 将在监狱度过下半生</title><link>/posts/zz_gozi_virus_today_indicted_three_principal_will_spend_rest_of_his_life_in_prison/</link><pubDate>Thu, 24 Jan 2013 11:51:00 +0000</pubDate><guid>/posts/zz_gozi_virus_today_indicted_three_principal_will_spend_rest_of_his_life_in_prison/</guid><description>Gozi病毒三名主犯今日被起诉 将在监狱度过下半生teikaei 发布于 2013-01-24 08:55:41|2417 次阅读 稿源:cnBeta.COM 据外媒报道，三名创建并传播Gozi病毒的男子今日正式被法庭起诉。Gozi病毒日前已经感染了全球100多万台电脑，并通过盗取用户信用卡和银行账号密码等信息成功获取了几百万美元。据悉，美国网络安全专家于2007年首次发现Gozi病毒，并将其称为金融界历史上破坏性最强的病毒之一。不过，这个病毒一直运行到2012年才算真正停止。Gozi病毒的主要策划人Nikita Kuzmin于2010年的11月份在美国被捕，并在2011年5月服罪。同谋Deniss Calovskis和Mihai Ionut Paunescu则分别于2012年的11月和12月在拉脱维亚和罗马尼亚被捕。三位主犯Kuzmin、Calovskis和Paunescu将分别面临95年、67年和70年的监禁。法庭文件指出，Gozi病毒已经感染了美国的4万多台电脑，其中160台属于NASA机构。</description></item><item><title>网络流量数据</title><link>/posts/network_traffic_data/</link><pubDate>Mon, 21 Jan 2013 05:10:00 +0000</pubDate><guid>/posts/network_traffic_data/</guid><description>2012 年1月1日，铁道部网络订票上线。刚上线时，12306网站的同时在线访问人数高达500多万，对火车票巨大的需求造成刚上线的网站几度瘫痪。当时，就有 几款抢票浏览器和软件出现。但由于12306网站刚刚诞生，并没有太多人注意到这类软件，也并没有企业大规模宣传和推广抢票插件。但今年春运开始后，火车 票重新回到人们视野之中。一些软件公司也开始在浏览器的抢票功能上大做文章。不过，12306每年数百万的订单并非网站承受的极限。 2012年11月11日，阿里巴巴旗下淘宝和天猫“双十一”购物节上，在这个被称为有史以来最大规模的“交易攻击”上，1分钟内，超过1000万人涌入天 猫，带来了上亿的PV，网站交易系统的订单创建峰值达到了惊人的 1秒45万笔订单，其瞬间并发量也创了历史纪录。24小时内有2.13亿消费者上天猫网站，整体系统经受了最高每秒2.1Tb的网络流量。在这样规模冲击 下，天猫与支付宝系统均未出现宕机等事故，保障了交易进程的完整与可靠。阿里巴巴集团技术共享平台负责人刘振飞说，阿里巴巴很早就开始相关的技术筹备，约有3000多位工程师参与，硬件上有10多万台服务器。罗马不是一日建成的，事实上，在2010和2011年的购物节上，网银宕机，网页刷新缓慢时有发生。有业界人士认为，比起9岁的淘宝天猫，刚刚1岁的12306网站前端和架构都有优化的空间。但也有分析认为，淘宝与12306是不同的平台。人们在淘宝平台抢购，商品相对分散，而火车票相对集中在一些主干地区。</description></item><item><title>[zz][图]Java再曝任意代码漏洞 距上次修复还不到一周</title><link>/posts/zz_figure_java_and_then_exposed_to_arbitrary_code_vulnerability_fixes_from_the_last_less_than_a_week/</link><pubDate>Mon, 21 Jan 2013 04:55:00 +0000</pubDate><guid>/posts/zz_figure_java_and_then_exposed_to_arbitrary_code_vulnerability_fixes_from_the_last_less_than_a_week/</guid><description>[图]Java再曝任意代码漏洞 距上次修复还不到一周raymon725发布于 2013-01-21 08:21:50|3608 次阅读 稿源:cnBeta.COM 有着超过10亿安装量的Java，它覆盖了从你的电脑到温控器的一切，而且邪恶的黑客们已经盯上它了。自去年春天在Mac平台上兴风作浪的Flashback以来，攻击已经变得愈加汹涌，而且，最近的更新影响到了所有的平台。美国政府甚至建议用户禁用他们浏览器中的Java。现在看来，另外还有一个Java漏洞横行于世界上，尽管事实上它在上周才刚刚再次更新过。根据PC World的报道，波兰安全探索的研究人员发现了不止一个，而是两个安全漏洞，允许攻击者在用户机器上运行任意代码。这两个漏洞是在过去的几个星期确定的，因此进一步的攻击也是可能的。希望甲骨文有时间在漏洞被恶意运用前解决问题。比较光明的一面是，Java 7 Update 11会提示用户确认是否运行一个applet小程序，这稍微增加了运行攻击代码的难度。但不幸的是，大多数的用户都只会盲目地点“是”，所以这很大程度上也不能提供很好的保护。&amp;ldquo;Krebs on Security&amp;quot;已经有了一篇如何在Windows和Mac上不同的浏览器里禁用Java的文章，不了解的用户们可以尝试一下。</description></item><item><title>[zz]Oracle's Java patch contains new holes, researchers warn</title><link>/posts/zzoracles_java_patch_contains_new_holes_researchers_warn/</link><pubDate>Mon, 21 Jan 2013 04:55:00 +0000</pubDate><guid>/posts/zzoracles_java_patch_contains_new_holes_researchers_warn/</guid><description>Oracle&amp;rsquo;s Java patch contains new holes, researchers warnLucian ConstantinJan 19, 2013 11:17 AMprintResearchers from Security Explorations, a Poland-based vulnerability research firm, claim to have found two new vulnerabilities in Java 7 Update 11 that can be exploited to bypass the software&amp;rsquo;s security sandbox and execute arbitrary code on computers.Oracle released Java 7 Update 11 last Sunday as an emergency security update in order to block a zero-day exploit used by cybercriminals to infect computers with malware.</description></item><item><title>[zz]俄罗斯推出新款Linux桌面：ROSA</title><link>/posts/zz_russia_launch_new_linux_desktop_rosa/</link><pubDate>Tue, 15 Jan 2013 12:18:00 +0000</pubDate><guid>/posts/zz_russia_launch_new_linux_desktop_rosa/</guid><description>4月12日，位于俄罗斯联邦首府莫斯科市的技术开发团体ROSA推出一款新的GNU/Linux桌面（目前还是Beta测试版），名为“ROSA Linux”发行版，吸引了不少人的目光。令人感到惊奇是，ROSA发行版的支持年限是5年，是所谓的“LTS版本”。下面是其截图：从上图可见，ROSA的桌面背景很凝重，具有俄罗斯的传统特色。同时，我们可以清楚地看出，ROSA发行版所绑定的办公套件是LibreOffice软件包，但是，其模块的图标与我们常见的不一样。毫无疑问，ROSA采用了最新款式的GNOME3.4。另一方面，ROSA是基于源自法国的Mandriva版本开发的KDE桌面。2010年12月28日，俄国总理普京（Vladimir Putin ）已经签署政府命令（实际12月17日已经签署）要求俄罗斯联邦各级政府机关及相关部门按照既定日程表全面采用自由软件包括GNU/Linux。该命令共计有25项内容，其中第5项要求俄罗斯通讯部准备一份针对典型问题的基本自由软件解决方案包，以供联邦各执行机关部门使用。第20项要求各政府部门使用自由软件（free software ）的具体计划应包括其下属各级机构在内。第25项要求在2015年第三季度全面完成该项转移计划。当今，在俄罗斯境内，由Linux所代表自由软件扬终于眉吐气，可神气了。特别是，自由办公套件LibreOffice大行其道，无人非议。在这种社会大背景下，作为自由软件GNU/Linux的发行版ROSA终于诞生了。祝贺她（ROSA）的诞生！3月1日，英国“馅饼”小电脑发布的第二天，一位俄罗斯朋友急切地在网络上四处询问：他这样写到：Дайтедве，Addme twice!I need 20 these computers! Where to pay &amp;amp; Where can I get it?it&amp;rsquo;s coooool !老外往往喜欢用一个“Cooooooooooool”字来表示“非常非常非常的酷”。在此，我希望再说一遍：在俄罗斯境内，GNU/Linux（自由软件）已经被社会大众所接受，不像在我们国内，自由软件GNU/Linux让人感到很别扭、很难受。</description></item><item><title>[zz]研究人员指出医疗系统存在大量漏洞 将成为黑客易攻对象</title><link>/posts/zz_the_researchers_noted_that_the_presence_of_a_large_number_of_loopholes_in_the_health_care_system_will_be_easy_to_attack_by_hackers_target/</link><pubDate>Thu, 27 Dec 2012 04:58:00 +0000</pubDate><guid>/posts/zz_the_researchers_noted_that_the_presence_of_a_large_number_of_loopholes_in_the_health_care_system_will_be_easy_to_attack_by_hackers_target/</guid><description>研究人员指出医疗系统存在大量漏洞 将成为黑客易攻对象teikaei 发布于 2012-12-27 09:20:57|1310 次阅读 稿源:cnBeta.COM 近些年来，医疗行业为了寻求更高效的治疗以及更完善的医疗体系，开始越来越依赖于互联网。而这一措施也暴露出了一个非常严重的问题&amp;ndash;大量在医院使用的电脑以及医疗设备正成为非常容易被黑客攻击的对象。互联网安全研究人员指出，黑客的攻击将不仅仅使他们能够获取来自院方的病人信息，而且还可以发起具备破坏性的攻击，比如说关闭掉医院使用的医疗系统。《华尔街时报》在过去一年的调查工作发现，医疗行业是美国所有系统中最脆弱的一个，其中一个原因则是医疗行业对待网络攻击的懈怠态度。美国约翰霍普金斯大学信息安全协会的计算机科学家以及技术总监Avi Rubin表示，医疗行业系统是他见过漏洞最多的一个系统。如果金融行业在对待网络安全问题跟医疗行业的态度一样，那么估计他都没有胆量把钱交给这些机构了。较于金融、军事以及各大公司网络，医疗行业网络的被黑客攻击的机率的确少得多。不过，在近几个月内，美国国土安全局却表达了对医疗行业将可能会遭到黑客攻击的担忧。DHS一条情报显示，目前存在于医疗系统中的漏洞将会致使病人的信息以及医疗信息受到严重威胁。日前，安全研究人员在医疗系统中发现了一些漏洞。它们跟此前曾渗透到金融服务行业、五角大楼系统以及谷歌等大型IT公司的漏洞相同。另外，又一支研究人员发现俄克拉荷马州的医疗处方电子医药箱系统使用的软件接口过于简单，以致于其可以非常轻易地被匿名用户侵入。OpenEMR是一位开源的电子医疗记录管理系统，它被广泛应用于全球各大Peace Corps组织。据悉，它也存在大量的安全漏洞，黑客也将非常容易地破解该系统。而当一位网友发布了存在于医疗系统的各大漏洞之后，美国内阁成员以及医疗组织开始准备采取措施来改变这一现状。 Peace Corps也考虑改变目前采纳的系统。不得不说，政府在医疗监管上并没有更上科技发展的步伐。据悉，美国食品和药物管理局的最新网络安全指导也是在2005年发布的。</description></item><item><title>[zz]Linus大神又怒了 我为什么要说“又”？</title><link>/posts/zz_linus_great_god_angry_why_i_say_the_quotandquot/</link><pubDate>Wed, 26 Dec 2012 11:32:00 +0000</pubDate><guid>/posts/zz_linus_great_god_angry_why_i_say_the_quotandquot/</guid><description>Linus大神实乃性情中人，口无遮拦。继称OpenBSD开发者是一帮自慰的猴子、 调侃digg用户是“手淫的海象”、以及 对 Nvidia 比中指爆粗 后，又有不懂事的人惹大神发怒了。这回是由在于Linus认为Mauro违反了内核维护的基本原则。他的原话很好理解：Linus大神实乃性情中人，口无遮拦。继称OpenBSD开发者是一帮自慰的猴子、 调侃digg用户是“手淫的海象”、以及 对 Nvidia 比中指爆粗 后，又有不懂事的人惹大神发怒了。闭上你的臭嘴，Mauro！这明显是一个bug，Kernel中的bug！你做了多长时间的维护人员了，为什么还不明白Kernel维护的第一原则？如果修改会导致用户程序的破坏，那问题一定是在Kernel上！永远不可以归咎用户程序的责任，学会这点真的很难吗？更糟糕的是，commit f0ed2ce840b3虽然并没有破坏程序，但它完全是废话。……永远不可以破坏USERSPACE！或许有人觉得Linus的批评太过严厉，但这也正反映出他对Kernel设计、维护原则的坚持，如果没有这种信念，相信Linux很难有今天的地位。希望各位程序员引以为戒！http://thread.gmane.org/gmane.linux.kernel/1413835/focus=1414106From: Linus Torvalds &amp;lt;torvalds linux-foundation.org&amp;gt; Subject: Re: [Regression w/ patch] Media commit causes user space to misbahave (was: Re: Linux 3.8-rc1) Newsgroups: gmane.linux.kernel Date: 2012-12-23 17:36:15 GMT (1 day, 17 hours and 45 minutes ago) On Sun, Dec 23, 2012 at 6:08 AM, Mauro Carvalho Chehab &amp;lt;mchehab redhat.com&amp;gt; wrote: &amp;gt; &amp;gt; Are you saying that pulseaudio is entering on some weird loop if the &amp;gt; returned value is not -EINVAL?</description></item><item><title>[zz]苹果未来的十大高科技产品 速来膜拜</title><link>/posts/zz_apple39s_future_ten-speed_high-tech_products_to_worship/</link><pubDate>Wed, 26 Dec 2012 11:32:00 +0000</pubDate><guid>/posts/zz_apple39s_future_ten-speed_high-tech_products_to_worship/</guid><description>苹果未来的十大高科技产品 速来膜拜ugmbbc发布于 2012-12-26 16:49:36|3622 次阅读 稿源:美桌网 感谢苏小喵的投递苹果产品是目前全球公认的高科技产品，像我们耳熟能详的iPad、iPhone、iPod、苹果电视等都是同类品牌产品中领先的全球品牌。如果你觉 得苹果只有以上一些热门高科技产品的话，那么你就错了，你知道吗，苹果未来还会推出众多高科技含量产品，也正为如此苹果的关注度也越来越高，只是了解的朋 友并不多，下面与大家盘点下未来苹果十大高科技概念产品。苹果未来十大高科技产品盘点1、iCycle 自行车这 是自行车中的“圣杯”。无论你的骑车风格是怎样的——是在山地的道路上行驶，只是为了放松而骑车，还是在城市中慢行，这种自行车都能自动转换模式，或者你 也可以在其配备的小小的显示屏上手动转换模式，这个显示屏的位置在自行车的把手处，它不仅可以按照你的要求来转换阻力水平，同时也能不断尝试着进行调整， 从而适应你所在之处的地形。这种自行车拥有内置的电池，可以在你骑车的时候进行充电，从而允许你连接iOS设备，然后在行进中为自行车充电。这是苹果在 2013年中将会带给我们的最好的未来产品之一。苹果iCycle 自行车这种未来产品的功能将会包括：——与iOS操作系统和iCloud完全整合，可与所有iOS设备进行连接；——与iTunes商店完全整合，可在行进中即时下载音乐；——与Nike+进行整合，可追踪用户的驾车表现；——支持WiFi上网功能（802.11a/b/g/n）；——蓝牙4.0。2、iSight眼镜这 种高科技眼镜不仅看起来很时髦，而且还能帮助你以非常不同的方式来看待生活。这种眼镜拥有屈光镜，而用户只需轻轻点击一下，就能将其变成一种拥有自我调整 功能的太阳眼镜，具体则将视阳光的强度而定。一种从根本上来说全新的透镜会提高你所能看到的东西的分辨率，这样一来你所看到的所有东西就都将拥有 1080p的高清分辨率，而且你不仅是能看到这些高清图像，同时还能打开摄像头来拍照，甚至是使用iOS应用来观看视频。这种眼镜的颜色将是黑白相间的。苹果iSight眼镜这种未来产品的功能将会包括：——1000万像素的摄像头iSight；——自动对焦功能；——照片面部识别功能；——高清视频录制功能（1080p），每秒钟最多60帧，可录制声音；——视频稳定性功能；——与iOS和iCloud完全整合；——蓝牙4.0；3、iRosol 油漆工具苹 果将在2013年推出的另一种未来新产品对任何艺术家来说都将是一种理想的工具，这种喷雾器不仅能进行任何的色彩扫描工作（或是你选择的东西），而且还能 允许你用铅笔或是滚动油漆刷来画一条粗线。这从根本上来说是一种新的替代墨盒，而且其耐用性要比普通的喷雾罐高出一倍。当你完成自己的画作时，只需要一次 替换一种颜色T（蓝色）、P（紫色）或是F（黄色）。黑色iRosol会另外出售。苹果iRosol 油漆工具这种未来产品的功能将会包括：——套三基色墨盒；——潘通色卡调色板（当你与黑漆喷雾器一起购买时）。4、iPets宠物机器人iDog和iCat理想的伙伴是iPets，这对任何想要拥有一只可爱宠物的人来说都是一种完美的东西。通过与iOS应用进行完全整合，你能为一只“动物”设定新的技巧来看管你的家。你还将获得一个新的同伴，它会小跑着跟在你的身后，追踪你的表现。苹果iPets宠物机器人这种未来产品的功能将会包括：——与iOS操作系统和iCloud完全整合，可与所有iOS设备进行通信；——与iTunes商店完全整合，即时下载“动物技巧”；——支持Facetime功能，从而能让用户通过它们的眼睛来监控自己的房子；——与Nike+进行整合，当它们跟着你跑步时可追踪你的表现；——支持WiFi上网功能（802.11a/b/g/n）；——蓝牙4.0。5、iBrew会煮咖啡的机器这种2013年的苹果产品将会是一种让我们起床以后感觉良好的好东西。iBrew能与iHome或iPhone的闹钟连接到一起，自动开始给你煮好早晨的咖啡。你可以在iBrew中放入最多12包“iBean”，然后这种机器会自己做所有事情。苹果iBrew会煮咖啡的机器这种未来产品的功能将会包括：——与iOS操作系统和iCloud完全整合；——12包“iBean”；——支持Wi-Fi功能 (802.11a/b/g/n)；——蓝牙4.0。6、iceCream食物苹果iceCream中不会有任何神秘的或是彩色的洗涤物，只会有好闻的气味和低脂肪含量。这是非常美味的未来苹果产品，我们将可在2013年看到这种产品。苹果iceCream食物这种未来产品的功能将会包括：——好闻的味道；——低脂肪含量。7、iceBox 冷冻冰箱在 有了iceBox以后，厨房将会发生复杂的变化。在苹果电视上看电影的时候想要去做个三明治？iceBox能追踪你在房间里的运动，然后当你在厨房里的时 候继续播放电影。iceBox中会有各种不同食物的不同部分，因此你可以通过这个iOS设备上的应用来在工作时为一块肉除霜。在iceBox的冷冻箱中有 个“超级冷冻”的部分，能在够加快冰冻的进程，在一瞬间就可完成。苹果iceBox 冷冻冰箱这种未来产品的功能将会包括：——与iOS操作系统和iCloud完全整合；——与iTunes商店完全整合，可即时下载电影或是烹饪应用；——内置动作传感器或和Facetime；——支持Wi-Fi功能 (802.11a/b/g/n)；——蓝牙4.0。8、iPlay游戏机iPlay 不只是一种游戏机，同时也是游戏的未来。iPlay将让你能通过iCloud与iOS设备进行简单化的通信，允许你在家里的时候，即使走到另一个房间里去 也能通过控制器来在电视上玩游戏；或者是当你在走路的时候，也能通过任何iOS设备来玩游戏。你玩游戏的体验将会是连续的，能在这种2013年最伟大的苹 果产品之一上看任何电视剧和电影。苹果iPlay多功能游戏机这种未来产品的功能将会包括：——控制器：在游戏机上玩游戏时，你可以看着游戏；——与iOS操作系统和iCloud完全整合；——与iTunes商店完全整合，可即时下载游戏或是电影；——Facetime；——支持Wi-Fi功能 (802.11a/b/g/n)；——蓝牙4.0。9、iQua最新淡水过滤系统水 是生命之源，而苹果开发的最新过滤系统能清洁任何被污染的水。这种未来的碳过滤器能清除水中99.9%的水银。此外，这种产品还能降低氯含量，让水变得干 净可口。这种产品将拥有便携式的设计，水能在很长时间里冷冻，因此这个过滤器作为家里、工作时或运动时的“水瓶”来说是一种很理想的产品。在这种苹果的未 来产品中，每个过滤器都要设计3个月时间。苹果iQua淡水过滤器这种未来产品的功能将会包括：——两个过滤器；——容量：两个250毫升的杯子。10、HiTops 高科技运动鞋正 如电影《回到未来》（Back to the Future）中的鞋子那样，HiTops这种高科技的胶底运动鞋能让你享受自动系鞋带的乐趣。如果有必要 的话，这种产品能与Nike+整合，允许你监控脚步移动的次数和消耗掉的卡路里，但你也可以享受这种胶底运动鞋所带来的便利和欣赏它们的外观。这种鞋子的 颜色将是白色或者黑色。苹果HiTops 高科技运动鞋这种未来产品的功能将会包括：——与Nike+整合，在你行走时追踪你的表现；——蓝牙4.0。编 后语：以上就是未来苹果将会推出的一些高科技产品，最令人激动的是iceBox、HiTops、iSights和iCicle，相信以上很多高科都会受到 众多果粉欢迎，如果您仅仅认为平股票苹果只有iPhone与iPad是高科技产品你就错了，未来值得关注的苹果高科技产品还有很多，让我们拭目以待吧。0顶一下</description></item><item><title>[zz]伊朗指出Stuxnet病毒卷土重来</title><link>/posts/zz_pointed_out_that_iran_stuxnet_virus_comeback/</link><pubDate>Wed, 26 Dec 2012 10:51:00 +0000</pubDate><guid>/posts/zz_pointed_out_that_iran_stuxnet_virus_comeback/</guid><description>伊朗指出Stuxnet病毒卷土重来teikaei 发布于 2012-12-26 09:32:40|1654 次阅读 稿源:cnBeta.COM 据外媒报道，伊朗南部的一位国防官员表示，该地区的一家大型发电厂以及多家工业厂家再次遭到了Stuxnet 病毒的袭击。据悉，该种被认为是美国政府和以色列协作研发的产物。伊朗当地国防主席Ali Akbar Akhavan指出，这次的Stuxnet病毒攻击已经成功地得到了遏制。据BBC报道，伊朗多次指出其成为了来自其他国家的网络攻击对象，不过他们最终都成功地控制了病毒。Stuxnet被认为是美国研发出来对抗其他国家的一种高危病毒。由于早前Stuxnet源代码在网上被曝，并且感染了来自印度尼西亚、印度以及美国等地区的电脑。所以这次的攻击如果真的属实的话，那么发起者可以是任何人。</description></item><item><title>[zz]2012年OS X安全问题盘点 大部分用户毫无意识</title><link>/posts/zz_2012__os_x_security_issues_most_users_have_no_awareness_inventory/</link><pubDate>Wed, 26 Dec 2012 10:42:00 +0000</pubDate><guid>/posts/zz_2012__os_x_security_issues_most_users_have_no_awareness_inventory/</guid><description>2012年OS X安全问题盘点 大部分用户毫无意识ugmbbc发布于 2012-12-26 08:08:59|2581 次阅读 稿源:腾讯数码 2012年对于OS X安全性来说是让人激动的一年，至少如果你是一个安全专家或者研究员，你会颇有感触。有很多事件发生让人们一直保持警惕状态。虽然苹果公司因为一些安全问题处境很窘迫，但是总的来说，当用户发生安全问题时，公司始终毫不犹豫冲在第一线来保护用户。至少这是很多安全研究者的想法，他们全年都在关注着OS X的发展。Flashback事件还记得Flashback吗？2011年当这个恶意软件第一次进攻Mac时，它并没有大范围扩散开来，以至于大部分的用户竟然完全没有意识到被侵入，直到今年年初时才知晓。一瞬间，苹果开始面对出现在OS X系统里理论上第一个具有明确意义上的高调恶意软件，也是苹果公司第一次在媒体面前如此之多的曝光。该事件触发了大量对苹果公司安全隐患的唏嘘声，研究院和学者也开始质疑，说苹果持续增长的普及性最终只会引来更多对其安全的攻击行为，不管是针对iOS或者Mac上。实际上，不可否认针对Mac用户的恶意攻击在频繁地递增，苹果公司也确实采取了很多防卫措施来打这场持续如此之长的安全游戏，但是在它修复Oracle补丁后长达两个月的时间竟然还同时遗留了一个开放的Java缺陷。移除Java尽管发生这个大失误，也不是不无好处，这场惨败的安全战成了苹果公司目前所做过最有意义的决定的催化剂，以加强OS X的安全性。安全研究员（奥巴马美国政府前安全工程师）Ben Hagen告诉Ars说：“Flashback不仅导致苹果公司从它们默认安装里移除了Java，也促使它们发布了一款专用清理工具。当一个操作系统供应商需要发布一款专用清理工具的时候，你该知道事态已经很严重了。”Hagen指出苹果公司需要发布它自己的Flashback清理工具的必要性，因为Mac自带的反恶意软件市场和用户基地确实相对比较薄弱。但是针对Flashback更大的决定是尽可能更多地减少OS X用户使用的Java软件的作用，除非用户很明确需要安装它。Hagen还说：“Java的移除是苹果公司所作出的一个非常有趣的决定，用户系统的Java程序变成了开发里一个臭名昭著的因子，去年多次出现新的远程执行安全漏洞，把Java程序移除不仅可以简化苹果的状态，还可以为用户提供一个更加安全的默认状态。备受关注的（虽然臭名远扬）Mac和iOS黑客Charlie Miller同意这个评价，说到目前为止可以说这是苹果公司2012年作出的最有意义的决定。Miller告诉Ars：“如今需要给OS X写一个开发程序的工作量和给Windows写一个开发程序一样大。因为Windows的用户更多，所以其开发程序会得到更多的报酬，但是现实生活中，几乎没有OS X开发程序，Java开发程序是一个例外。对于Java小应用程序沙盒逃脱类型的开发，同样的开发程序可以在Windows和OS X上运行。”Miller认为，实际上开发程序最终还促使了Mac用户数上升，这都要归功于Java。苹果公司为减少OS X下Java安装基础所做的一切就是给自己增加了安全，也给了它们现实的提升。app签名安全模式运动但是就算Flashback被镇压下来，Java也正在减少，苹果也一直在努力在Mac机上用户和app的互动上做一些大的调整。2012年夏天发布了Mountain Lion的一个新性能，可以默认限制第三方源app安装在系统里，以此来保护用户，避免用户不小心安装来自恶意或者不知名来源提供的app。这个新性能叫做Gatekeeper，它需要苹果开发者要么用一个已注册的证书给自己的app签名，以确保他们在app出现故障问题时可以付上更高级别的责任，或者通过Mac app商城销售其商品，然后给苹果公司百分之三十的分成。开发者团体对此的反应竟然没有任何一丝恐慌，大部分开发者都告诉我们他们对提供给用户的控制级别保持审慎乐观的态度，用户也可以选择完全不管警告，安装任何他们觉得满意的app。当我们几个月后再跟进Mac开发者时，他们依旧对Gatekeeper给app开发环境和用户带来的影响保持非常乐观的态度。Delicious Monster的Wil Shipley九月时告诉Ars：“我认为Gatekeeper是终端用户的一个超大福利，它能够非常有效地抵御中间人攻击和伪装攻击，以及通常的恶意软件。”Iconfactory的Graig Hockenberry也同意他的说法，他表示：“我完全相信GateKeeper在帮助终端用户。我知道无论何时，当我按下下载链接时看到开发者并没有给他们的app签名，我就会谨慎思考是否安装它。”实际上，总体对Gatekeeper持有的观点比我们期待的要乐观很多，安全专家也非常欣慰它到目前为止进展地如此顺利。本周Hagen告诉Ars：“从安全观点来看，苹果对OS X系统app商城持续的举动，以及增加的严格应用签名模式对于形成一个管理更好的环境系统来说是非常有意义的。现在的app商城模型使得苹果可以提供更有质量的管理控制，且可以视查哪些应用对终端用户有效，它在限制使用者以用户下载应用模式（伪造的AV应用、间谍软件等等）暴露于恶意软件之下还是卓有成效的。”高调的“hack”风波Flashback、Java程序最终的移除方案、还有Mountain Lion新功能的发布不是2012年Mac世界里出现的唯一几个安全相关话题。八月Wired编辑Mat Honan制造了一场“hack”大风波，不仅仅是其众多的设备，包括iPhone、iPad还有Mac被远程攻击者全部攻击，且他没有备份成功，还有就是因为被牵扯的技术问题，也就是苹果的技术——所有和苹果最新版本的云服务iCloud关联的技术。这并不完全是iCloud的错误，亚马逊也被牵扯进来，攻击者可以联机处理亚马逊和苹果账户，给他们提供一种类型的接入以摧毁Honan的数码生活。那么，苹果公司该怎么做呢？公司并没有直接被牵连进Honan的数据擦除事件里，但是就像Hagen所说，这个事件是2012年非常值得被注意的事件，因为它强调了很多知名联机账户系统的缺陷，也指出了iCloud的责任。通过进入Honan的iCloud账户，他的设备开始被远程擦除攻击进攻。Hagen告诉Ars：“这是很多消费者面临的新问题，没有保护好他们的其中一个联机账户就可以导致设备全部瘫痪，这个攻击强调了苹果公司和其他机构保护账户连入的必要性，防止遭到社交攻击，且个人用户也应该特别保护他们的苹果账户。”实际上，Honan的“hack”风波促使了我们很多人修改密码，开启双重认证，且保证有和好的备份计划，这在之前我们都是说说而已并未进行实际操作。亚马逊公司和苹果公司最终开始改变策略以防止未来发生相似的攻击。这并不是一个非常皆大欢喜的结局，但是Honan的损失就是我们的所得，至少让我们开始有了安全意识。展望2013所以说2012年是苹果和OS X安全级别里动荡的一年，但是总体来说，用Miller告诉Ars的说法，就是“我觉得苹果已经处在一个非常好的形态。”但是我们要知道，其实还有很大的提升空间，当我们迈步进入2013年的时候，OS X还会发生什么事件呢？Miller想通过苹果看到更多的透明的东西。他说：“我想看到的一件事就是安全社区里有更多互动和透明的东西。在BlackHat talk里他们没有回答问题确实是一个笑话，我想看到他们更多的交流，谈一谈他们测试的情况、app商城检查过程如何工作等等，并回答关于安全性的问题。”实际上，透明性和苹果是完全两个事物，不可能同时出现在一个句子里。但是苹果的首席执行官Tim Cook已经开始小心翼翼地改变这个状态，并将苹果开放给全世界。但是对比谈论苹果要采取什么措施，Hagen更想看到社团本身也可以为安全问题负责。Hagen说：“我想AV还有反恶意软件给OS X提供的东西需要很快地成熟起来，以面对近期的威胁。微软给自身供给加标签的方式对终端用户来说非常好，如果苹果也采取类似的措施就棒极了。App商城和系统升级的统一简化了事情，当然，OS X用户也需要养成定期应用升级的习惯。”来源：arstechnica</description></item><item><title>[zz]美硅谷IT人群调查：9年能买均价70多万美金的房子</title><link>/posts/zz_america_silicon_valley_it_crowd_survey_9_years_can_average_more_than_70_million_dollars_to_buy_a_house/</link><pubDate>Wed, 19 Dec 2012 14:12:00 +0000</pubDate><guid>/posts/zz_america_silicon_valley_it_crowd_survey_9_years_can_average_more_than_70_million_dollars_to_buy_a_house/</guid><description>美硅谷IT人群调查：9年能买均价70多万美金的房子teikaei 发布于 2012-12-19 09:58:02|5551 次阅读 稿源:深圳特区报 作为全球IT圣地，硅谷人的薪酬和消费如何？结合记者在硅谷的采访和Focus公司公布的信息图表，我们可略知大概。硅谷人拿高工资：Tom Zhang在硅谷生活多年，长期从事人力资源工作，在新浪微博上的名字就叫“硅谷猎头”。他告诉记者，硅谷居住着300多万人，共有133万个就业岗位，平均年工资远高于美国的平均工资，达到8万多美元。一般的科技部门和创业公司职位的年平均工资情况如下：软件工程师：9万美元；Java/Web 开发者：9万7千美元以上；项目主管：9万2千美元；平面设计师：5万6千美元以上。收入均高于美国平均水平一万美元以上。其中Java/Web 开发者较全国平均水平高3万多美元。以上仅是硅谷的平均工资，而一些很“牛”的软件公司的收入远不止于此。比如，Google：18万美元； Face Book：15万美元；苹果：14万美元；Twitter：12万5千美元。高消费高税收尽 管硅谷人拿着高收入，但是这里的消费相比全国平均水平高出六成。比如，在硅谷公司科技职位的平均薪水是9万多美元，要获得同样的购买力，在达拉斯和费城仅 需4万多美元，即便是高消费的纽约也仅需7万多美元。税收也相对较重，在加州，如果一年的收入超过46776美元，需要交 9.3% 的税。平均来看，一个在硅谷科技岗位工作的员工，5年内交的税超过4万美元。9年能买一套房硅谷是美国房价最高的地方之一，平均房价是70多万美元，这几乎是全国平均水平的两倍。以平均薪水来推算，硅谷人工作9年能买到一套房。房价贵，租金也高，最近还涨了点。普通的一房一厅的公寓，月租至少也要1500美元。公寓租金的平均水平是 2241美元/月，比全国平均水平高出76%。</description></item><item><title>fedora-Rawhide</title><link>/posts/fedora-rawhide/</link><pubDate>Tue, 18 Dec 2012 06:17:00 +0000</pubDate><guid>/posts/fedora-rawhide/</guid><description>Rawhide is the name given to the current development head of Fedora. It consists of a package repository called &amp;ldquo;rawhide&amp;rdquo; and contains the latest build of all Fedora packages updated on a daily basis. Nightly builds are also available during the early portion of the Fedora Release Life Cycle.Rawhide is the name given to the current development head of Fedora. It consists of a package repository called &amp;ldquo;rawhide&amp;rdquo; and contains the latest build of all Fedora packages updated on a daily basis.</description></item><item><title>[zz]25个GPU的设备轻松破解各种哈希密码</title><link>/posts/zz_25__gpu_various_devices_easily_crack_the_password_hashes/</link><pubDate>Mon, 10 Dec 2012 05:35:00 +0000</pubDate><guid>/posts/zz_25__gpu_various_devices_easily_crack_the_password_hashes/</guid><description>25个GPU的设备轻松破解各种哈希密码ugmbbc发布于 2012-12-10 09:46:19|7304 次阅读 稿源:solidot 通常认为以MD5、SHA1等方式哈希存储的密码要比明文存储密码安全的多。但这已成为历史。通过openCL在25个AMD gpu上的同步运算，已经可以达到每秒1800亿次MD5运算或630亿次SHA1运算。而一个由大小写字母和数字组成的8位密码仅需要愈200万亿次运算，即20分钟就能完全穷举这样的MD5加密密码。即使算上标准键盘上所有标点符号 (95^8)，也仅需10小时就能穷举完毕。SHA1虽然号称比MD5更安全，也只不过是多耗费3倍的时间，对于密码的破解而言没有本质区别。如果想保护 密码的安全，最好还是在每个重要的网站都使用不同的密码。不然任何一个网站的数据泄露都可能危害到其余账号。</description></item><item><title>[zz]Android社区争吵 三星Mod开发者一怒之下放弃继续开发</title><link>/posts/zz_android_community_quarrel_samsung_mod_developers_continue_to_develop_huff_abandon/</link><pubDate>Fri, 07 Dec 2012 05:35:00 +0000</pubDate><guid>/posts/zz_android_community_quarrel_samsung_mod_developers_continue_to_develop_huff_abandon/</guid><description>Android社区争吵 三星Mod开发者一怒之下放弃继续开发ugmbbc发布于 2012-12-07 06:55:43|5640 次阅读 稿源:XDA 感谢Aadam77root的投递昨天，I9103 4.1的开发者Aadam77root指责I92的开发者dman3285借用其代码却没有在使用的代码中表示感谢。更让人气愤的是dman3285已经成功将代码合并到了CM10里面，而adam77root发给CM的邮件却被忽略。一怒之下，Aadam77root决定退出继续为I9103带来4.1的稳定版。目前I9103 4.1的稳定版几乎就要完成了，大部分BUG已经被修复，此时adam77root大神的退出十分让人感到十分遗憾。目前已经有不少网友表示愿意捐助他继续为大家带来4.1的稳定版。后续情况，估计要视CM官方的态度来决定了。围观地址：http://forum.xda-developers.com/showthread.php?t=1870260&amp;amp;page=125</description></item><item><title>[zz]卡巴斯基：明年将迎来OS X恶意软件大爆发</title><link>/posts/zz_kaspersky_next_year_will_usher_in_os_x_malware_outbreak/</link><pubDate>Fri, 07 Dec 2012 04:54:00 +0000</pubDate><guid>/posts/zz_kaspersky_next_year_will_usher_in_os_x_malware_outbreak/</guid><description>卡巴斯基：明年将迎来OS X恶意软件大爆发ugmbbc发布于 2012-12-07 08:06:20|1748 次阅读 稿源:腾讯数码 数字生活和现实生活将继续混合和融合，成为永远不可分割的整体，而与之相关的风险当然也会继续存在、改变、扩大和变形。监视互联网犯罪活动的网 络安全公司有很多，卡巴斯基实验室就是其中的佼佼者之一。该公司昨天发布了《2013年网络安全预测》，以下是这份预测的要点简述：Mac恶意软件增加卡 巴斯基全球研究和分析总监Costin Raiu及高级区域研究员David Emm表示，2013年，针对苹果Mac OS X操作系统的恶意软件将会有所增加。黑客们以前较少针对OS X，因为他们把时间花在针对Windows的病毒和其他恶意软件上，以便感染更多的计算机，侵害更多的用户。但今年的Mac OS X木马病毒“闪回”（Flashback，又名Flashfake）爆发之后，情况已经有所不同。“根据我们的统计数据估计，‘闪回’感染了70多万台Mac，这应该是迄今为止最大的一次Mac OS X系统感染。”“‘闪回’的爆发是个大事件，因为它打破了Mac刀枪不入的神话，并证明病毒也可以在非Windows平台上大规模爆发。早在2011年，我们就预计将会出现更多的Mac恶意软件攻击，只是没想到情况会是这样的戏剧性。”卡巴斯基的研究人员说，除了较为广泛的攻击（比如使用“闪回”）以外，他们也发现了“针对Mac特定群体或个人用户的攻击”。 他们认为“针对Mac电脑的威胁确实存在，并有可能继续增长。”间谍工具和隐私问题2013年的另一个大趋势是：政府加强网络监控，个人隐私遭受的威胁持续增加。在 打击网络犯罪的时候，各国政府有必要使用“合法”的监视工具，因为它们可以帮助执法机构领先一步，赶在犯罪分子的前面。这些间谍工具包括 “Bundestrojan”这样的恶意软件，据说德国政府就暗中使用它来监视德国公民，而且执法机构也会使用软件来监视人们的手机使用。“很显然，对于隐私和公民自由来说，合法监控工具产生的影响更加广泛，”Raiu和Emm表示， “执法机构和各国政府试图赶在罪犯前面，所以就算人们持有不同看法，它们也很有可能将继续使用这样的工具。”对 个人隐私的威胁不仅来自政府；由于用户数据的价值变得越来越大，罪犯也会伺机而动。各种网络服务的服务器正在继续收集海量用户数据。 “不管是对网络罪犯，还是对合法企业来说，个人数据的价值只会增长，不会减少。所以用户隐私遭受的威胁也在增加。”研究人员们表示。此外，用户数据将被继 续用于广告目的，而有时候我们并不知情或不同意。其他问题卡巴斯基估计将在2013年出现的问题还有很多，以下是一些简要总结：-有针对性的攻击将持续增加-“黑客行动主义”（hacktivism）持续发展-单一民族国家（nation-state）支持的网络攻击将会增多-基于云的基础设施将遭受攻击-网络信任和数字授权问题将持续存在-手机恶意软件将持续增加-漏洞和恶意软件仍然是网络犯罪分子的主要攻击方法</description></item><item><title>[zz][详讯]知名变性黑客Kristin Paget成为苹果系统安全研究员</title><link>/posts/zz_detailed_information_hacker_kristin_paget_become_famous_degeneration_apple_systems_security_researcher/</link><pubDate>Fri, 07 Dec 2012 04:52:00 +0000</pubDate><guid>/posts/zz_detailed_information_hacker_kristin_paget_become_famous_degeneration_apple_systems_security_researcher/</guid><description>[详讯]知名变性黑客Kristin Paget成为苹果系统安全研究员ugmbbc发布于 2012-12-07 06:49:35|2577 次阅读 稿源:cnBeta.COM 感谢jailbreak 6.1的投递Paget是业界知名的黑客，1年前他做了变性手术，从男人变成女人，名字也由 Chris Paget更改为Kristin Paget。Paget在邮件中确认自己已经是苹果雇员，今年9月开始为苹果系统安全部门工作，但拒绝回答任何问题，苹果发言人也拒绝对此事评论。Paget几年之前曾经帮助微软在Vista发布前排除系统多个安全问题。当时，微软安全团队认为Vista系统已经没有什么大漏洞，并准备发布。 Paget和他的精英团队却发现了很多严重的安全问题，发现问题后Paget为了修正这些安全问题甚至将Vista的发布时间推迟了。微软Windows 开发部门副总裁为了表示感激，赠送给Paget和团队特殊的T恤，上面印着“是我让Vista推迟发布的！”由于最近几年Mac OS X系统的普及率逐渐提高，越来越大的恶意软件和木马开始针对OS X平台。Paget加入苹果是为了让OS X系统更安全。现在Paget在Linkedin的职位介绍是“核心系统安全研究员”。希望OS X能在Paget的帮助下越来越安全。</description></item><item><title>【zz】红帽RHEL7新功能前瞻</title><link>/posts/zz_preview_new_features_of_red_hat_rhel7/</link><pubDate>Sat, 01 Dec 2012 09:17:00 +0000</pubDate><guid>/posts/zz_preview_new_features_of_red_hat_rhel7/</guid><description>http://www.serverwatch.com/server-trends/the-future-of-red-hat-enterprise-linux-7.htmlhttp://www.linuxdiyf.com/viewarticle.php?id=298912来源：51CTO差不多从2011年8月以来，红帽就一直在暗示有关红帽企业级Linux 7（RHEL 7）的各种情况。在红帽最近于波士顿举行的峰会活动（Summit Event）期间，这家Linux开发商极其详细地透露了下一代Linux会提供什么样的功能特性。RHEL 6在2010年11月正式发布。由于红帽企业级Linux大概每隔两年会有一次重大更新，RHEL 7定于2013年某个时候发布。红帽公司Linux工程副总裁Tim Burke强调，除了集成开发工具方面的改进外，RHEL 7的几个重要主题还包括数据中心运营效率、虚拟化和云计算等方面的改进。Burke说：“目前的状况是，我们现已完成了产品规划工作；会在2013年上半年发布RHEL7公共测试版。”不过，用户没必要等到2013年。Burke证实，RHEL 7的许多新的功能特性已出现在最近发布的Fedora 17中，还有一些新的RHEL 7功能特性会出现在定于今年年底之前发布的Fedora 18中。有望出现在版本7中的新的功能特性包括：全面支持目前RHEL 6中的几项预览技术；Linux容器虚拟化（Container virtualization）；新的SELinux及安全方面的其他改进。至于存储方面，逻辑卷管理器（LVM）快照在RHEL 7中也将得到全面支持，之前它被证实为是RHEL 6中的一项预览技术。LVM还将因LVM自动精简配置功能的推出而得到提升。只有数据被写入时，精简逻辑卷才耗用卷组空间——数据被丢弃后，随后就会返回该空间。从文件系统的角度来看，RHEL 7用户将来可以在ext4、xfs和Btrfs之间进行选择。Btrfs目前同样处于技术预览阶段，提供了新的回退和快照功能，而Ext4（目前Linux的默认文件系统）不具备这些功能。用户界面RHEL 7还将采用一种新的用户界面。红帽开发人员Denise Duman解释，新的界面采用了中心辐射式（hub and spoke）模型。所以现在有三个主要的中心（hub），再也不需要进行大量的配置以便启动和运行起来，而不是有14个屏幕。另外，安装系统所需的内存占用空间已大幅缩减，所需的最小内存空间是512 MB；这样一来，就能支持比较小的访客系统。在桌面端，RHEL 7还提供了GNOME 3用户体验，这对RHEL用户来说将是全新的体验。红帽的开发人员Jonathan Bandford说：“Gnome 3是一个巨大的改变，我们在这方面已作了一些激动人心的改进。”原文：The Future of Red Hat Enterprise Linux 7</description></item><item><title>【zz】Linux终端下的ASCII艺术</title><link>/posts/ascii_art_zz_under_linux_terminal/</link><pubDate>Wed, 21 Nov 2012 00:52:00 +0000</pubDate><guid>/posts/ascii_art_zz_under_linux_terminal/</guid><description>Linux终端下的ASCII艺术作者：chen-xiao | 出处：博客园 | 2012/5/16 17:01:02 | 阅读79次（原文请访问我的个人博客 http://chen-xiao.com/?p=26 ）在电脑前工作的人们，相信每天对着黑糊糊的代码屏幕也会有感到心烦意躁的时候。这个时候，我们需要来点某些调剂，给无聊的代码工作加点料。Linux下有许多复活节彩蛋类似的程序，但大部分是在GUI下面工作的。对于没有GUI的我们来说怎么办？那当然是可爱的ASCII类程序啦1. banner xxx，将字符转化成*号表示的大写字符，效果如下2. figlet xxx，这个和banner类似，不过转化出来的是空心的大写字，效果如下3. cowsay xxx，无聊人做出来的牛比东东，把你输入的字符当作一头牛的话说出来，这就是所谓的吹牛皮？当然cowsay不仅仅只有这一个动物而已，通过-f参数指定不同的形状，还可以通过-e设定眼睛字符，通过-T设定舌头字符等等。这里有一条牛掰的命令，直接打印出所有的形状，然后用less定义翻页来观看cowsay -l | grep -v “^Cow” | sed -e “s% %n%g” | sed -e “s%(.*)%cowsay -f 1 Now I am a 1%” | sh | less4. sl，你没看错，我也没打错，对了，不是ls，而是sl。估计是哪位代码负责人对团队内成员老敲错命令的惩罚而作出来的一款程序。如果你安装过并不幸的敲错了列举文件的命令，那么在接下来的一分钟内就什么都干不了，只能眼睁睁的看着一辆火车在你屏幕上驶过。。。（不过好像最新的版本已经能Ctrl+C取消了）相关图片如下，还有更变态的sl-h你也可以试试5. jp2a，这是一个把jpg图像文件转化为ASCII并显示出来的软件，只能支持jpg。。。不过在linux下转换图片格式也容易6. bb，如果你知道aalib，你就应该不会错过这个牛鼻到变态的玩意儿。这款程序是对aalib里面所有技术的一个展示，它想要向人们倾诉：没有什么是不能由ASCII来完成的7. mplayer，提到mplayer，你不可能不知道。但是说到它在ASCII方面的牛比之处，估计你会吓一跳。让我们先来看一下它所支持的视频输出格式看到那个aalib了没有，这就是上面介绍的bb demo所使用的ASCII图像库。使用这种输出方式，你就能通过跳动的ASCII来欣赏各种视频文件了，只要你敢，在公共场合看爱情动作片都没人能发现。当然，首先你自己的想象力也必须得达到一定级别才行。看下面的youtube视频就是用aalib播放动画文件的效果：</description></item><item><title>fedora18试用</title><link>/posts/fedora18_trial/</link><pubDate>Mon, 19 Nov 2012 15:01:00 +0000</pubDate><guid>/posts/fedora18_trial/</guid><description>fedora18马上就要beta了，今天试用了一下alpha，果然bug多啊</description></item><item><title>fedora18-new features-syscall filters</title><link>/posts/fedora18-new_features-syscall_filters/</link><pubDate>Fri, 16 Nov 2012 06:29:00 +0000</pubDate><guid>/posts/fedora18-new_features-syscall_filters/</guid><description>看fedora18的新特性列表，发现了syscall filters功能，感觉挺有意思，然后用空尝试一下。Syscall FiltersSummarySyscall filtering is a security mechanism that allows applications to define which syscalls they should be allowed to execute.OwnerName: Cole RobinsonEmail: crobinso@redhat.comName: Paul MooreEmail: pmoore@redhat.comCurrent statusTargeted release: Fedora 18Last updated: August 16, 2012Percentage of completion: 100%Detailed DescriptionThe syscall filtering concept, and the motivation behind it, is fairly simple; the Linux Kernel supports a very large number of system calls (syscalls), over 300 on x86_64 for the 64 bit implementations alone, with applications typically requiring only a very small subset of these syscalls to function normally.</description></item><item><title>[zz]34款Firefox渗透测试插件</title><link>/posts/zz_34_paragraph_firefox_plugin_penetration_testing/</link><pubDate>Thu, 08 Nov 2012 06:22:00 +0000</pubDate><guid>/posts/zz_34_paragraph_firefox_plugin_penetration_testing/</guid><description>34款Firefox渗透测试插件No Comments | 文章转载 | by 陆羽 | 1360 Views. | 2012-09-06, 11:07 PM工欲善必先利其器，firefox一直是各位渗透师必备的利器，小编这里推荐34款firefox渗透测试辅助插件，其中包含渗透测试、信息收集、代理、加密解密等功能。 1：Firebug Firefox的 五星级强力推荐插件之一，不许要多解释 2：User Agent Switcher改变客户端的User Agent的一款插件 3：Hackbar攻城师必备工具，提供了SQL注入和XSS攻击，能够快速对字符串进行各种编码。 4：HttpFox监测和分析浏览器与web服务器之间的HTTP流量 5：Live HTTP Headers即时查看一个网站的HTTP头 6：Tamper Data查看和修改HTTP/HTTPS头和POST参数 7：ShowIP在状态栏显示当前页的IP地址、主机名、ISP、国家和城市等信息。 8：OSVDB开放源码的漏洞数据库检索 9:Packet Storm search pluginPacket Storm提供的插件，可以搜索漏洞、工具和exploits等。 10：Offsec Exploit-db Search搜索Exploit-db信息 11：Security Focus Vulnerabilities Search Plugin在Security Focus上搜索漏洞 12：Cookie Watcher在状态栏显示cookie 13:Header Spy在状态栏显示HTTP头 14：GroundspeedManipulate the application user interface. 15：CipherFox在状态栏显示当前SSL/TLS的加密算法和证书 16：XSS MeXSS测试扩展 17：SQL Inject MeSQL注入测试扩展 18：Wappalyzer查看网站使用的应用程序 19：Poster发送与Web服务器交互的HTTP请求，并查看输出结果 20：Javascript Deobfuscator显示网页上运行的Javascript代码 21：Modify Headers修改HTTP请求头 22：FoxyProxy代理工具 23：FlagFox可以在地址栏或状态栏上显示出当前网站所在国家的国旗，也有更多的其他功能，如：双击国旗可以实现WOT功能；鼠标中键点击是whois功能。当然用户可以在选项里设置快捷键实现诸如复制IP，维基百科查询等功能。 24：Greasemonkeygreasemonkey 使你可以向任何网页添加DHTML语句(用户脚本)来改变它们的显示方式。就像CSS可以让你接管网页的样式，而用户脚本(User Script)则可以让你轻易地控制网页设计与交互的任何方面。例如:* 使页面上显示的 URL 都成为可以直接点击进入的链接。* 增强网页实用性，使你经常访问的网站更符合你的习惯。* 绕过网站上经常出现的那些烦人的 Bug。25：Domain Details显示服务器类型、IP地址、域名注册信息等 26：WebsecurifyWebsecurify是WEB安全检测软件的Firefox的扩展，可以针对Web应用进行安全评估 27：XSSed Search搜索XSSed.</description></item><item><title>[zz]FBI被指在OpenBSD的IPSEC协议栈中放置后门</title><link>/posts/zz_fbi_accused_of_placing_a_backdoor_in_openbsd39s_ipsec_stack/</link><pubDate>Thu, 08 Nov 2012 02:20:00 +0000</pubDate><guid>/posts/zz_fbi_accused_of_placing_a_backdoor_in_openbsd39s_ipsec_stack/</guid><description>FBI被指在OpenBSD的IPSEC协议栈中放置后门ugmbbc发布于 2010-12-16 07:56:21|7520 次阅读 OpenBSD创始人Theo de Raadt公开了Gregory Perry的一封来信。Gregory Perry在10年前参与了OpenBSD加密框架开发。在信函中，他声称FBI付费给开发商，以在OpenBSD的IPSEC协议栈中植入后门。 现在他将这段机密公诸于众，是因为他与FBI签署的保密协议已到期。10年前加入的后门代码如今已经面目全非，de Raadt表示不清楚代码造成的真正影响有多大，由于OpenBSD是第一个开发出供免费使用的IPSEC协议栈，因此随后许多项目和产品都是直接拿现成 的代码。 查看:Subject: Allegations regarding OpenBSD IPSECList: openbsd-techSubject: Allegations regarding OpenBSD IPSECFrom: Theo de Raadt &amp;lt;deraadt () cvs ! openbsd ! org&amp;gt;Date: 2010-12-14 22:24:39Message-ID: 201012142224.oBEMOdWM031222 () cvs ! openbsd ! org[Download message RAW]I have received a mail regarding the early development of the OpenBSDIPSEC stack. It is alleged that some ex-developers (and the companythey worked for) accepted US government money to put backdoors intoour network stack, in particular the IPSEC stack.</description></item><item><title>[转]现状描述-文章-缓冲区溢出</title><link>/posts/rpm_status_description_-_articles_-_buffer_overflow/</link><pubDate>Mon, 05 Nov 2012 02:57:00 +0000</pubDate><guid>/posts/rpm_status_description_-_articles_-_buffer_overflow/</guid><description>计算机的普及和网络技术的发展形成了一面双刃剑,一方面它使得人们可以更加自由地进行信息、知识的共享,另一方面,这也使得计算机系统安全问题同益严重,基于网络的攻击行为已成为对计算机系统安全造成威胁的主要因素。回首2001年,Internet上引起轩然大波的两个病毒:Code Red(红色代码)和Nimda(尼姆达)II】。这两个病毒对网络安全所造成的破坏是前所未有的,它们主要是利用了缓冲区溢出漏洞,因此这种漏洞的攻击技术就被称为缓冲区溢出攻击技术。其实早在1996年,黑客电子邮件组邮递清单的仲裁者Alphe One就写了一篇题为“Smashing The Stack For Fun AndProfit&amp;quot;的文章17】,该文章清楚的阐述了~种攻击方式——缓冲区溢出攻击。文章的发表引起了人们的广泛关注,同时,存在于大量服务进程和应用程序中的漏洞也被相继发现,这些漏洞引起了许多严重的安全性问题。迄今为止,缓冲区溢出仍然是以一种危害相当大的计算机安全问题而存在的。根据CERT(Computer Emergency Readiness Team)发布的2003年年度报告,由缓冲区溢出漏洞导致的攻击占了远程网络攻击和渗透的50%以上【3】,并预计仍有上升的趋势。虽然缓冲区溢出漏洞产生的直接原因被认为是由于C语言编译器本身以及编程人员的疏忽造成的,但是后来事实证明,这种漏洞的消除和避免几乎是不可能的。因此对于缓冲溢出攻击的检测和识别就成为了克服该类入侵的主要途径。由于缓冲区溢出漏洞非常普遍,可存在于Windows、Unix、Netware、SOL Sever等各种系统和应用程序中13J,因此缓冲区溢出攻击技术也成为了一项广泛而基础的攻击技术之一。开展缓冲区溢出攻击的研究,已经成为计算机系统整体安全性的一个重要方面和有益补充。鉴于以上原因,本篇论文在对缓冲区溢出攻击进行深入分析研究后,在GECISM(计算机免疫系统模型)的框架内,实现了对此类攻击的识别和消除。</description></item><item><title>【zz】公司的安全团队</title><link>/posts/the_company39s_security_team/</link><pubDate>Sun, 04 Nov 2012 09:13:00 +0000</pubDate><guid>/posts/the_company39s_security_team/</guid><description>我来简单介绍下各互联网公司的安全团队吧，不当的地方还望各位补充和指正。 1、为什么互联网公司要有自己的安全团队。 a，公司重视：互联网公司的业务特别依赖于网络，网络的稳定和安全直接关系的公司业务，甚至是公司的市值，因此需要重点保障； b，市场不能完全满足：由于安全公司偏向于传统网络安全，比较关注漏洞、FW、IDS、Scanner、Anti-DDOS、UTM等通用性安全产品和技术的研究，对于互联网公司的业务分析的相对少一些，因此短期内无法满足互联网公司的全部需求，因此在需要得到安全公司的服务外，还有不少安全需求无法解决。 c、和业务结合紧密：互联网公司的安全工作的以公司业务为主要目标，并和公司的业务紧密结合，并要求能落地实施，同时考虑到一些内部机密，不适合外包； 因此大部分都会自己组建安全团队。 2、目前互联网公司安全团队的工作内容、组织架构和人员数量（按公司名字首字母排列） a,阿里： 阿里是我很佩服的一个公司，非常欣赏他们的商业模式，而且最近几年的技术发展非常快。 目前阿里的安全架构分为阿里集团和各公司相结合的模式，即阿里集团的安全部门统一制定安全策略、安全框架和一些安全系统，各公司在此基础上进行推行，也会在此基础上根据业务的特点来做安全工作。 集团目前的安全组织是安全中心，主要工作是反黑客入侵，并且结合阿里的业务特性（以WEB业务为主），因此在系统、web安全方面的研究是国内互联网公司中最深入的，目前团队30来人左右。但是牛人很多，比如刺、云舒、hawk、wzt等等，交流学习氛围非常不错。 推荐：http://hi.baidu.com/aullik5/blog/item/a2fbb110c6950e75ca80c4f8.html b，百度 百度的工程师文化非常强，每次和他们的技术人员聊，他们都显示出了很强的自豪感：） 百度的安全建设相对晚一些，目前在组织架构上是放在系统部下，向系统部总监汇报，人员大概在10多个。基于百度的业务特性，百度的安全人员主要也是以WEB和网络安全为主，对反DDOS和web方面的研究自成一套，保障了百度业务的稳定和快速发展。聚集了晓栋、剑心、firefly等牛人，这次百度DNS的事件，我想应该会让Robin更关注安全方面的工作，因此后续的发展应该会更快。 c，盛大 盛大在安全点的方面建设较早（比如密宝），但体系方面的建设才刚起步，并设立了CSO的职位。 盛大的安全工作可以分为：网络安全、帐号安全为主，还包括支付安全、业务连续性、内控等工作。 网络安全主要以传统的反黑客入侵为主，包括网络安全、系统安全、WEB安全等方面； 帐号安全以保障用户帐号安全为主要目标，包括密宝建设、数据分析、帐号安全体系建设，人工干预等方面； 目前安全团队分散在盛大的各个公司，总共有40来人，包括San、段钢、neeao、召唤等人。 d、腾讯 腾讯是目前国内互联网公司中安全建设较早，投入较大的公司，2005年从运维支持部分离出来，成立了安全中心，目前安全中心人数超过120人。 腾讯公司安全中心的工作包括： a、传统的网络安全； b、帐号安全； c、内容安全（反有害信息） 其他方面的安全如： d、安全政策法规研究 e、内控 f、QQ医生 g、支付安全 则分散在其他相关部门。 由于腾讯的研发能力比较强，因此在安全体系和平台的建设上比较强，开发了自己的WEB扫描器，主机Agent 安全系统，反DDOS 系统，特别值得一提的是他们自己研究出来的网站挂马检测，依托SOSO的爬虫，实时检测互联网的网页，并和多个业务结合，取得了不错的效果。每年举办的安全峰会也取得了一定的成绩。 另外在帐号安全和内容安全方面也取得了较好的技术积累。 腾讯中的牛人包括Coolc、plan9，apollo、xenos、lake等等。 另外sina、sohu、巨人、迅雷、360等互联网公司在安全方面都取得了较好的成绩，由于时间较晚了，我以后再逐步补充。 3、总结 由于最近几年互联网公司发展较快，因此在安全方面的投入较大，同时由于国内法律相对不健全的情况，互联网公司遭遇的安全挑战很大，这也促成了互联网安全团队的快速成长。 但是毕竟术业有专攻，传统的安全公司如绿盟、启明，新型的安全公司如创宇和一些个人在技术方面的研究和积累都是非常深厚的，国际咨询公司在安全管理体系方面的积累也是很强大的。 希望能在大家的一起努力下，加强交流，共同保障互联网的安全。 啊呵呵，作为论坛的新手，很高兴见到这么多老朋友：） 我现在盛大学习，毕竟在互联网公司待了5，6年，也得到了很多朋友的帮忙，所以略微知道一些互联网公司的情况，其中很多情况也不一定是正确的。 补充sina、sohu、巨人、迅雷、360几个公司的简单情况吧： 1、Sina： Sina 一直以来都是很大的门户网站，受到的安全挑战也是蛮大的，因此他们成立安全团队也是比较早的，我记得shellcode，cy几个人好像都在sina，他们的脚本检测能力都是非常不错的：） 2、sohu： Sohu 的安全按照我的理解可以分为3个阶段： 第一阶段好像并不是特别重视；第2阶段为了准备奥运，因此在这块投入了不少人力物力，积累也特别快，在整个奥运过程中，他们也是作出了非常不错的成绩的，蜘蛛（cu的负责人）、杨勇等好多人都在这个团队中； 第3阶段是搜狐的畅游，由于游戏增长很快，因此他们在游戏的安全方面也增强了不少。 原来运维和安全的负责人周总升到了VP，我想对安全和运维的投入也应该会更强。 3、迅雷 前几年迅雷的发展非常快，然而在2008年左右，一系列的客户端漏洞被公布出来。这个时候包子加入到迅雷成立了安全团队，并增加了小胖等学习能力非常不错的年轻人，取得了较好的成绩。 特别值得一提的是迅雷在内部推广SDL方面还是取得了非常好的成绩的，目前相对来说迅雷的客户端还是比较安全的。 4、360 360从业务来讲，是做安全行业的，因此他的安全团队和其他互联网安全团队有点不太一样，360的安全团队更多的是focus 在系统这一块，并且招揽了一大批国内在内核、杀毒方面非常强的人，像pjf、墨者团队和mj等，都是技术非常不错的人。 从以上的分析可以看出，每个互联网公司的安全团队都是比较有鲜明特点的，比如阿里和百度，由于他们公司的业务模式比较偏多于web，因此他们的安全积累比较多的在web方面；迅雷和腾讯则是以客户端起家的，因此安全团队在客户端方面就会比较关注，如软件的安全检测、fuzzing，漏洞报告机制以及软件漏洞自动补丁升级机制就会考虑的多一些；盛大以游戏起家，因此就会更多关注游戏的安全；而360是以反流氓和木马起家的，因此在内核的研究上就会有更多的积累。 另外有一点，我特别感受深刻的是： 安全毕竟是支持部门，因此必须要紧密结合业务，这样安全人员的发展空间才会更大，安全人员在公司的地位才会更高，安全人员为企业创造的价值也才会越大。 比如我在腾讯，刚开始以传统的网络安全为切入点，后续稳定下来后，公司对安全的重视就会降低；因此我们就趁机关注在反盗号上，为公司解决了最为头疼的盗号问题；再往后，发现内容安全越来越成为重点，因此又组建团队深入到内容安全方面的工作中。 只有这样，我们安全人员才能解决企业头疼的问题，发挥自身的价值，同时也获得公司的认可，我们的职业发展才能更好。 比如sina 目前以后可以发展的安全方向就是内容安全（用户评论、微博），云安全（sina推出了app engine）； 阿里除了传统的网络安全外，很关心的就是支付风控（帐号被盗、欺诈）、云安全（阿里云是个很大的团队）； 百度除了传统的安全外，点击欺诈是公司很关注的一点，如果能解决这里的问题，对百度的安全团队也是个很大的提升。 我们盛大的安全会在微支付、云计算、物联网方面遭遇很大的安全挑战，也真是因为这样的挑战，我们才能有更大的发展空间：）</description></item><item><title>【转】安全网站 (2009-05-04 14:31)</title><link>/posts/switch_secure_website_2009-05-04_1431/</link><pubDate>Fri, 02 Nov 2012 07:54:00 +0000</pubDate><guid>/posts/switch_secure_website_2009-05-04_1431/</guid><description>安全网站 (2009-05-04 14:31)分类： Network security国外安全 http://www.neohapsis.com/ 内容极为丰富 国外安全 http://citeseer.nj.nec.com/Security/ 大量安全方面文献的索引 国外安全 http://www.deadly.org/ 大量关于OpenBSD的资料文档教程 国外安全 http://www.guninski.com/ 安全专家Guninski的主页，有大量由系统漏洞 国外安全 http://sysinternals.com 有很好的windows下的工具及源代码 国外安全 http://www.securityflaw.com/bible/ 入侵检测等文档整理较好的站点 国外安全 http://secinf.net/ 网络安全方面的大量文档 国外安全 http://www.incident-response.org 入侵反应，数据恢复工具等 国外安全 http://www.securityfocus.com/ 安全资料整合最好的站 国外安全 http://project.honeynet.org/ 由安全界一帮牛人组织的一个project 国外安全 http://www.packetstormsecurity.com 资料全面的安全站 国外安全 http://www.securityportal.com/ 还可以看看的安全站 国外安全 http://www.ussrback.com/ 比较活跃的安全站 国外安全 http://www.attrition.org/ 内容全面的安全站 国外安全 http://www.wiretrip.net/rfp/2/index.asp rfp的安全主页提供权威的安全信息 国外安全 http://www.antionline.com/ 有些特色栏目的安全站 国外安全 http://www.eeye.com/ eeye公司的主页，提供权威性的安全建议和工具 国外安全 http://www.insecure.org/ Fyodor的主页，nmap的老家，还有exploit 国外安全 http://www.atstake.com/ @stack公司的主页，提供权威的安全建议 国外安全 http://www.bugnet.com/ 提供漏洞修补国内安全 http://www.safechina.net 有较多原创内容的安全站 国内安全 http://www.opengram.com refdom的个人主页，windows相关 国内安全 http://www.</description></item><item><title>【转】京东修复充值平台漏洞否认亏损2亿 有网友借机充36万2</title><link>/posts/switch_jingdong_repair_recharge_platform_vulnerabilities_have_denied_losses_200_000_000_360_002_netizens_took_the_opportunity_to_charge/</link><pubDate>Thu, 01 Nov 2012 05:34:00 +0000</pubDate><guid>/posts/switch_jingdong_repair_recharge_platform_vulnerabilities_have_denied_losses_200_000_000_360_002_netizens_took_the_opportunity_to_charge/</guid><description>京东修复充值平台漏洞否认亏损2亿 有网友借机充36万2012年11月01日 02:58来源：每日经济新闻 作者：席大伟分享到： 更多 890人参与45条评论昨日(10月31日)上午，据微博网友爆料，京东商城充值平台10月30日22：30左右出现了一个多小时漏洞，不少用户利用该漏洞套取话费和Q币，有用户甚至借机充值金额高达36万元。对此，京东商城相关人士表示，此次系充值平台出现漏洞，目前已经修复，对借机充值行为，京东法律相关部门已经介入。而对于有消息称“京东此次亏损高达2亿元”，京东方面给予否认。IT法律专家赵占领昨日在接受《每日经济新闻》记者采访时表示，如果是在不知情的情况下，充值成功，则构成不当得利，网站可以以重大误解为由要求解除合同。但如果是知情仍恶意下订单，数额达到一定标准，涉嫌构成盗窃犯罪。有网友借机充值36万昨日，不少新浪用户在微博上爆料，称10月30日22：30开始，京东商城充值平台出现了BUG(漏洞)：点击充值按钮后，系统会自动充值，但不会扣掉相应积分。若充值成功，积分还会双倍返还回账户。同时，由于京东该平台宣称“1-10分钟到账”，在10月30日晚间甚至达到10秒钟就能充值完成，不少发现此漏洞的网友在QQ群里传播该漏洞信息，随后在互联网上快速扩散，不少网友也参与进来。据网友透露，有很大一部分用户都充了上千元的Q币和话费，甚至还有用户借机充了36万元的话费。据估计，此次漏洞给京东带来了将近2亿元的损失。当晚23点40分，京东商城就已及时修补漏洞并且报警。一些网友大呼“遗憾”，并在京东商城官方微博留言，声称“可惜没赶上这么大的漏洞”。据《每日经济新闻》记者了解，京东这一充值平台是前日刚上线的新功能，正处于测试期。京东称损失2亿属谣言京东商城相关负责人表示,有关京东商城积分无限制充值话费点卡，经核查，系京东商城上线积分换购新业务时出现的系统BUG所致，但亏损2亿元纯属谣传。目前，内部正在处理此事，技术部分已经修复，法务也开始介入此事，并同时报案。这并非京东平台第一次出现漏洞。不久前就有不少用户反映，账号被盗余额被消费，京东一直强调这是由于此前CSDN网站数据招黑客攻击泄露所引发的后遗症。昨日，记者登录京东商城充值平台，发现已经可以正常使用积分换购相关商品，也可以进行正常的手机话费、Q币等充值。这看起来应该是京东为技术疏忽而承担损失，但从法律角度来看，一些在此期间趁机大规模套现的用户行为则已经涉嫌犯罪。对此，北京盛峰律师事务所主任律师于国富昨日对《每日经济新闻》记者表示，虽然京东系统出现漏洞，其本身确实存在过失，但如果有用户恶意大量套现，性质依然属于“盗窃”行为。据于国富介绍，如果用户当时充值时并不知道漏洞存在，只是进行正常充值，随后发现没有被扣款，这种情况属于不当得利，应当予以返还，只是在民事上的交易行为，并不会构成犯罪。京东商城方面也表示，其后期将与相关用户协商解决此次问题，对于一些恶意订单用户，京东商城将保留进一步追究其法律责任的权利。</description></item><item><title>【转】为什么很多程序员都选择跳槽？</title><link>/posts/switch_why_many_programmers_choose_to_quit/</link><pubDate>Tue, 30 Oct 2012 12:22:00 +0000</pubDate><guid>/posts/switch_why_many_programmers_choose_to_quit/</guid><description>为什么很多程序员都选择跳槽？ study875发布于 2012-09-05 10:08:28|27350 次阅读 稿源:梁斌 这个世界上有一类人特别苦逼，苦逼到什么程度呢？他们省吃俭用攒钱买房，结果房价越来越贵；公司外部竞争激烈，他们工作异常繁忙，披星戴月，日复一日；技 术更新行业罕见，他们要随时调整心情，随时学习知识；他们长期和机器为伍，大多比较呆傻，比较单纯；还有很多不一一例举，这一类人就是程序员。而就是这么一类程序员过着这么苦逼的生活，在公司内部却难以获得公平的晋升机会，外来的和尚总是在不断打破平衡，甚至是刚毕业的新和尚拿得都比老和尚多，这是全行业都罕见的奇观，IT人有幸经历了。某创业公司，某个程序员要离职，老板甚至不问问他直接领导的意见，就同意了，没有挽留，之后大骂不忠诚，这个人拿3k，拿了2年，他走了以后，老板用5k雇了个新面孔，但就是不愿意给这个老人晋升，不愿意给加到哪怕是4k。某上市公司，游戏部门突然从外部空降了一个领导，原因是原大佬被挖走以后，剩下的人升谁都有意见，难以服众，不从外部请人来镇不住局面，这个人一来，大家是团结了，团结起来和这个人斗，但最后还是和解了。某国际大公司，某人伪造简历，包装的如花似玉，获得高职，工作主要有下属完成，他只需要汇众汇报即可，越混路越宽，直到某天事发，依然是高官。某 IT企业，某同学离职时语重心长的对我说，XX（可以理解为网游，搜索，电商任意一种）是今年毕业的这些人清华人的机会，我们就是比某人强十倍也没有机 会，也得从下面做起，搜索的天时不属于我，此人去了某金融分析软件公司，目前是高管，同期留在某IT企业的其他同学依然过着苦逼的生活。举了这么多例子，我想说得是为什么不给你晋升这个问题，或者晋升很难，为什么？1）大佬的问题你 晋升困难，最大的主观原因在你自己，最大的客观原因在你的直接上司。付责任人的说，目前很多企业的领导是不合格的，他们大多80后，没有为他人着想的思想 基础，一味的考虑自己，不顾下属，曾经我对某人说，你说你是合格的领导，你说出你下属每个员工租房在哪里，每月多少房租，我就同意你是合格的领导，结果他 羞愧不言。你晋升不了，很大程度上是你的领导没有帮你，连你每月房租多少都不知道，你指望他帮助你提高技术水平，帮助你晋升？2）大佬的大佬的问题你 大佬的大佬，level很高，他需要引入新鲜血液，他知道这个队伍缺什么，这个是他思考的问题，他需要找牛的人来补这个缺口，于是一个光鲜照人的牛人进来 了（虽然两年后也会泯为众人）给队伍带来了新鲜的血液，但你的大佬升不上去，你大佬边上的位置被这个人占了，你的位置在哪？3）公司的问题各 大企业给员工的再教育和培训都是不尽相同的，但大多口号是一致的，在工作中锻炼成长，这句话是最扯淡的，国外很多大公司是有很完善的培训和再教育计划的， 会给员工一个充电的机会，并且给其一个完善的培训后，以便于让他在新升职的岗位上能够很好的胜任。在国内大公司都在找牛人，就是不愿意自己培养，原因是什 么，不解释，你懂得。4）你的兄弟很多时候让你升不了职恰恰是因为和你一起战斗的兄弟， 他们工作也很不错，你升职了，他们怎么办？这也是一个平衡的问题，你很努力，为什么你没有带动你的兄弟一起努力，你上去了，需要你这帮兄弟的支持，他们会 支持你吗？曾有一个说了一句话，我觉得很值得回味，“当大家都认为你该升职了，就是你升职的时候了”，细细品味，很有道理。5）你自己的问题最 后你升不了职是你自己的问题，每天工作很忙，没时间充电，每天工作压力很大，来不及学习，每天这个那个，一年下来碌碌无为。你提高了自己的效率了嘛？你周 围有朋友再帮你吗？你知道你要学什么嘛？你知道什么样的工作才能超出领导的期望?，你超出领导期望后却没有升职和领导沟通过吗？我曾在某企业，我周围的几 乎所有人加薪升职都是和领导沟通后才获得的。指望主动给你加薪升职，不如指望自己的沟通。6）还是你自己的问题你选择的这个行业是不是对的，公司是不是对的，就好像我说的这个清华的同学这个例子。如果你能耐大可以选大公司，PK到一票牛人上去，如果你能耐不大，去成熟大公司，还心理期盼高薪升职就不现实了，不如去一个有前途的中小公司，开创自己的事业。从企业角度出发，如何创建一个合理公平的晋升机制呢？1）第一流大佬才会招第一流的人，第二流大佬只会招第三流的人，因此公司一把手必须是第一流的，价值观才能靠谱，制度才靠谱，没熟读历史，不理解中国文化的，建议不要做公司一把手。2）晋升的制度必须公平，面向每一个人，每一个层次，这往往很难做到，做前端的和做后台的不好比，但做前端的可以和做前端的比。必须要有公开公平的比拼，已获得升职机会。例如某公司做一个高维矩阵分解的难题，大家机会均等，性能最快，效果最好，胜出者升职，带领团队。3）鼓励公司职员交流，传播和帮助他人的文化，一个人如果乐于助人，帮助他人提高技术水平，这个人升职升上来，大家都会顶，反之，你保守，不帮助他人，水平再牛，升职上来也没人支持。4）可以给职员一些挑战的机会，提供更多的资源，比如某公司的闪电计划，超越了谷歌搜索效果，就是一个很好的例子，要敢于给一些勇于挑战的职员更多的资源，在严酷的战斗中考验，并提供充分弹药。5）给予内训机会，邀请业界牛人讲座，送职员去美帝考察开会乃至工作等等。培训机会是发达国家企业的一种非常好的激励措施，一个岗位5个人培训，最好的上岗，这是一个很公平的机会，培训机构足够独立。方法有很多，只要这第一流的大佬，心中有着这帮打生打死的兄弟，办法总是有的，不要总是考虑自己的业绩，考虑自己的乌纱帽，做到这一点很难很难，但制度不是只有这位大佬可以制定，任何职员都应该积极投身到制度建立的过程中，要敢于提出自己的观点，毕竟公司是大家的公司。我就写这么多，一个十年一线程序员的身份写这篇博客的，他努力做到客观，但我相信更多代表的是劳方立场。</description></item><item><title>【转】徐家骏：华为十年</title><link>/posts/switch_xu_jiajun_huawei_years/</link><pubDate>Tue, 30 Oct 2012 12:19:00 +0000</pubDate><guid>/posts/switch_xu_jiajun_huawei_years/</guid><description>徐家骏：华为十年 2012-03-29 18:53:30| 分类： 默认分类 |字号订阅(注：徐是华为数据中心的头，技术超级牛人，一级部门总监，华为副总裁，年收入过千万，数据中心是用火山岩建的深入地下的一个大型建筑。防辐射，可防卫星的电子，雷达等手段的侦察。里面有象卫星发射中心那种超大屏幕，机房里满是三米的大型服务器和大型计算机。连接整个华为全球的每一台终端，整个华为每天三十多万封邮件，海外和全球的同步研发，内部的信息管理，内部流程，华为的国内国际ip电话都是通过出去。) 正文： 上周，我正式提交了离职报告，准备给自己的职业生涯一个很大的转折，这是我长时间的思考最后所做的决定。但真的提出离职后，回想在公司的十年，还是百感交集。 1997 年7月16日，我只身提着一个包从深圳宝安机场下飞机，走出机场，天是那么蓝、白云那么低、空气那么潮，仰头望天，对这个城市，对公司、对即将开展的工作和生活、对自己的前途一片茫然。到了科技园，发现是个荒凉而偏僻的地方，不过倒很安静，上学的几年中，一连串的打击，使得我似乎有点喜欢这种安静、荒凉、在他乡的感觉。现在想想，经过十年的工作，自己的心灵真是麻木得可以了。那时候的心里，好像时时有些什么没有着落的东西在激荡，但又说不出来，只有在听德沃夏克的《自新***交响曲》时，才发现多有深处的共鸣以至落泪。 由于没赶上大批应届生的接待，我是自己一个人来到科技园1号楼的，干净整洁的大楼，很帅很靓的保安和前台，进进出出精神饱满的员工，让人的心情为之一振。象没头苍蝇一样乱走了一会后，一位人力资源的大姐，很职业、热情、耐心的告诉了我入职手续如何办理，并安排我当晚在粤海门华为之家临时居住，又安排之后的宿舍事宜，在举目无亲的异乡让人倍感亲切，至今记得。 来深圳、来华为当时确实是一种机缘，96年华为名气并不响，特别是在行业之外，偶尔一次我在同学家里看到一张华为人报，有几片文章印象至今很深：一篇是周劲写的欧洲考察心得，讲欧洲一个20－30人的小公司，所具有的那种全球化运作战略、能力和气度。一篇是唐东风写的被评为杰出员工受表彰后的感想。还有一篇名头很大“中央研究部知识产权处”，当时被这个名头吓了一跳。文中讲到华为当年研发累计投入1.8亿人民币，更让我吓一个跟斗。我想当时清华大学一年科研经费也就1亿多点，这家公司什么来头，花的科研投入比清华还多？当时就有了兴趣。 快毕业的时候，连连受挫，找工作跟当年大部分同学一样，希望留北京，但连续被联想、方正、科海、卫通等当时大名鼎鼎的公司录取后又告知要交几万块钱才能解决户口问题之后，想到了还有华为这样一家公司，给人力资源部寄了一份简历。没几天，一个深圳的电话，说某年某月某日有个副总裁来北京，面试一下。抱着试试看的态度跑过去了，是公司原副总胡红卫，他基本上没有问我什么问题，到是介绍了一下华为的情况，然后把人力资源经理田景琦叫了过来，当场就给了我一个“录取通知函”和入职操作指导。我一肚子犯嘀咕，这是不是一家骗子公司？怎么这样就算面试通过了？连工资有多少都没有机会问。之后一直到报到前，都有点怀疑，幸好有个本科的同学，在华为工作过，在向他咨询后了解到公司还是实实在在有的，才下了决心过来。总的说来，就是被一张华为人报“骗”来的。 就这样懵懵懂懂到了华为，一开始新员工培训，纪律严明、严格，班车不会多等半分钟，之后是部门培训，大量的信息扑面而来。之后到了工作岗位上，给我分配的工作是ERP系统管理员兼DBA，虽然以前也搞过一些大系统，如兼职做过印度人的大型银行软件的客户化开发，但见到我们的ALPHA 8200和我们的软件ORACLE，心里还是激动不已。 IT的发展一日千里，10年前的技术与今天比，很多人可能没有体会了。那时比较落后，很多人也没有机会接触这种当时很先进的系统。我见到我们居然有2G巨大内存的“超级服务器”当时实在是佩服不已，为自己能做它的管理员而自豪，又为自己将来能不能玩转它而焦虑。我师傅王忠宁见到我就撂给我一本书《ORALCE ADMINISTRATOR GUIDE》，一寸半厚的英文书，愣是一周之内从头到尾看完并写了厚厚的读书笔记和一大堆不懂的问题，自此再也不怕厚厚的英文书。 当时正好是公司ERP上线没多久，业务正在推行，系统极不稳定，每天的并发程序有一半是跑错的，系统还会动不动 CRASH。我看完一本书后，在刚刚成为 One Book Man时，问题单就来了，有一个重要的××引入程序有时候跑得出来，有时候跑不出来。说实话，那时候对ERP、ORALCE、操作系统一切几乎还是一头雾水，而问题却已经传过来了，只好硬着头皮，摸索了好半天，终于明白了有一批数据在倒的时候，系统准出错。几万条数据，一条条试是不可能的，我就想出了用二分法，一批一批的试，完全手工动作，笨拙、费时、费力，做了几十遍，花了整整一天中午饭都错过了，终于定位到了其中一条数据，而后发现是数据超长而数据库定义的长度不够并且校验程序有BUG没校验出来。经过又返回去重复验证，证明找到的原因是正确的。当时真是心中大喜，几乎在完全不懂系统、不懂这个程序是做什么的、不懂程序处理的逻辑、不懂数据库的设计的情况下，把这个BUG定位出来并交回给ORACLE处理了。这是我上班后解决的第一个问题，至今我对这个问题本身还并不明白，呵呵。这让我懂得了一个道理，工作和读书不是一回事，工作是要解决问题的，是要产生结果和输出的。不管怎么样，能找到方法解决问题、能够有好的输出结果那就是成功。读书才追求的是慢慢读，读懂为止。 那时的系统，真是岌岌而可危，公司的业务高速发展，业务也不断推行，系统的负荷越来越高，但系统却不是经常宕机，就是跑得如老牛般慢。我们的技术水平和管理水平，也是与现在不可同日而语。水平不行体力补，大家兢兢业业背负责任，闯过种种难关，终于还是挺过来了。现在想想，还真是有点后怕的，稍有不慎真有可能全线崩溃。我也能理解有些大企业，为什么倒起来那么快了。现代的组织，经常是高度复杂的组织，就象生物一样，低等的蚯蚓断成两段，照样生存。而高等的人，身上戳个小小的洞可能得毙命。高度复杂的组织，就象人体一样，内部小小一块地方如果出关键问题了，组织可能崩溃。要保证不崩溃只有两条路：1）组织本身的设计和流程的设计高度科学、冗余和足够的制度性反应机制，这是西方国家的强项，他们的公司历一百年不倒，是有强大的内在因素的。2）依靠组织内每一个最小单元的高度的负责、警觉。虽然我们多年来一直在强调第一种能力的培养，但我们天生缺少这样的土壤和基因，因此第二种能力变得十分重要，虽然这不是最好的办法。 头两年的工作中，我们水平很低，体力劳动很多，有一段时间，我一上班就得高度紧张地盯着系统，不停地干预，系统才能跑下去。一会儿系统进程死了，一会儿空闲进程多了要杀掉，一会儿表空间不够了要扩展，一会儿用户提交了不合理的并发程序要中止&amp;hellip;有一段时间，我成了热线兼现场支持，一天接50－80个电话，接了电话到处跑。之后我们做了很多改进工作，升级了系统硬件、写了自动脚本，成立了专门的热线等等，这期间我慢慢懂得了一个道理，一个大的复杂系统要成功的管理好，没有绝招，依靠的只是一点一滴持续不断的改进和努力。 有一度由于压力过大，也使我精神高度紧张，到了比较神经质的地步，有一段时间，一听到CALL机响，甚至是电视广告里的“摩托罗拉寻呼机，随时随地传信息”中的BP声，我的心跳就不由自主加速，喉咙发干。有一次去香港出差，从出发开始就一直惴惴不安，生怕系统出问题，结果刚到香港住进酒店，一个电话就来了，说系统崩溃了。我立即打国际长途叫赵×赶紧去处理，过了几分钟，赵回电话绝望地说，他以最快速度赶到一号楼，进了电梯刚走到一半，喀嗒停电了，电梯卡在中间半个多小时，祸不单行，当时那种感觉真是 “农夫内心如汤煮”啊。最后过度紧张使得我想逃避，导致我提出了辞职。所幸那时候的领导袁总和郭总，开导我多次，我逐渐有所缓解，然后慢慢开始理解了什么叫大将风度。做我们这一行，要如履薄冰、但也要有点临危不惧的精神。工作紧张，但心情要避免无谓的紧张。后来我们的ERP系统、IT数据中心，又出现过多次危险情况，淹过水、着过火，而我们最终都能够化险为夷。 工作并不只有艰苦和繁琐，有时候，乐趣也不期而至。当时我们的数据库总是出ORA-1555错误，严重影响系统的运行，我多天努力、百思而不得其解。现在的管理员可能会想，这不是一个小问题吗，但那时网络还没现在这么发达，什么东西一GOOGLE都出来了，我找了大量的资料，苦苦思索，最后终于灵光一现，象拼藏宝地图一样拼出了逻辑严密的解释和解决方案，我记得当时是深夜，内心偷着乐的感觉妙不可言，不需要别人知道、不需要别人理解，走出公司大门，仰望星空，深深吸一口气，内心偷着乐。还有另一次，当我们经过30多个小时的连续作战，解决种种问题，终于顺利升级成功ERP系统后，那种感觉也象打了胜仗的将军，充满胜利的喜悦。记得当时正是刚谈女朋友，给她写了第一封也是唯一一封情书，成为太太后，她有一次跟我说，你那玩意儿叫啥呀，那能叫情书吗？通篇都在讲你如何如何工作的，象工作汇报一样，简直可以跟鲁迅写给许广平的“情书”相媲美，尽是革命理想，没有点花前月下&amp;hellip;..还有一次，我们的EMAIL系统突然出了故障，大量的来信收不到。那时是华为开拓海外市场的初期，海外还根本没有什么公司网络，所有的一切都是靠EMAIL和国际长途，天象塌下来一般，我们跟主管国际市场的徐直军汇报、最后向老板汇报请示是否应该报公安，因为当时的故障现象很象DDOS攻击。系统停了整整七天，我们请了各路专家，日夜攻关，试了N个方案，大家象大禹治水一样过家门而不入。最后还真找到了一个木马“冰河”的攻击，但却发现不是根本原因，故障依旧。最后一天晚上，我与阿韦坐在科技园一号楼冰冷的网络机房，看着系统一封一封的邮件，连接了，又中断了，一筹莫展，濒临崩溃。我抱着死马当活马医的心态，又祭出了我的“二分法” 体力活，测试了一封空邮件，能成功；测试了一封大邮件，失败；取其中间值，又失败；再取中间值，成功；再取前两次的中间值，成功&amp;hellip;..一直到深夜，试了N次，终于总结出了规律！再一验证，只要在某个大小的地方，比它大的统统收不到。重要发现！然后改用PING包，发现在一千四百多字节的地方，再大就 PING不通了，现象可重复。再去想理论，如果按协议理解，这也不可能啊，即使MTU调小了，大包超过MTU也应该自动分片啊？除非是MTU在某个地方调小了，而协议又有异常。发现这个规律后，阿韦立刻跟电信联系，果然是一周前电信调整了路由器MTU并且CISCO的路由器有BUG引起。问题就此解决，当时吸了口气，那种舒坦啊！&amp;hellip;没经受过类似极限考验的人可能不容易理解那种快乐！这种快乐是工作本身带来的，不需要别人来表扬，甚至不需要别人知道。能够有机会也能用心去体会这种快乐的人，怎么会不热爱工作？ 工作也肯定不是只有成功和荣誉，有时候我也做很多蠢事和傻事，或者由于幼稚被人骗，或者是由于轻率导致工作失误。有一段时间，ERP系统岌岌可危，系统容量面临崩溃。我多次大声疾呼，几乎每一次有机会见到CIO郭总都大呼小叫一番。郭总当时刚来我们部门，一开始觉得我这个人怎么能这样？在一次部门全体会议上，郭总点名批评“徐家骏总是瞎咋呼，只会威胁我，却拿不出一个好的方案”。心里相当郁闷，但系统还在我手里，能等着它死吗？我还是一如既往的瞎咋呼，但也改进了一点，拿出了方案。郭总批准花了500多万来改进系统，这次给了我们1 －2年的稍稍太平时间，从而有机会做更多的改进优化工作。当时的500多万跟现在的概念可大有不同，现在IT花个500多万是小菜，那时500多万可是天文数字啊！当时相当佩服郭总的魄力，记得他要做大笔花钱的决策时，常说的一句话是“牛都杀了，还在乎牛毛？!”。很久以后，郭总有一次提到，徐家骏这个人工作还是蛮执着的。后来我的职位不断地得到了提升。之后我负责了很多重大的项目，往往涉及重大的投资，几百万、几千万，这些年来总共给公司花掉好几个亿。这中间技术方案制定，也有被忽悠了的。甚至重大项目投标时，有供应商恶毒的投诉诬蔑我的事，所幸公司及领导给了我这样的土老冒充分的信任。这些事我的体会是：只要你心无旁骛，目标单纯，就是想把这个事情搞好，并且持续地、啥都不计较地、傻傻地去推动，内心无愧，一时可能会有工作失误，一时可能会得罪人，可能会有人不理解，但长远来看还是会得到公正的承认的。 公司快速发展和扩张，由于工作业绩还过得去，很快就被提拔为小主管了，一开始觉得做主管也没啥，业务的细节我都是一清二楚的，不就是多了几个人一起干活吗？有一次，IT二把手袁总说“我要参加一次你组织的部门例会，看看你是怎么做管理的”，没问题，在例会上，我侃侃而谈，把业务分析得透彻细致，把工作安排得井井有条，洋洋得意地结束了会议，期望着袁总能给点表扬。袁总一声不吭坐到结束，等人都走了，劈头盖脸一顿“徐家骏，你知道这叫什么吗？这叫生产队长！农民！&amp;hellip;”，一开始还不服气，我业务这么清楚、工作安排得这么妥当，管理能力还不行？后来，慢慢地自己也发现了问题，后来部门安排了去参加封闭4 天的管理干部培训，才算接触到了管理ABC，渐渐体会到，原来管理也是一门学问，而且大有学问。有了这个认识，后来我也时时留心。其实在华为要学习管理最简单，第一要诀是向身边的人学，华为的很多管理者，修养和能力超强，在平时和他们一起工作的一点一滴中，如果你细心去观察和体会，收获实在可以不少。比如说，有一段时间，我每周参加IT部门干部例会时，大家讲得差不多了，该由领导作判断和决策、做工作安排之前，我就会猜，领导可能会做有什么判断、会做什么决策，特别是有些事情充满矛盾和冲突，需要权衡时。一开始十猜九不中，并且很多看法别人说出来之后觉得耳目一新、不胜佩服。于是就去想他为什么会这样判断和决策，背后做的功夫是什么，慢慢地自己处理类似问题的思路也比较开阔了。另外、别人在管理中犯的错误，也是自己学习的好机会，自己犯错误自己是不容易觉察的，但别人犯错误自己可以觉察，然后可以警醒自己避免类似错误。 后来，做数据中心经理、技术支持经理、IT基建经理、系统运作副总监，变做边学，做团队管理、做考核、做流程优化，应对种种难题：如用户严重不满、工作头绪繁多流程乱来、资源严重紧张、骨干员工要离职、刺头员工提种种要求、部门骨干之间文人相轻、部门之间配合大起冲突、末位淘汰等等等等，逐渐逐渐对管理的体会越来越深，对管理的重要性认识越来越深。应对这些难题，当时真是殚精竭虑，有时甚至痛苦不堪。但我事后的体会是，凡是自己在感觉严重受挑战、整天闹心痛苦的工作阶段，往往是自己能力和心态进步比较快的阶段，而有时候工作一切都已摆平、风平浪静，可以悠哉游哉的时候，半年过去，发现自己一无所获，毫无建树，其实内心深处更加焦虑和痛苦。我后来总结过很多管理工作的要点和戒律，也总结了一句话，叫做“成功人士就是经常成功地跟自己过不去的人士”。 2003年下半年，数据中心建成后，IT运作这一块，在多年的岌岌可危之后，终于有点风平浪静的意思了，为了“跟自己过不去”，其实也是为了自己的兴趣，我向领导申请去信息安全部并得到了批准。当时业界还处在冬天时期，华为在冬天时期，不但面临竞争对手的威胁，更严重的是面临内部的威胁，屡屡爆发的重大产品、商务信息泄密，给公司造成了重大的损失，信息安全形势十分严峻，也触发了公司最高领导层对信息安全工作的超级重视。信息安全工作是是一个基本纯防守的工作，防守战线太长太长，整个系统的防守强度取决于最薄弱环节，而攻击者却可以集中资源，只要攻其一点即可。我到信息安全部，发现我们的管理体系、政策体系经过几年的努力，已经有一定的建树，而技术方面的能力却是很薄弱的环节。因此，重点在此方面开展了工作。几年之内，我们部署了很多防护系统，也培养了一批人，在我离开信息安全部时，整体上应该讲有了较大的改变。 调到信息安全部工作期间，其实给我最深的体会是跨部门的合作，在原来部门时，信息安全部也经常来“烦”我，我的反应经常的是排斥和不满，到了信息安全部后，变成经常是我得去“烦”别人，并且我们部门是特别讨人“烦”。如何取得他人的合作？是一直来磕磕碰碰的难题。比如 SPES开发和推行这个大项目，要 “烦”的人实在太多了：数据中心、网络部、PC、海外IT、研发信管办、销服信管办、采购、发货、进出口部、物流、各国代表处、公司各级领导、最终用户等等。在不断地“烦”人的过程中，我总结出了一套“合作方法论”，有很多道道，不过最终总结起来，一句话简单说就是“如果你总是抱怨别人跟你不合作的时候，问题一定是出在你自己身上。” 03年底，当时业界连续几次蠕虫的发作，部门几个技术人员一直在讨论如何搞一个方案对付这个问题，我们设想了种种可能性，最后部门技术大牛季昕华提出一个设想：把客户端的软件和网络上的设备联动起来来控制蠕虫，并且做了一个很有意思的胶片，把对付SARS的手段用来对付蠕虫了。我一下子被这个新颖的设想所吸引，后来我在此基础上与大家多次讨论进一步扩展了概念，提出了策略强制系统的概念。为了让我们的设想能够付诸现实，我在部门其实并未授权的情况下，偷偷搞了几个人，花了半年时间把POC系统做了出来。 POC系统刚出来，我们就听到了CISCO在04年中发布了其SDN/NAC产品概念，跟我们的思路非常接近，这给了我们很大的信心，后来我干脆主动请缨，放弃其他管理事务，全职投入到组建一直开发队伍，开发SPES产品中去。最终我们产品开发成功了，在公司全球100多个国家6万多员工大规模的推广也成功了，并且在公司内部良好运行至今。这件事给我最大的启示是：我们要有信心、要敢做，CISCO并不可怕。说老实话我们是一支很土八路的队伍，也不属于公司的研发体系，我们这支土八路的队伍，坐了2年冷板凳，磨啊磨啊，最终还真磨出来一个还不赖的东西。 2004年底，在磨出来这个东东之后，我们又开始张罗产品认证、组织市场活动、策划定价及销售策略、寻求多方合作、建设支持体系等，在我们经过艰苦的市场拓展，客户已经开始广为感兴趣并已经形成几单实际销售的情况下，公司由于政策问题，为了确保资源最大限度投放到公司内部工作以支持公司海外市场的大发展，叫停了我们真正做成对外销售的产品，虽然我理解公司的大方针，但这个决定还是让我非常痛心，否则我相信今天这个产品很有可能已得到更大的发展。前不久我去北京出差，跟一个公司产品的代理商偶尔聊天，他不知道我是SPES的主要负责人，大大的吹了一通我们的东东并很惋惜为什么不卖，不禁让我又喜又悲。 转眼工作十年了，在华为的十年，正是华为从名不出专业圈子到现在成为路人皆知的大公司，高速发展的十年，见证了公司多年的奋斗历程。也投身其中，在大潮中边学边游泳，走到今天。现在我要离开公司了，准备去开始新的事业，接受全新的挑战，我将要去做的事情，风险很大，很有可能是九死一生，九死后还能不能有一生，也难说。在开始新的事业之前，想起了对过去的十年做个一个详细的总结。在一个象华为这样高速发展的大企业工作，有时是一种炼狱般的锻炼，如果我能够总结十年的经验和教训，从中学到关键的做事、做人的道理，我想对将来一定大有益处。 这些年来有些人离开公司，写一些东西或书，对公司指手画脚、评头论足、指点江山，对公司的高层领导逐个点评一番，我个人感觉除了带来一些娱乐价值，还有什么益处呢？公司照样在发展，发展的背后，6万人种种梦想、努力、贡献、牺牲、奋斗、抱怨、不满、沉淀、离去、希望、失落；发展的背后，种种机会、重大决策、危机、失误等等的内在逻辑又岂是局外人说得清楚？我不想多说公司，只是想对自己的工作经历好好反思反思，想想自己做了什么努力，做了什么贡献，做了什么自己最高兴、做了什么自己最受益、学到了什么？总得说来，我在华为的十年是懵懵懂懂过来的，当初我好像没有什么远大的理想、没有详细的规划，只是想着把一件一件事情做好。通过自己的总结和反思，将来我希望自己能够更加有规划、更加清晰一点。 大概想了想，我觉得有以下几点，是这些年深有体会的经验和教训，值得今后再发扬。 一、 “从小事做起，学会吃亏，与他人合作”，这是研究生毕业前最后一堂课，电子电路的老师最后送给我们几句话，虽然我忘了这位老师的名字，但这几句话却至今铭记。在华为的工作实践，越发感受到这简单的几条的道理深刻。从小事做起不是一直满足于做小事，也不是夸夸其谈好高骛远。学会吃亏不是忍受吃亏，是不斤斤计较于一时一地的是非得失，是有勇气关键时候的放弃。 二、“心有多大，舞台就有多大”，我们很多的成功，来自于敢想，敢做，就象我第一次接到问题单，根本不懂，但敢去试，敢去解决，还真的解决了；就像我们做 SPES，即使没人、没技术、没积累，还有CISCO等大公司也在做，我们也敢做，敢推行，不盲目崇拜或畏惧权威，也取得了成功。当然，这不只是盲目的胆大，心大还意味着积极地关注广大的外部世界，开阔宽容的心胸接受种种新鲜事物。 三、 “好好学习，天天向上”，这句话用来形容对IT人的要求，最贴切不过了。真正的成功者和专家都是“最不怕学习”的人，啥东西不懂，拿过来学呗。我们 IT 现在有个技术大牛谭博，其实他不是天生大牛，也是从外行通过学习成为超级专家的，他自己有一次跟我说，当年一开始做UNIX系统管理员时，看到＃提示符大吃一惊，因为自己用过多年在UNIX下搞开发都是％提示符，从未有过管理员权限。看看专家的当初就这水平！当年跟我做备份项目时，我让他研究一下 ORALCE数据库时点回退的备份和恢复方法，他望文生义，以为数据库的回退是象人倒退走路一样的，这很有点幽默的味道了，但他天天早上起来，上班前先看一小时书，多年积累下来，现在在系统、数据库、开发等多个领域已成为没人挑战的超级专家了。但是，学习绝对不是光从书本学习，其实更重要的是从实践工作中学习，向周边学习。比如说我在华为觉得学到最重要的一个理念是“要善于利用逆境”，华为在冬天的时候没有天天强调困难，而是提出“利用冬天的机会扭转全球竞争格局”并真的取得成功，如果没有这个冬天，华为可能还要落后业界大腕更多年份；华为在被CISCO起诉时没有慌乱，而是积极应对，利用了这次起诉达到了花几亿美金可能达不到的提高知名度的效果。等等这些，把几乎是灭顶之灾的境遇反而转化为成功的有利条件，对我留下的印象十分深刻，也对公司高层十分佩服。 四、勇于实践，勇于犯错，善于反思。很多事情知易行难，关键是要有行动，特别是管理类的一些理论、方法、观念。空谈、空规划一点用处都没有，不如实际把它做出来，做出来后不断反思改进，实实在在最有说服力。没有实践中的反复演练和反思，即使是人人皆知的东西要做好都其实不容易，举个小例子，比如做管理者要会倾听，我想华为99.9%的管理者都很懂这一点，但实际做的如何呢？华为有多少管理者做到了不打断别人讲话？不急于下结论给定义？不急于提供解决方案？有多少管理者能够做到自然地引导对方表达？问问对方感受？确认自己明白对方？ 五、要有方法、有套路，对问题系统思考、对解决方案有战略性的设计。在前几年的工作中，由于取得了一点成功，技术上也有了一点研究，就开始夜郎自大起来了，后来公司化重金请来了大批顾问，一开始对有些顾问还真不怎么感冒。后来几年公司规模越来越大、IT的复杂性越来越增加的情况下，逐渐理解了很多。西方公司职业化的专家，做任何事情都有方法论、有套路，甚至于如何开一个会都有很多套路，后来我对这些套路的研究有了兴趣，自己总结出了不少套路并给部门的骨干培训和讨论。在一个复杂的环境下，很多问题已经不能就事论事来研究和解决，非常需要系统性的方法和战略性的眼光。对于一个组织的运作来讲，制度和流程的设计尤其需要这一点。爱恩斯坦说过： We can&amp;rsquo;t solve problems by using the same kind of thinking we used when we created them.</description></item><item><title>【转】详析：谷歌为何紧急封杀阿里云OS？</title><link>/posts/switch_detailed_analysis_why_google_emergency_ban_ali_cloud_os/</link><pubDate>Tue, 30 Oct 2012 12:04:00 +0000</pubDate><guid>/posts/switch_detailed_analysis_why_google_emergency_ban_ali_cloud_os/</guid><description>详析：谷歌为何紧急封杀阿里云OS？ ugmbbc发布于 2012-09-17 07:54:37|15086 次阅读 稿源:虎嗅网 在谷歌封杀宏碁推出“阿里云”手机之后，双方各就此发表了两轮声明。 这些声明也使得事件爆发之初的一些判断和表态看上去十分可笑，诸如“谷歌封杀是给阿里云加冕”、“阿里云因为采用与谷歌相似的web app战略规划所以被后者忌惮”等等，有些已经在双方的声明中被直接否定，也有些能明显看出来作者不了解移动操作系统的体系架构以及GPL、ASL等开源 协议的规定，所以对一些明显的问题视而不见。从安卓之父安迪•鲁宾的两次声明中，我们可以看到，谷歌封杀阿里云，其实出于两大目的：防止安卓阵营的硬件基石开放手机联盟（OHA）分裂；谴责阿里云对安卓应用APP的盗版。而阿里云如果要回应这些指责，光发声明是不够的，还需要遵循开源协议，公开云OS部分代码。阿里云市场的确存在盗版问题盗版问题比较简单，我们可以先把这个问题说清楚。安迪•鲁宾的第二份声明中说，“你们（阿里云）的应用商店中还包括了安卓的应用，包括盗版的。”认真的老外很快找到了证据：科技博客Androidpolice发表了一篇调查文章《确认阿里云应用市场发布盗版安卓应用，很多来自别的盗版站点》。 他们发现在阿里云的应用市场中，有神庙逃亡（Temple Run）等热门游戏的盗版拷贝下载，其署名提供方并非游戏自己的开发商，而是中国国内某个安卓应用市场，而后者提供了大量其他盗版APP下载；有一些原本 是收费的游戏也在阿里云的市场中提供免费下载；最有趣的是，一款针对安卓ROM的工具软件ROM ToolBox Pro也出现在阿里云市场中——阿里巴巴方面一直坚称阿里云OS并未基于安卓，那在自己的市场中放一款针对安卓ROM的工具有什么意义呢？AndroidPolice 采访了一些应用开发者，他们明确表示自己并未将应用APP上传到阿里云市场。一款收费游戏（在阿里云市场中被标为免费）的开发者表示，“这是我们第一次听 说阿里云。我们不知道我们的应用被上传到了那儿”。ROM ToolBox Pro的开发者语气则比较激烈：“像阿里云这样的软件破解网站只会伤害消费者和开发者”。在盗版习惯仍然深入人心的中国，免费、开放的安卓 平台以及其上的免费应用给很多人一个错觉，既然免费，就可以随便用，所以发布一些免费应用APP有什么不对呢？但这的确是不对的，免费不等于作者放弃了所 有权益，他们只是放弃了按份出售应用的做法，但署名权和其他权益比如市场推广、运营等权益仍然属于作者本人，上传到哪个市场、适用于哪些手机的决定权同样 在原作者（这也有保证应用正常运行的考虑）。像上述阿里云市场中更改应用作者署名、使用非授权版本等行为，已经侵犯了软件作者的权益。至于把收费软件改成 免费应用放在市场里的行为，就更不用多说了。也有些人说谷歌为什么不去抓中国数量众多的盗版market，非要跟阿里云过不去？这里面有个 精力问题，也有个商业策略问题。盗版永无止息，但一旦有商业公司来运作，其破坏力就大得多（因为很容易变现出利益），反过来说侵权主体也好认定。所以反盗 版历来是重拳打击商业、政府机构的盗版行为，对个人消费者和一些小组织则基本无视。协议规定安卓和阿里云都应开源好。本来挺简单的盗版认定问题也说了这么一堆。下面进入稍微复杂一些问题讨论，即阿里云OS是否分裂了安卓阵营。这个说法成立的前提是，阿里云OS要是安卓的一分子，这样才谈得上内部分裂。这也是目前为止阿里反对最激烈的一点。无论是阿里云CEO王坚，还是官方声明，阿里都否定了“阿里云OS属于安卓阵营”的说法。其中王坚说，阿里云OS是“独立的操作系统”； 阿里巴巴副总裁约翰•斯佩里奇说“阿里云OS并不是安卓生态系统的一部分”；阿里第二份官方声明中也说，“阿里云OS使用了自行研发的虚拟机，这与安卓的 Dalvik虚拟机不同。阿里云OS的运行环境，也就是OS的核心部分，即有不同于Dalvik的阿里云自己的JAVA虚拟机，也有阿里云自行研发的云应 用引擎(cloud app engine)，用于支持html5 web应用。阿里云OS用了一些(开源的)安卓应用的框架和工具仅仅是作为补丁，让使用云应用的用户可以在我们的生态系统中使用其他第三方应用。”现 在双方都表明立场了，谷歌说阿里云基于安卓的代码，阿里说我们的核心是自己开发的（但操作系统的核心是“运行环境”这个奇怪的说法是头一次听说），只用了 安卓一些应用框架和工具做补丁，然后还要特意强调，这些部分是开源的。双方各执一词，按业内的做法，那就对比两边的源代码好了。安卓的大部分源代码是公开 的，阿里云OS的代码没有看到公开，似乎他们也没说要公开——但是且慢，按照开源协议，阿里云OS必须公开一部分代码。从这场争论开始到现在，舆论被有意无意地引导到阿里云的远景规划与谷歌冲突、必须要有自主操作系统以免受制于人这些奇怪的宏大叙事角度去，却没看到有基于开源协议来分析阿里云义务的声音。众所周知，安卓是一个开源、开放的操作系统，但这二者并不能等同。同时，开源也并不意味着，任何人或者公司都可以拿着公开源代码回去自己编译出一个应用来，然后打上自主产权的标签就可以去报奖立项了。开源代码有着严格的流转规范体系，使用开源代码必须基于这些规范，来保护开发者的版权。我们以安卓系统为例，来分析一下这些不同的开源标准，以及阿里云应该遵守哪些标准公开代码。安 卓系统基于Linux操作系统发展而来（阿里云也自称基于Linux而非安卓系统）。Linux是一个开源系统，它采用了GPL开源协议，这是我们这里提 到的第一种开源协议。GPL协议规定，遵循该协议的代码都是开源、免费的；一旦软件作品中使用了遵循GPL协议的开源代码，该软件也必须开源、免费。业内 通常管这种特性传递叫“传染性”，只要使用了一行GPL开源代码，整个软件都被“传染”为遵循GPL协议。注意，真正的GPL协议要比这里的描述复杂、严 谨不少，为了行文简洁，本文仅仅选取了与这一问题相关的部分内容进行表述。GPL使软件开发者获得了极大的自由，可以免费阅读、使用全世界 最优秀的程序代码。但它的强传染性也削弱了它的商业前景。一些手机制造商如果针对自己的硬件开发一份Linux驱动，它必然要调用一些Linux基本函 数、类库，该驱动因此会被GPL传染，要公开所有源代码。但这可能暴露厂商的硬件细节，造成泄密。同样，一些商业公司也会认为，将自己的独有技术拿出来支 持Linux，会因为GPL的免费开源特性，造成创新成果流失（微软的鲍尔默就曾经说GPL让Linux染上了癌症）。为了规避这一问题， 谷歌除了在操作系统核心使用了Linux代码之外，在其他专门为安卓开发的相当一部分代码中，使用了传染性不那么强的开源协议：基于Apache的ASL 或者基于BSD的BSD协议。这两种协议的共同点在于对商业应用十分友好，遵循这两种协议的开源代码，商业公司可以拿过去用，而开发出的产品不一定需要也 开源，可以视情况打包为闭源商业软件。在安卓系统中，大部分硬件驱动程序，以及谷歌专门为移动设备开发的基本函数库Bionic，都慷慨地采用了BSD或 ASL开源协议，其中包括Dalvik虚拟机等安卓运行库（runtime）。（整个安卓操作系统各部分所遵循的版权协议见图）对比代码是解答“是否抄袭”的核心这 里要多说两句，谷歌为什么要允许别人闭源使用自己的开源代码呢，它有啥好处？必须要说明，开源协议的选择体现了软件的价值观，也体现了开发者的商业考量。 如果谷歌让整个安卓系统采用GPL协议，看上去所有开发者的进一步开发都会被开源出来，系统创新的速度可能更快；但这样有个更大的副作用，就是很多商业公 司就不愿意介入安卓开发了——一介入就被“传染”了要开放自己的源代码了。为了团结其他商业公司，让更多的手机厂商原意采用安卓、更多的软件厂商原意为安 卓开发丰富多彩的应用APP，谷歌选择了在Linux核心之外，另行独立开发出安卓的运行环境与函数库，并将这部分以更为自由的BSD和ASL协议发布。 这样，开发者基于安卓开发的应用，愿意贡献给社区，就开源；希望保守自己的商业秘密，就闭源。这个策略目前来看相当成功，安卓手机、应用APP这一硬一软 两个方面，在这几年突飞猛进地发展，选择了合适的开源协议功不可没（关于谷歌选择开源协议的分析，阮一峰翻译了一篇文章，可以用来作为背景学习）。通过安卓的体系设计，我们大概对几种不同的开源协议有了初步认识。现在就来分析阿里云OS。阿里云OS的体系结构如图所示。可以看到，阿里云OS同样基于Linux核心。这就涉及第一个版权问题：这部分代码按照GPL规定已经被“传染”，必须开源。目前为止，在公开报道中，我们还没有找到阿里云OS“部分开源”的消息。在 这部分代码开源之后，业内人就可以对阿里云和安卓做一个更透彻的比较，看看到底是前者直接使用了后者的代码，还是真的如阿里自己所说，是独立在Linux 基础上开发出来的新操作系统。因为谷歌安卓中的Linux核心，与一般的Linux核心还有不同。为了适应移动设备内存小、CPU频率低、对耗电量高度敏 感的特点，谷歌将这部分Linux核心做了修改，并依据GPL将修改开源。从这篇文章可 以看到，谷歌对Linux核心做了至少两处重大改动：进程间通讯（IPC）模块Binder，和至关重要的电量管理模块。阿里云OS既然也是移动操作系 统，必然需要对本来为桌面系统开发的Linux做出相似的处理。这个处理方式，是沿用了谷歌的方式，还是真正的自主开发呢？代码公布后，自然见分晓。双 方争议的另一个核心，是阿里云OS如何实现了对安卓应用的兼容。安卓系统的开发语言是java，为了精简java程序使之适用于移动设备，谷歌使用了 Dalvik虚拟机。注意Dalvik不是java虚拟机，它是将java程序重新打包为一种更为精简的形式运行。阿里云在第二份声明中说自己用了“不同 于Dalvik的java虚拟机”，那不但二者的代码不同，连工作原理也会有不同了。包括Dalvik在内的安卓运行库，采用的是ASL和 BSD协议，也就意味着阿里云就算直接用了这部分代码，也可以选择不公开源代码。但这不等于用了白用：ASL和BSD都规定，使用了遵循该协议的开源代 码，必须以显要方式标明原开发者的版权归属；这种标明方式，通常形式有源代码中保留原作者的权利声明和其他原作者规定的说明。阿里云既然已经披露了自己使 用安卓代码的情况，这部分代码中是否保留了谷歌的版权声明，只需要查看相应程序的说明文件即可。总算把开源协议这部分介绍得差不多了。花费 这么多笔墨的目的在于说明，这次谷歌与阿里云之争，不应该像以前业界的一些争论演变为口水战，而应该像另外一些争论一样，可以让更多人了解操作系统、开源 协议等相关知识，消除许多误区（这两类争论我就不具体点名举例了），避免被人当技术小白糊弄。要达到这个目的很简单，阿里云OS公开指定部分的源代码，供业内行家与谷歌代码进行比对即可。这不是强人所难，因为既然依照GPL、ASL、BSD等规范享用了一大批免费开源源代码，那也应该遵循人家规定的义务。当 然，在中国这个用盗版软件都异常有理的国家，各类开源协议都是防君子不防小人的，程序源代码都是纯文本文件，你不遵循协议，它也不会闹脾气不运行，或者在 屏幕上打出一行字来骂你。但无论是阿里，还是另外号称要做自主操作系统的华为、百度、联想，都是国际级大公司，应该不会耍这种初级流氓。安卓用户与开发者成为赢家也 有一些有技术背景的朋友可能会奇怪，谷歌的安卓系统已经提供了相当宽松的条件，核心全部开源消除了安全隐患，庞大的社区和资金支持保证了系统快速进化，在 这种情况下，为什么这些公司还要一股劲地开发自己的操作系统呢？把精力用在做好跟公司业务有关的平台、APP上不是更好吗。这个问题很难回答，我也没有确 定的答案。有些微博网友说是因为如果打出自主操作系统的牌子，阿里云OS就可以获得国家“核高基”（ 核心电子器件、高端通用芯片及基础软件产品）资金资助。我查了一下，阿里云在某些展会上的确出现在核高基成果展区，也有微博上的实名用户说，阿里云获得了863计划的8000万元资金，他当时是评委。但这些资金项目与阿里云舍弃安卓走自主之路之间还暂时找不到官方表述和公开表达，所以建议网友们在找到新的证据之前，不要过于肯定地认定这一点。最后，来说一下这次争议对用户的影响。可以肯定，这对安卓开发者和用户来说，是个大利好消息，因为谷歌表现出了解决安卓分裂现状的行动与关注度，而分裂问题一直是安卓系统最大的忧患。资深移动互联网专家郝培强（@tinyfool） 两年前就在新京报上发表过文章，安卓系统的标准化程度与iOS存在巨大差距，厂商各自推出的不同分辨率、不同操作方式的手机让开发者和用户都深受其苦，各 类安卓版本之间的兼容、继承也问题多多。谷歌应对这一问题的方式是组建开放手机联盟，并在安卓4.</description></item><item><title>【转】TOP 5 linux security distributions</title><link>/posts/switch_top_5_linux_security_distributions/</link><pubDate>Tue, 30 Oct 2012 11:51:00 +0000</pubDate><guid>/posts/switch_top_5_linux_security_distributions/</guid><description>TOP 5 linux security distributions1.BackTrack &amp;mdash;&amp;ndash; 专注渗透测试(Penetration Test)和安全取证BackTrack linux 是顶级linux 安全发行版之一。是广大黑客和安全专家必备武器之一。特点：(1).强大的开发团队 &amp;mdash;&amp;ndash; Offensive Security (btw 绝大多数是CISSP级别)(2).强大的社区支持、BT fans 遍布全球(3).最新的linux kernel、USB3.0支持等(4).包含最新、最强大的攻击工具，如Metasploit、Nmap等(5).基于Ubuntu，所有软件包都是定制的主页：http://www.backtrack-linux.org/2.NodeZero &amp;mdash;&amp;ndash; 另一个非常强大的Penetration Test发行版特点：(1).基于Ubuntu(2).超过300+的网络安全工具(3).黑客开发、黑客专用主页：http://netinfinity.org/download/3.REMnux &amp;mdash;&amp;ndash; 专注逆向工程(Reverse-Engineering)和Malware分析REMnux: A Linux Distribution for Reverse-Engineering Malware特点：(1).由Sans forensics 610 (Reverse-Engineering Malware: Malware Analysis Tools and Techniques)讲师开发及维护，其也是GREM(GIAC Reverse Engineering Malware Certification)的讲师。Sans：顶级安全研究机构。和securityfocus、cert等齐名。相比较而然Sans更关注实际操作能力，securityfocus等更注重理论研究(2).基于Ubuntu(3).包含大量逆向工程工具，如gdb、shellcode2exe、upx等主页：http://zeltser.com/remnux/4.Security Onion &amp;mdash;&amp;ndash; 专注于入侵检测(Intrusion Detection)Security Onion 是顶级linux 安全发行版之一，顶级入侵检测linux发行版特点：(1).由Sans 安全顾问doug.burks开发维护(2).基于ubuntu(3).包含最新、最强大的入侵检测系统Snort、强大的安全日志分析前段sguil等主页：http://code.google.com/p/security-onion/5.OWASP livecd &amp;mdash;&amp;ndash; 专注web应用程序安全渗透测试OWASP live cd 顶级wep app penetration test 发行livecd特点：(1).由OWASP(开放web应用安全工程)&amp;mdash;&amp;ndash;顶级web安全会议官方出品。(2).包含大量文档及web渗透工具主页：http://www.owasp.org/index.php/Category:OWASP_Live_CD_Project</description></item><item><title>渗透测试工具介绍</title><link>/posts/null/</link><pubDate>Mon, 29 Oct 2012 08:35:00 +0000</pubDate><guid>/posts/null/</guid><description>渗透测试&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;Canvas是ImmunitySec出品的一款安全漏洞检测工具。它包含150个以上的漏洞利用, 并包含操作系统、应用软件等大量的安全漏洞。对于渗透测试人员来说，Canvas是比较专业的安全漏洞利用工具。Canvas 也常被用于对IDS和IPS的检测能力的测试。Canvas每个月会把稳定的版本及时发布，通过Web站点进行更新，同时更新漏洞利用模块和引擎程序。并且会及时发邮件提醒用户使用。aImmunity Canvas渗透测试工具&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;Immunity Canvas是一款专业的渗透测试工具。Canvas渗透测试工具包含150个以上的漏洞利用, 并包含操作系统、应用软件等大量的安全漏洞。对于渗透测试人员来说，Canvas是比较专业的安全漏洞利用工具。Canvas 渗透测试工具也常被用于对IDS和IPS的检测能力的测试。Canvas每个月会把稳定的版本及时发布，通过Web站点进行更新，同时更新漏洞利用模块和引擎程序。并且会及时发邮件提醒用户使用。1. Immunity Canvas渗透测试工具安装简介：安装平台 需要支撑的软件列表1. Windows XP ◆The Python Programming Language Version 2.5◆GTK aka Graphical Tool Kit◆PyGTK the Python bindings for the Graphical Tool Kit◆PyCairo the Python bindings for the Cairo Image Library◆PygObject The Python bindings for the Gobject Library2. Windows 2003 3. Vista 4. Linux 5. Debian 2. Immunity Canvas渗透测试工具 攻击平台介绍（该软件包含的攻击列表）分类详细列表 操作系统类 Windows，vista，linux，solaris，aix，hp-unix，mac…… WEB应用软件 IIS，APACHE，JBOSS，TOMCAT，WEBLOGIC……数据库类 DB2，ORACLE，MSSQL，MYSQL，INFORMIX……WEB应用程序 Joomla, mambo……3. Immunity Canvas渗透测试工具主要功能1． 自动攻击：可以选择自动攻击功能，软件会自动对网络、操作系统、应用软件进行攻击。攻击成功后，会自动返回目标系统的控制权。2． 漏洞攻击：该软件漏洞库每天进行更新。同时包含了大量的0day以及未公开的漏洞。可以指定漏洞对目标系统进行攻击。3． 升级功能：该软件包含两种升级方式，月度升级和实时升级。“月度升级”指每月升级一次，适合研究机构和小型企业使用。“实时升级”基本上每天更新一次，包含0DAY漏洞和未公开漏洞，适合渗透测试团队和攻防团队使用。4. Immunity Canvas渗透测试工具 主要功能模块说明1.</description></item><item><title>【转】安全工具</title><link>/posts/switch_security_tools/</link><pubDate>Mon, 29 Oct 2012 07:50:00 +0000</pubDate><guid>/posts/switch_security_tools/</guid><description>先说明下这类工具的安装，安装准备－－Linux下一些压缩文件的解压命令：tar xvf *.tar（tar压缩的软件包)tar zxvf *.tar.gz (tar和gzip压缩的软件包)unrar x *.rar unpack_path (rar压缩的软件包 unpack_path为解压后的存放路径 unrar解压命令需要安装Linux下的rar工具才可使用)rpm -vhU *.rpm(RPM软件包的安装)工具的一般安装步骤：（1）转到解压目录运行 ./configure；（2）执行make all；（3）执行make install。在安装过程中部分工具还需要安装特定的Lib库，在工具的使用介绍中会进行特别说明。一、Hping2&amp;mdash;网络探测工具工具名称：Hping2应用环境：Linux工具介绍：hping是一个基于命令行的TCP/IP工具，它在UNIX上得到很好的应用，不过它并非仅仅一个ICMP请求/响应工具，它还支持TCP、UDP、ICMP；RAW-IP协议，以及一个路由模型HPING一直被用作安全工具，可以用来测试网络及主机的安全，它有以下功能：1.防火墙探测（通过ping的返回码进行判断，比如在Cisco之类的防火墙阻断ICMP包时返回状态13的目标不可达信息，针对此可以判断探测目标被Cisco防火墙保护）2.高级端口扫描（2－7的功能主要是根据对TCP/IP的理解，通过查看发出的包的返回情况进行分析和测试实现）3.网络测试;(可以用不同的协议，TOS，数据包碎片来实现此功能)4.手工MTU发掘5.高级路由(在任何协议下都可以实现)6.OS指纹判断7.细微UPTIME猜测示例：穿透防火墙的扫描利用的ICMP不可达的返回值进行确定，不同的防火墙的返回值不相同，如Cisco的状态值为13；其他测试需理解TCP/IP的包头结构简单的类ping操作(-c计数) hping2 192.168.0.1 -c 2设置时间间隔，数据包发送的频率(-i uX X为微秒) hping2 192.168.0.1 -c 2 -i u1000一种类ping攻击测试(-d 数据包的大小) hping2 192.168.0.1 -d 20000 -i u1探测外网 hping2 -A/F/S -p 80 www.my.com；具体运行参见图1(先使用ping测试，无返回，再使用hping2进行测试)：图1二、Nbtscan&amp;mdash;从Windows网络上收集NetBIOS信息工具名称：nbtscan-1.5.1a应用环境：Linux工具介绍：这是一款用于扫描Windows网络上NetBIOS名字信息的程序。该程序对给出范围内的每一个地址发送NetBIOS状态查询，并且以易读的表格列出接收到的信息，对于每个响应的主机，NBTScan列出它的IP地址、NetBIOS计算机名、登录用户名和MAC地址。示例：这个比较简单，不过只能扫描内网扫描192.168.0.0的网段： nbtscan 172.16.15.0/24 ，测试操作见图2：图2三、Xprobe2&amp;mdash;主动操作系统指纹识别工具工具名称：Xprobe2应用环境：Linux工具介绍：Xprobe2 是一款主动操作系统指纹识别工具，和其它操作系统指纹识别不同，它依靠与一个签名库的模糊匹配，以及合理的推测来共同确定远程操作系统的类型。示例：简单内网探测： xprobe2 192.168.0.1探测外网(目标主机开启Web服务)： xprobe2 -p tcp:80:open/tcp:25:open www.my.com；探测目标主机的操作系统如图3所示：图3四、nmap&amp;mdash;网络扫描和嗅探工具包工具名称：nmap-3.50应用环境：Linux工具介绍：NMap是Linux下的网络扫描和嗅探工具包。可以帮助网管人员深入探测UDP或者TCP端口，直至主机所使用的操作系统；还可以将所有 探测结果记录到各种格式的日志中，为系统安全服务。NMap，也就是Network Mapper，是Linux下的网络扫描和嗅探工具包，其基本功能有三个，一是探测一组主机是否在线；其次是扫描 主机端口，嗅探所提供的网络服务；还可以推断主机所用的操作系统 。Nmap可用于扫描仅有两个节点的LAN，直至500个节点以上的网络。Nmap 还允许用户定制扫描技巧。通常，一个简单的使用ICMP协议的ping操 作可以满足一般需求；也可以深入探测UDP或者TCP端口，直至主机所 使用的操作系统；还可以将所有探测结果记录到各种格式的日志中， 供进一步分析操作。但了nmap被发现存在DOS攻击， 针对这类攻击，可采取如下措施:安装系统卖方的最新补丁；用未受影响的系统做防火墙。示例：适用于内外网的探测，以内网操作为示例(外网参数同)简单端口扫描： nmap -vv -sT(sS、sF、sU、sA) 192.168.0.1 -D 127.0.0.1（-D伪造的地址)OS检测： nmap -vv -sS -O 192.</description></item><item><title>【转】最佳的75个安全工具</title><link>/posts/turn_the_best_75_security_tools/</link><pubDate>Mon, 29 Oct 2012 07:44:00 +0000</pubDate><guid>/posts/turn_the_best_75_security_tools/</guid><description>最佳的75个安全工具作者：gdyw1999 2005-01-29 15:11:56 来自：http://haowawa.8866.org在2000 年的5、6月间，nmap-hackers邮件列表中发起了最佳安全工具的评选活动，活动取得了成功，最终由1200名Nmap用户评选出了50个最佳安全工具，评选结果发布在insecure.org网站，得到了网友们的普遍认可。时隔三年，nmap-hackers邮件列表中又发起了同样的评选活动， 1854个用户参与了此次活动，每个用户最多可以选择8个最佳工具，并且这次评选出的最佳安全工具由50个增加到了75个。因为是在 nmap-hackers邮件列表中做出的评选，因此没有把nmap安全扫描器（http://www.insecure.org/nmap/）评选在内。这次评选出来的75个最佳安全工具在网络安全领域都是一些很有代表性的软件，对于那些在网络安全方面不知从何处开始的新手们来说，这对他们有相当的参考价值。工具：Nessus（最好的开放源代码风险评估工具）网址：http://www.nessus.org/类别：开放源码平台：Linux/BSD/Unix简介：Nessus是一款可以运行在Linux、BSD、Solaris以及其他一些系统上的远程安全扫描软件。它是多线程、基于插入式的软件，拥有很好的 GTK界面，能够完成超过1200项的远程安全检查，具有强大的报告输出能力，可以产生HTML、XML、LaTeX和ASCII文本等格式的安全报告，并且会为每一个发现的安全问题提出解决建议。工具：Ethereal（网络协议检测工具）网址：http://www.ethereal.com/类别：开放源码平台：Linux/BSD/Unix/Windows简介：Ethereal是一款免费的网络协议分析程序，支持Unix、Windows。借助这个程序，你既可以直接从网络上抓取数据进行分析，也可以对由其他嗅探器抓取后保存在硬盘上的数据进行分析。你能交互式地浏览抓取到的数据包，查看每一个数据包的摘要和详细信息。Ethereal有多种强大的特征，如支持几乎所有的协议、丰富的过滤语言、易于查看TCP会话经重构后的数据流等。工具：Snort（免费的入侵检测系统）网址：http://www.snort.org/类别：开放源码平台：Linux/BSD/Unix/Windows简介：Snort是一款轻量级的网络入侵检测系统，能够在IP网络上进行实时的流量分析和数据包记录。它不仅能进行协议分析、内容检索、内容匹配，而且能用于侦测诸如缓冲溢出、隐秘端口扫描、CGI攻击、SMB探测、操作系统指纹识别等大量的攻击或非法探测。Snort使用灵活的规则去描述哪些流量应该被收集或被忽略，并且提供一个模块化的探测引擎。工具：Netcat（网络瑞士军刀）网址：http://www.atstake.com/research/too&amp;hellip;work_utilities/类别：开放源码平台：Linux/BSD/Unix/Windows简介：一个简单而有用的工具，透过使用TCP或UDP协议的网络连接去读写数据。它被设计成一个稳定的后门工具，能够直接由其它程序和脚本轻松驱动。同时，它也是一个功能强大的网络调试和探测工具，能够建立你需要的几乎所有类型的网络连接，还有几个很有意思的内置功能。工具：TCPDump/WinDump（用于网络监测和数据收集的优秀嗅探器）网址：http://www.tcpdump.org/，http://windump.polito.it/类别：开放源码平台：Linux/BSD/Unix/Windows简介：Tcpdump是一款众人皆知和受人喜欢的基于命令行的网络数据包分析和嗅探工具。它能把匹配规则的数据包的包头给显示出来。你能使用这个工具去查找网络问题或者去监视网络上的状况。WinDump是Tcpdump在Windows平台上的移植版。工具：Hping2（类似ping的网络探测工具）网址：http://www.hping.org/类别：开放源码平台：Linux/BSD/Unix简介：hping2能发送自定义的ICMP/UDP/TCP包到目标地址并且显示包的响应情况。它有一个方便的traceroute模式，并且支持IP分片。这个工具在traceroute、ping和探测防火墙后的主机时特别有用。工具：DSniff(一流的网络审计和渗透测试工具）网址：http://naughty.m＆#111nkey.org/~dugsong/dsniff/类别：开放源码平台：Linux/BSD/Unix/Windows简介：DSniff是由Dug Song开发的一套包含多个工具的软件套件。其中，dsniff、filesnarf、mailsnarf、msgsnarf、rlsnarf和 webspy可以用于监视网络上我们感兴趣的数据（如口令、e-mail、文件等），arpspoof、dnsspoof和macof能很容易地载取到攻击者通常难以获取的网络信息（如二层交换数据），sshmitm和webmitm则能用于实现重写SSH和HTTPS会话达到m＆#111nkey-in -the-middle攻击。在http://www.datanerds.net/~mike/dsniff.html可以找到Windows平台上的移植版。工具：GFI LANguard（商业化的网络安全扫描软件）网址：http://www.gfi.com/lannetscan/类别：商业平台：Windows简介：LANguard扫描网络并且得出诸如每台机器的服务包等级、缺少的安全补丁、打开的共享、开放的端口、正在运行的服务和应用程序、注册表键值、弱口令、用户和组等扫描信息的报告。扫描结果输出为一个HTML格式的报告，报告能够自定义。工具：Ettercap（为你的交换环境提供更多的安全）网址：http://ettercap.sourceforge.net/类别：开放源码平台：Linux/BSD/Unix/Windows简介：Ettercap是一款以太网环境下的网络监视、拦载和记录工具，支持多种主动或被动的协议分析（甚至跟加密相关的SSH、HTTPS等），有数据插入、过滤、保持连接同步等多种功能，也有一个能支持多种嗅探模式的、强大而完整的嗅探套件，支持插件，能够检查网络环境是否是交换局域网，并且能使用主动或被动的操作系统指纹识别技术让你了解当前局域网的情况。工具：Whisker/Libwhisker（CGI缺陷扫描软件和库）网址：http://www.wiretrip.net/rfp/p/doc.asp/d21.htm类别：开放源码平台：Linux/BSD/Unix/Windows简介：Whisker是一款非常好的HTTP服务器缺陷扫描软件，能扫描出大量的已知安全漏洞，特别是些危险的CGI漏洞。Libwhisker是一个用perl编写的由Whiskerr使用的程序库，通过它你可以创建自己HTTP扫描器。工具：John the Ripper（格外强大、灵活、快速的多平台哈希口令破解器）网址：http://www.openwall.com/john/类别：开放源码平台：Linux/BSD/Unix/Windows简介：John the Ripper是一个快速的口令破解器，支持多种操作系统，如Unix、DOS、Win32、BeOS和OpenVMS等。它设计的主要目的是用于检查 Unix系统的弱口令，支持几乎所有Unix平台上经crypt函数加密后的口令哈希类型，也支持Kerberos AFS和Windows NT/2000/XP LM哈希等。工具：OpenSSH/SSH（访问远程计算机的一种安全方法）网址：http://www.openssh.com/，http://www.ssh.com/commerce/index.html类别：开放源码/商业平台：Linux/BSD/Unix/Windows简介：SSH（Secure Shell）是一款用来登录远程服务器并在远程服务器上执行命令的程序，在缺少安全防护的网络上它能给两台互不信任的主机间提供安全可靠的加密通讯。 X11连接和其他任意的TCP/IP端口连接都可以通过SSH进行数据封装转发到一个安全的通道里。SSH开发的本意是用于代替rlogin、rsh和 rcp这些不安全的程序，以及为rdist和rsync提供安全通道。需要注意的是，OpenSSH是SSH的替代软件，SSH对于某些用途是要收费的，但OpenSSH总是免费。工具：Sam Spade（Windows平台上的免费网络查询工具）网址：http://www.samspade.org/ssw/类别：免费软件平台：Windows简介：SamSpade提供了一个友好的GUI界面，能方便地完成多种网络查询任务，它开发的本意是用于追查垃圾邮件制造者，但也能用于其它大量的网络探测、网络管理和与安全有关的任务，包括ping、nslookup、whois、dig、traceroute、finger、raw HTTP web browser、DNS zone transfer、SMTP relay check、website search等工具，在它的网站还有大多数查询工具的一个在线版本（http://www.samspade.org/t/）。工具：ISS Internet Scanner（应用层风险评估工具）网址：http://www.iss.net/products_service&amp;hellip;er_internet.php类别：商业平台：Windows简介：互联网扫描器（Internet Scanner）始于1992年一个小小的开放源代码扫描器，它是相当不错的，但价格昂贵，使用开源软件Nessus来代替它也是一个不错的选择。工具：Tripwire（功能强大的数据完整性检查工具）网址：http://www.tripwire.com/类别：商业平台：Linux/BSD/Unix/Windows简介：Tripwire是一款文件和目录完整性检查工具，它能帮助系统管理员和用户监视一些重要文件和目录发生的任何变化。通过制定一些基本的系统策略，在文件遭到破坏或篡改时由Tripwire通知系统管理员，从而能及时地做出处理。Tripwire的商业版本非常昂贵，在Tripwire.Org网站有一个免费的开放源代码的Linux版本，UNIX用户也可能需要考虑AIDE（http: //www.cs.tut.fi/~rammer/aide.html），它是Tripwire的免费替代品。工具：Nikto（一款非常全面的web扫描器）网址：http://www.cirt.net/code/nikto.shtml类别：开放源码平台：Linux/BSD/Unix/Windows简介：Nikto是一款能对web服务器多种安全项目进行测试的扫描软件，能在200多种服务器上扫描出2000多种有潜在危险的文件、CGI及其他问题。它也使用LibWhiske库，但通常比Whisker更新的更为频繁。工具：Kismet（强大的无线嗅探器）网址：http://www.kismetwireless.net/类别：开放源码平台：Linux/BSD/Unix/Windows简介：Kismet是一款802.11b网络嗅探和分析程序，功能有：支持大多数无线网卡，能通过UDP、ARP、DHCP数据包自动实现网络IP阻塞检测，能通过Cisco Discovery协议列出Cisco设备，弱加密数据包记录，和Ethereal、tcpdump兼容的数据包dump文件，绘制探测到的网络图和估计网络范围。工具：SuperScan（Windows平台上的TCP端口扫描器）网址：http://www.foundstone.com/index.htm&amp;hellip;c/superscan.htm类别：免费平台：Windows简介：SuperScan是一款具有TCP connect端口扫描、Ping和域名解析等功能的工具，能较容易地做到对指定范围内的IP地址进行ping和端口扫描。源代码不公开。工具：L0phtCrack 4（Windows口令审计和恢复程序）网址：http://www.atstake.com/research/lc/类别：商业平台：Linux/BSD/Unix/Windows简介：L0phtCrack试图根据从独立的Windows NT/2000工作站、网络服务器、主域控制器或Active Directory上正当获取或者从线路上嗅探到的加密哈希值里破解出Windows口令，含有词典攻击、组合攻击、强行攻击等多种口令猜解方法。工具：Retina（eEye公司的风险评估扫描工具）网址：http://www.eeye.com/html/Products/Retina/index.html类别：商业平台：Windows简介：像上面提到的Nessus和ISS Internet Scanner一样，Retina的功能也是用于扫描网络内所有的主机并且报告发现的每一个缺陷。工具：Netfilter（当前Linux内核采用的包过滤防火墙）网址：http://www.netfilter.org/类别：开放源码平台：Linux简介：Netfilter是一款功能强大的包过滤防火墙，在标准的Linux内核内得到实现，iptables是防火墙配置工具。它现在支持有状态或无状态检测的包过滤，支持所有种类的NAT和包分片。相应的，对于非Linux平台上的防火墙，OpenBSD平台上有pf，UNIX平台上有 ipfilter，Windows平台上有Zone Alarm个人防火墙。工具：traceroute/ping/telnet/whois（基本命令）网址：类别：免费平台：Linux/BSD/Unix/Windows简介：当我们使用大量的高水平的工具来辅助安全审计工作时，别忘了这几个最基本的工具。我们每个人都应非常熟悉这几个工具的用法，几乎所有的操作系统上都附带有这几个工具，不过Windows平台上没有whois工具，并且traceroute改名为tracert。工具：Fport（增强的netstat）网址：http://www.foundstone.com/index.htm&amp;hellip;ddesc/fport.htm类别：免费平台：Windows简介：Fport能显示主机上当前所有打开的TCP/IP、UDP端口和端口所属的进程，因此通过使用它能即刻发现未知的开放端口和该端口所属的应用程序，是一款查找木马的好工具。不过，Fport仅支持Windows系统，在许多UNIX系统上有一个netstat命令实现类似功能，Linux系统上用 &amp;ldquo;netstat -pan&amp;quot;命令。源代码不公开。工具：SAINT（安全管理员的综合网络工具）网址：http://www.saintcorporation.com/saint/类别：商业平台：Linux/BSD/Unix简介：Saint是一款商业化的风险评估工具，但与那些仅支持Windows平台的工具不同，SAINT运行在UNIX类平台上，过去它是免费并且开放源代码的，但现在是一个商业化的产品。工具：Network Stumbler（免费的Windows平台802.11嗅探器）网址：http://www.stumbler.net/类别：免费平台：Windows简介：Netstumbler是最有名的寻找无线接入点的工具，另一个支持PDA的WinCE平台版本叫Ministumbler。这个工具现在是免费的，仅仅支持Windows系统，并且源代码不公开，而且该软件的开发者还保留在适当的情况下对授权协议的修改权。UNIX系统上的用户可以使用 Kismet 来代替。工具：SARA（安全管理员的辅助工具）网址：http://www-arc.com/sara/类别：开放源码平台：Linux/BSD/Unix简介：SARA是一款基于SATAN安全扫描工具开发而来的风险评估工具，每月更新两次。工具：N-Stealth（web服务器扫描工具）网址：http://www.nstalker.com/nstealth/类别：商业平台：Windows简介：N-Stealth是一款商业化的Web服务器安全扫描软件，通常它比whisker、nikto等免费的web扫描器升级的更为频繁。N- Stealth开发商宣称的&amp;quot;超过20,000条的缺陷和exploit数据&amp;quot;和&amp;quot;每天新增大量的缺陷检查&amp;quot;是非常可疑的。我们也要注意到，在 nessus、ISS、Retina、SAINT和SARA等所有常见的风险评估工具里已含有web扫描组件，不过它们可能没有N-Stealth这样灵活易用和更新频繁。n-stealth不公开源代码。工具：AirSnort（802.11 WEP密码破解工具）网址：http://airsnort.shmoo.com/类别：开放源码平台：Linux/BSD/Unix/Windows简介：AirSnort是一款无线局域网密钥恢复工具，由Shmoo小组开发。它监视无线网络中的传输数据，当收集到足够多的数据包时就能计算出密钥。工具：NBTScan（从Windows网络上收集NetBIOS信息）网址：http://www.inetcat.org/software/nbtscan.html类别：开放源码平台：Linux/BSD/Unix/Windows简介：NBTscan是一个用于扫描网络上NetBIOS名字信息的程序。这个程序对给出范围内的每一个地址发送NetBIOS状态查询，并且以易读的表格列出接收到的信息，对于每个响应的主机，它列出它的IP地址、NetBIOS计算机名、登录用户名和MAC地址。工具：GnuPG/PGP（保护你的文件和通信数据的先进加密程序）网址：http://www.gnupg.org/，http://www.pgp.com/类别：开放源码/商业平台：Linux/BSD/Unix/Windows简介：PGP是由Phil Zimmerman开发的著名加密程序，它使用公钥加密算法和常规的加密技术相结合，能将加密后的文件安全地从一地传递到另一地，从而保护用户的数据免于窃听或其他的安全风险。GnuPG是遵照PGP标准开发的开源程序，不同的是，GnuPG是永远免费的，而PGP对于某些用途要收费。工具：Firewalk（高级的traceroute）网址：http://www.packetfactory.net/projects/firewalk/类别：开放源码平台：Linux/BSD/Unix简介：Firewalk使用类似traceroute的技术来分析IP包的响应，从而测定网关的访问控制列表和绘制网络图。2002年10月，这个一流的工具在原来的基础上进行了重新开发。需要注意到的是，Firewalk里面的大多数功能也能由Hping2的traceroute选项来实现。工具：Cain &amp;amp; Abel（穷人的L0phtcrack）网址：http://www.oxid.it/cain.html类别：免费平台：Windows简介：Cain &amp;amp; Abel是一个针对Microsoft操作系统的免费口令恢复工具。它通过如下多种方式轻松地实现口令恢复：网络嗅探、破解加密口令（使用字典或强行攻击）、解码被打乱的口令、显示口令框、显示缓存口令和分析路由协议等。源代码不公开。工具：XProbe2（主动操作系统指纹识别工具）网址：http://www.sys-security.com/html/projects/X.html类别：开放源码平台：Linux/BSD/Unix简介：XProbe是一款测定远程主机操作系统类型的工具。它依靠与一个签名数据库的模糊匹配以及合理的推测来确定远程操作系统的类型，利用ICMP协议进行操作系统指纹识别是它的独到之处。工具：SolarWinds Toolsets（大量的网络发现、监视、攻击工具）网址：http://www.solarwinds.net/类别：商业平台：Windows简介：SolarWinds包含大量适合系统管理员做特殊用途的工具，与安全相关的工具包括许多的网络发现扫描器（network discovery scanner）和一个SNMP强力破解器。工具：NGrep（方便的包匹配和显示工具）网址：http://www.packetfactory.net/projects/ngrep/类别：开放源码平台：Linux/BSD/Unix/Windows简介：NGrep在网络层实现了GNU grep的大多数功能，基于pcap，可以使你通过指定扩展的正则表达式或十六进制表达式去匹配网络上的数据流量。它当前能够识别流经以太网、PPP、 SLIP、FDDI、令牌网和回环设备上的TCP、UDP和ICMP数据包，并且和其他常见的嗅探工具（如tcpdump和snoop）一样，理解bpf 过滤机制。工具：Perl/Python（脚本语言）网址：http://www.perl.org，http://www.python.org/类别：开放源码平台：Linux/BSD/Unix/Windows简介：当我们使用那些已经开发好的安全工具来处理任务时，别忘了能自己写出（或修改）安全程序也是一件非常重要的事情。利用Perl和Python能非常容易地写出用于系统测试、exploit和修补的脚本程序，使用包含Net::RawIP和协议实现等模块的CPAN（Comprehensive Perl Archive Network：http://www.cpan.org/）或类似的档案能帮助我们比较容易地进行相关的开发。工具：THC-Amap（应用程序指纹识别扫描器）网址：http://www.thc.org/releases.php类别：开放源码平台：Linux/BSD/Unix简介：由THC开发的Amap是一个功能强大的扫描器，它通过探测端口响应的应用程序指纹数据来识别应用程序和服务，远甚于通过缺省端口号来判断应用程序和服务的方法。工具：OpenSSL（最为重要的SSL/TLS加密库）网址：http://www.openssl.org/类别：开放源码平台：Linux/BSD/Unix/Windows简介：OpenSSL项目是共同努力开发出来的一个健全的、商业级的、全开放的和开放源代码的工具包，用于实现安全套接层协议(SSL v2/v3)和传输层安全协议(TLS v1)以及形成一个功效完整的通用加密库。该项目由全世界范围内志愿者组成的团体一起管理，他们使用Internet去交流、设计和开发这个 OpenSSL工具和相关的文档。工具：NTop（网络使用状况监测软件）网址：http://www.ntop.org/类别：开放源码平台：Linux/BSD/Unix/Windows简介：Ntop是一款显示网络使用状况的流量监测软件，类似于UNIX平台上监视系统进程的top命令。在交互模式下，ntop会将网络的使用状况显示在用户的终端上；在Web模式下，ntop会做为一个web服务器，创建包含网络状况的HTML网页返回给用户。工具：Nemesis（命令行式的UNIX网络信息包插入套件）网址：http://www.packetfactory.net/projects/nemesis/类别：开放源码平台：Linux/BSD/Unix简介：Nemesis项目是为了开发一个UNIX/Linux系统上基于命令行的、方便人们使用的IP栈，它可以自定义数据包、插入数据包、进行协议攻击等，是一个很好的测试防火墙、入侵检测系统、路由器和其他网络设备的工具。如果你对Nemesis感兴趣，那么你也可能需要看看hping2，这两者补相互之不足。工具：LSOF（列出打开的文件）网址：ftp://vic.cc.purdue.edu/pub/tools/unix/lsof/类别：开放源码平台：Linux/BSD/Unix简介：LSOF是针对Unix的诊断和分析工具，它能显示出由系统里正在运行的进程所打开的文件，也能显示出每一个进程的通讯socket。工具：Hunt（Linux平台上高级的包嗅探和会话劫持工具）网址：http://lin.fsid.cvut.cz/~kra/index.html#HUNT类别：开放源码平台：Linux简介：Hunt能监视、劫持、重设网络上的TCP连接，在以太网上使用才有作用，并且含有监视交换连接的主动机制，以及包括可选的ARP转播和劫持成功后的连接同步等高级特征。工具：Honeyd（你个人的honeynet，http://www.honeynet.org/）网址：http://www.citi.umich.edu/u/provos/honeyd/类别：开放源码平台：Linux/BSD/Unix/Windows简介：Honeyd是一个能在网络上创建虚拟主机的小小后台程序，虚拟主机能被配置成运行任意的服务，并且洽当的服务TCP特性以致他们看起来就像是运行在某个特定版本的操作系统上。Honeyd能在一个模拟的局域网环境里让一台主机配有多个地址，并且可以对虚似主机进行ping、traceroute。虚拟主机上任何类型的服务都可以依照一个简单的配置文件进行模拟。Honeyd也可以对一台主机做代理服务，而不是模拟它。工具：Achilles（可以修改http会话包的代理程序）网址：http://packetstormsecurity.nl/filed&amp;hellip;s-0-27.zip.html类别：开放源码平台：Windows简介：Achilles是一个设计用来测试web应用程序安全性的工具。它是一个代理服务器，在一个HTTP会话中扮演着&amp;quot;中间人&amp;rdquo;（man-in- the -middle）的角色。一个典型的HTTP代理服务器将在客户浏览器和web服务器间转发数据包，但Achilles却载取发向任一方的HTTP会话数据，并且在转发数据前可以让用户修改这些数据。工具：Brutus（网络认证的强行破解工具）网址：http://www.</description></item><item><title>[转]Linux 优秀安全工具</title><link>/posts/rpm_linux_excellent_security_tools/</link><pubDate>Mon, 29 Oct 2012 07:33:00 +0000</pubDate><guid>/posts/rpm_linux_excellent_security_tools/</guid><description>Linux 优秀安全工具02011-01-26 / System / Linux / 1,809 ViewWireshark :优秀的开源Sniffer工具（强烈推荐）官方地址：http://www.wireshark.org/Metasploit Framework : Hack the Planet（强烈推荐）官方地址：http://www.metasploit.com/Nmap：优秀开源强大的开源工具（强烈推荐）官方地址：http://nmap.org/Nessus：最好的开放源代码风险评估工具（推荐）网址：http://www.nessus.org/Ethereal：网络协议检测工具(推荐)网址：http://www.ethereal.com/Snort：免费的入侵检测系统（推荐）网址：http://www.snort.org/Netcat：网络瑞士军刀网址：http://www.atstake.com/research/tools/network_utilities/TCPDump/WinDump：用于网络监测和数据收集的优秀嗅探器网址：http://www.tcpdump.org/，http://windump.polito.it/Hping2：类似ping的网络探测工具网址：http://www.hping.org/DSniff：一流的网络审计和渗透测试工具（推荐）网址：http://naughty.monkey.org/~dugsong/dsniff/Ettercap：为你的交换环境提供更多的安全网址：http://ettercap.sourceforge.net/Whisker/Libwhisker：CGI缺陷扫描软件和库网址：http://www.wiretrip.net/rfp/p/doc.asp/d21.htmJohn the Ripper：格外强大、灵活、快速的多平台哈希口令破解器网址：http://www.openwall.com/john/OpenSSH/SSH：访问远程计算机的一种安全方法网址：http://www.openssh.com/，http://www.ssh.com/commerce/index.htmlNikto：一款非常全面的web扫描器（推荐）网址：http://www.cirt.net/code/nikto.shtmlKismet：强大的无线嗅探器网址：http://www.kismetwireless.net/Netfilter：当前Linux内核采用的包过滤&amp;gt;防火墙网址：http://www.netfilter.org/SARA：安全管理员的辅助工具网址：http://www-arc.com/sara/AirSnort：802.11 WEP密码破解工具网址：http://airsnort.shmoo.com/Firewalk：高级的traceroute网址：http://www.packetfactory.net/projects/firewalk/XProbe2：主动操作系统指纹识别工具网址：http://www.sys-security.com/html/projects/X.htmlNGrep：方便的包匹配和显示工具网址：http://www.packetfactory.net/projects/ngrep/THC-Amap：应用程序指纹识别扫描器网址：http://www.thc.org/releases.phpOpenSSL：最为重要的SSL/TLS加密库网址：http://www.openssl.org/NTop：网络使用状况监测软件网址：http://www.ntop.org/Nemesis：命令行式的UNIX网络信息包插入套件网址：http://www.packetfactory.net/projects/nemesis/LSOF：列出打开的文件网址：ftp://vic.cc.purdue.edu/pub/tools/unix/lsof/Hunt：高级的包嗅探和会话劫持工具网址：http://lin.fsid.cvut.cz/~kra/index.html#HUNTHoneyd：你个人的honeynet网址：http://www.citi.umich.edu/u/provos/honeyd/，http://www.honeynet.org/Stunnel：多种用途的SSL加密外壳网址：http://www.stunnel.org/Paketto Keiretsu：极端的TCP/IP网址：http://www.doxpara.com/pakettoFragroute：破坏入侵检测系统最强大的工具网址：http://www.monkey.org/~dugsong/fragroute/SPIKE Proxy：开放源代码的HTTP代理程序网址：http://www.immunitysec.com/spikeproxy.htmlTHC-Hydra：网络认证的破解工具网址：http://www.thc.org/releases.phpWeb Site: ˉ黑色.小亮Post Title: Linux 优秀安全工具Post Url: http://www.blackxl.org/linux-good-safety-tool.html</description></item><item><title>【转】VulnDisco Pack Professional 8.11, 0day list</title><link>/posts/switch_vulndisco_pack_professional_811_0day_list/</link><pubDate>Mon, 29 Oct 2012 07:26:00 +0000</pubDate><guid>/posts/switch_vulndisco_pack_professional_811_0day_list/</guid><description>VulnDisco Pack Professional 8.11, 0day list很久不搞洞了,但是看到漏洞尤其是0day, 依然很兴混啊!http://intevydis.com/vd-list.shtml好像也不是很贵,5200刀,合人民币三万五左右.三款干ASUS笔记本的0day:ASUS WL-330gE remote exploitASUS WL-500W exploitASUS WL-500W exploit (II)下面这些0day也挺有意思:Symantec Altiris Deployment Solution 6.9 exploitIpswitch IMail Server 10 exploitAkamai Download Manager exploitD-Link DIR-400 exploitFedora Directory Server 1.0.2 double free triggerHP Perfomance Insight 5.3 exploitHP OpenView Network Node Manager 7.53 exploitLotus Domino Server 6.5.4 nIMAP.exe stack overflowKerio MailServer heap overflow triggerLANDesk Management Agent/SuiteLinksys WRT54GL exploitRemotelyAnywhere exploitMcAfee Email and Web Security Appliance (VMtrial) 5.1 exploitMySQL 5.x exploitOpenOffice exploitEudora WorldMail 3.</description></item><item><title>[转]Mozilla面向旧版火狐发布安全更新 安全公司警告火狐3.6存新安全漏洞</title><link>/posts/rpm_mozilla_firefox_released_security_updates_for_earlier_versions_of_the_security_company_warned_firefox_36_new_security_vulnerabilities_exist/</link><pubDate>Mon, 29 Oct 2012 07:17:00 +0000</pubDate><guid>/posts/rpm_mozilla_firefox_released_security_updates_for_earlier_versions_of_the_security_company_warned_firefox_36_new_security_vulnerabilities_exist/</guid><description>Mozilla面向旧版火狐发布安全更新 安全公司警告火狐3.6存新安全漏洞dryiceboy发布于 2010-02-20 07:58:27|3046 次阅读 Mozilla公司近日面向旧版本火狐浏览器推出了五款安全更新补丁，而另外一家安全公司Secunia则警告用户称最新版火狐3.6中可能存在一个危险 程度极高的安全漏洞。今年一月份，Mozilla公司曾扬言称不会再对火狐3.0等老版本浏览器提供技术支持，不过本周三，Mozilla公司还是为火狐浏览器的3.5.8，以及3.0.18等版本的旧款浏览器发布了数款更新补丁，并表示旧版版本中有关的漏洞在1月21日发布的最新版火狐3.6浏览器中已经被修正。这次的更新主要面向五个旧版浏览器的安全漏洞，其中有三个漏洞被Mozilla公司标记为“危急”级别。造成这三个漏洞的主要原因有：1、浏览器处理内存不足的过程中出错；2、Gecko网页渲染引擎存在不稳定问题；3、专门处理脚本文件的Web worker部分无法正常处理已张贴的信息。Mozilla表示，以上三个漏洞均可被恶意软件利用来入侵用户的系统。而余下的两个漏洞的危害级别则稍低，可允许攻击者执行恶意 JavaScript代码。这次面向火狐3.5.8和3.0.18版本的安全更新可适用于Windows，Mac OSX和Linux三种操作系统，用户可以通过浏览器内建的升级功能来安装这些安全更新。另外，Secunia安全公司本周四报道称他们发现了火狐3.6版本中的一个新的安全漏洞，Mozilla公司目前为止仍未就该安全漏洞发布修正补丁，Secunia警告称此漏洞可令攻击者在用户的系统中执行恶意代码。据Secunia称，目前安装了VulnDisco Pack插件的Immunity公司Canvas漏洞测试软件可以检测出这一漏洞，不过VulnDisco Pack的开发公司 Intevydis并没有将该漏洞的细节公开，Secunia公司将这一漏洞标记为“高危”级别。</description></item><item><title>[转]卡巴斯基欲构建安全操作系统：特别针对工业系统开发</title><link>/posts/rpm_kaspersky_want_to_build_a_secure_operating_system_specially_developed_for_industrial_systems/</link><pubDate>Wed, 17 Oct 2012 06:29:00 +0000</pubDate><guid>/posts/rpm_kaspersky_want_to_build_a_secure_operating_system_specially_developed_for_industrial_systems/</guid><description>卡巴斯基欲构建安全操作系统：特别针对工业系统开发illumi发布于 2012-10-17 01:00:11|2095 次阅读 稿源:cnBeta.COM 卡巴斯基实验室（Kaspersky Labs）目前正致力于构建卡巴斯基自有安全操作系统，不过这款系统将来只会运行在工业体系内，和个人家庭PC的关系不是很大。在今天卡巴斯基发布的博文 中，卡巴斯基首席执行官Eugene Kaspersky确认了这款新系统的传言属实，还描述了开发这款系统的背景以及开发的进度。计算机攻击和安全问题在网络中蔓延滋长，这对工业维护系统而言也是一种挑战。卡巴斯基表示，如果病毒感染了企业的一台计算机，那么这台计算机会迅速与网络断开，避免对网络内的其他设备造成影响。但是对于工业控制系统（ICS）而言，即便受到病毒的侵袭，也无法简单对设备进行下线处理，因为设备时常处于临界操作状态，或是基础设施之一，无法将其与网络断开。所以很多运行ICS系统的企业不得不在设备在线的情况下，对病毒和恶意软件的攻击进行处理，这在操作上是相当有难度的。为此，卡巴斯基建议企业采用全新的安全操作系统，在ICS中可进行部署和安装。这种操作系统可令工业系统保持健康状态，数据运算和操作更有保障。微软苹果或是其他操作系统无法安全运转的情况下，卡巴斯基所提供的这款安全操作系统又是如何运转的呢？卡巴斯基表示这款系统所针对的领域相较传统系统有差异，并不针对传统PC市场，而面向工业系统。“首先，我们的系统是高度定制的，专门用于处理某些特别的任务，这跟在传统PC上运行半条命游戏、做视频剪辑抑或发微博等操作是不同的概念。”卡巴斯基解释道。这款操作系统还能禁用所有未经授权的代码和应用。“这一点非常重要：执行第三方代码，闯入系统中或者运行未经授权的应用在我们的系统中都是不可用的。”卡巴斯基特别谈到，“这一点在系统中就能明确地感受得到。”虽然卡巴斯基表示这款系统具有研发的可行性，但是开发的难度相对而言比较复杂，尤其是针对工业化的公司。目前这一工程尚处于初始阶段，Eugene拒绝再透露更多的细节内容。随着计算机攻击事件的增多以及工业系统的脆弱问题日益凸显，卡巴斯基的这一解决方案或许确实可行。那么就等着未来卡巴斯基开发的成果吧。</description></item></channel></rss>