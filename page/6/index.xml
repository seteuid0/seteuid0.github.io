<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>seteuid0's blog</title><link>/</link><description>Recent content on seteuid0's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This is a customized copyright.</copyright><lastBuildDate>Sun, 18 Apr 2021 11:16:32 +0800</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>[zz]wayland and fedora</title><link>/posts/zzwayland_and_fedora/</link><pubDate>Thu, 28 Nov 2013 12:16:00 +0000</pubDate><guid>/posts/zzwayland_and_fedora/</guid><description>seteuid0's blog /posts/zzwayland_and_fedora/ -&lt;p>Wayland and Fedora    Matthias Clasen      Wed Mar 20 12:29:28 UTC 2013    Previous message:rawhide report: 20130320 changesNext message:Wayland and FedoraMessages sorted by:             [ date ]             [ thread ]             [ subject ]             [ author ]&lt;/p>
- /posts/zzwayland_and_fedora/ - This is a customized copyright.</description></item><item><title>QT：类似迅雷浮窗的不规则窗口的实现</title><link>/posts/qt_thunder_similar_floating_window_to_achieve_irregular_window/</link><pubDate>Thu, 21 Nov 2013 14:05:00 +0000</pubDate><guid>/posts/qt_thunder_similar_floating_window_to_achieve_irregular_window/</guid><description>seteuid0's blog /posts/qt_thunder_similar_floating_window_to_achieve_irregular_window/ -&lt;p>见http://blog.csdn.net/small_qch/article/details/7054750需要将父类修改成QDialog主要思路：1：将窗体设为Qt::FramelessWindowHint（去掉标题栏）。2：用一幅有部分区域是透明的图片作为程序的界面，并将图片透明的地方设为穿透。3：重载程序的鼠标事件。运行时截图（浅绿色的是桌面背景）源代码：&lt;/p>
- /posts/qt_thunder_similar_floating_window_to_achieve_irregular_window/ - This is a customized copyright.</description></item><item><title>dbus学习总结</title><link>/posts/dbus_learning_summary-2/</link><pubDate>Tue, 19 Nov 2013 12:37:00 +0000</pubDate><guid>/posts/dbus_learning_summary-2/</guid><description>seteuid0's blog /posts/dbus_learning_summary-2/ -&lt;p>dbus使用的人比较多，在csdn上有几个人都介绍的比较详细，跟着走一次基本就可以掌握。推介http://blog.csdn.net/flowingflying/article/details/5512222系列的。可以掌握dbus-binding相关的使用方式，比较简单。对于method通信方式中，2端的连接，核心见如下的API：12345DBUS_EXPORT DBusMessage * dbus_message_new_method_call  (   const char *    destination,const char *    path,const char *    iface,const char *    method)  也就是必须要知道对方的destination (也就是bus name,object path,interface name和method。一个程序因该对应一个bus name,连接dbus-daemon的时候请求获得，一个应用可以有几个object path。interface 就是可以比较好的将method分类，方便使用。&lt;/p>
- /posts/dbus_learning_summary-2/ - This is a customized copyright.</description></item><item><title>Dbus学习总结</title><link>/posts/dbus_learning_summary/</link><pubDate>Tue, 19 Nov 2013 12:34:00 +0000</pubDate><guid>/posts/dbus_learning_summary/</guid><description>seteuid0's blog /posts/dbus_learning_summary/ -&lt;p>dbus使用的人比较多，在csdn上有几个人都介绍的比较详细，跟着走一次基本就可以掌握。推介http://blog.csdn.net/flowingflying/article/details/5512222系列的。可以掌握dbus-binding相关的使用方式，比较简单。对于method通信方式中，2端的连接，核心见如下的API：也就是必须要知道对方的destination (也就是bus name,object path,interface name和method。一个程序因该对应一个bus name,连接dbus-daemon的时候请求获得，一个应用可以有几个object path。interface 就是可以比较好的将method分类，方便使用。&lt;/p>
- /posts/dbus_learning_summary/ - This is a customized copyright.</description></item><item><title>[zz]Red Hat正与Intel紧密协作，力争在Fedora 21中默认加入Wayland</title><link>/posts/zz_red_hat_are_working_in_close_collaboration_with_intel_and_strive_to_default_in_fedora_21_added_wayland/</link><pubDate>Fri, 15 Nov 2013 05:55:00 +0000</pubDate><guid>/posts/zz_red_hat_are_working_in_close_collaboration_with_intel_and_strive_to_default_in_fedora_21_added_wayland/</guid><description>seteuid0's blog /posts/zz_red_hat_are_working_in_close_collaboration_with_intel_and_strive_to_default_in_fedora_21_added_wayland/ -&lt;p>Red Hat正与Intel紧密协作，力争在Fedora 21中默认加入Wayland2013-9-22 12:45| 发布者: linux| 查看数: 190| 评论数: 3|赞0摘要: 为了使Wayland支持GNOME，Red Hat与Intel的开发者紧密合作，希望能为Wayland加入Fedora21做好及时准备。 Ubuntu曾企图征服FOSS（Free and Open Source Software自由和开源软件）世界的秘密计划被Intel的一纸声明挫败 &amp;hellip;为了使Wayland支持GNOME，Red Hat与Intel的开发者紧密合作，希望能为Wayland加入Fedora21做好及时准备。Ubuntu曾企图征服FOSS（Free and Open Source Software自由和开源软件）世界的秘密计划被Intel的一纸声明挫败，至少到现在为止，Ubuntu仍未能翻身。但如今，Intel开发者的真正计划也被揭露了。抛开那些戏剧化的剧情，实际上Intel为Wayland的未来投入巨资已不是秘密，Intel的开发者们正加紧与Red Hat的合作，争取将GNOME Shell变为一个&amp;quot;码农&amp;quot;（译注，意指GNOME Shell只完成表层的外围工作）。来自Red Hat的Christian Schaller在他的个人博客中写道：“我们在Red Hat的团队一直在和我们的同行Intel紧密协作，合并并稳固相关的补丁包，保证Wayland能够支持GNOME，同时查看堆栈中还有哪些地方需要进一步改进。”看起来这个小组当前的目标是为Fedora 20准备一个足够的技术预览版本，至少目前是这样。这不是一个正式项目，但至少应该会给人们一个值得期待的idea。Ubuntu13.10预定于10月份发布，在这个特殊的时间点上，Canonical是否会急切的使出全力力推Mir，目前还并不明朗。Schaller在他的博客中还写道，“因此，一旦确信用户不会感到负面影响，我们才会最终用Wayland替代X服务器。所以，在Fedora 21中默认采用Wayland还是X服务器，这仍然是一个悬而未决的问题。”这场显示服务端之间的“战争”即将决出一个赢家，那就是终端用户。为了提供更好的用户体验，决战双方，Intel和Canonical都更加充满斗志。无论谁胜谁负，最终受益的都将是我们这些用户。 via:http://news.softpedia.com/news/Red-Hat-and-Intel-Working-Closely-to-Bring-Wayland-as-Default-for-Fedora-21-383119.shtml&lt;/p>
- /posts/zz_red_hat_are_working_in_close_collaboration_with_intel_and_strive_to_default_in_fedora_21_added_wayland/ - This is a customized copyright.</description></item><item><title>[zz]linux如何查看CPU，内存，机器型号，网卡信息</title><link>/posts/zz_linux_how_to_view_cpu_memory_machine_type_card_information/</link><pubDate>Fri, 08 Nov 2013 05:52:00 +0000</pubDate><guid>/posts/zz_linux_how_to_view_cpu_memory_machine_type_card_information/</guid><description>seteuid0's blog /posts/zz_linux_how_to_view_cpu_memory_machine_type_card_information/ -&lt;p>中国蓝天linux如何查看CPU，内存，机器型号，网卡信息查看CPU信息（型号）# cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c      8  Intel(R) Xeon(R) CPU            E5410   @ 2.33GHz(看到有8个逻辑CPU, 也知道了CPU型号)# cat /proc/cpuinfo | grep physical | uniq -c      4 physical id      : 0      4 physical id      : 1(说明实际上是两颗4核的CPU)PS：Jay added on 10th, May, 2011# 其实是可能有超线程HT技术，不一定是有4核，也可能是2核4线程；当时还理解不清楚# getconf LONG_BIT   32(说明当前CPU运行在32bit模式下, 但不代表CPU不支持64bit)# cat /proc/cpuinfo | grep flags | grep ' lm ' | wc -l   8(结果大于0, 说明支持64bit计算. lm指long mode, 支持lm则是64bit)再完整看cpu详细信息, 不过大部分我们都不关心而已.# dmidecode | grep -A81 &amp;lsquo;Processor Information&amp;rsquo;查看主板型号：# dmidecode |grep -A16 &amp;ldquo;System Information$&amp;ldquo;内存槽及内存条：# dmidecode |grep -A16 &amp;ldquo;Memory Device$&amp;ldquo;查看内存信息# cat /proc/meminfo# uname -aLinux euis1 2.6.9-55.ELsmp #1 SMP Fri Apr 20 17:03:35 EDT 2007 i686 i686 i386 GNU/Linux(查看当前操作系统内核信息)# cat /etc/issue | grep LinuxRed Hat Enterprise Linux AS release 4 (Nahant Update 5)(查看当前操作系统发行版信息)查看机器型号# dmidecode | grep &amp;ldquo;Product Name&amp;rdquo;  查看网卡信息# dmesg | grep -i eth# mii-tool硬盘：# fdisk -l# smartctl -a /dev/sda&lt;/p>
- /posts/zz_linux_how_to_view_cpu_memory_machine_type_card_information/ - This is a customized copyright.</description></item><item><title>[zz]Fedora 18 安装fcitx</title><link>/posts/zz_fedora_18_install_fcitx/</link><pubDate>Wed, 06 Nov 2013 16:16:00 +0000</pubDate><guid>/posts/zz_fedora_18_install_fcitx/</guid><description>seteuid0's blog /posts/zz_fedora_18_install_fcitx/ -&lt;p>之前配置过fcitx,后来系统升级下就无法使用了，一直看不到输入选词框。后来就采用ibus了。看到了下面的文章，有空再配下。用ibus用了一段时间后苦于对其输入准确性的蛋疼换了fcitx，感觉fcitx-cloudpinyin + fcitx-sunpinyin+搜狗词库的体验要比ibus好很多了。下面给上安装方法。1、卸载ibus相关组件感觉这个没啥好说的，命令类似yum remove ibus*啥的自己看着搞，注意别误卸载一些其他重要软件就好2、安装 fcitx fcitx-sunpinyin fcitx-cloudpinyinsudo yum -y install fcitx fcitx-sunpinyin fcitx-cloudpinyin fcitx-config这里安装config是为了配置方便，既然已经决定在图形下了，也没必要非得去用vim修改配置文件这种方法对吧，虽然vim修改起来定制性更多，但是感觉config提供的功能已经足够了3、在自己的.bashrc文件里添加fcitx相关条目，同时在gnome里给fcitx添加开机启动.bashrc里的内容如下:export XMODIFIERS=@im=fcitxexport QT_IM_MODULE=ximexport GTK_IM_MODULE=xim然后alt+f2 输入gnome-session-properties，添加一个启动条目，名称命令都是fcitx4、注销或者重启后应该就ok了。&lt;/p>
- /posts/zz_fedora_18_install_fcitx/ - This is a customized copyright.</description></item><item><title>[zz]fedora18升级到fedora19</title><link>/posts/zz_fedora18_upgraded_to_fedora19/</link><pubDate>Wed, 06 Nov 2013 16:08:00 +0000</pubDate><guid>/posts/zz_fedora18_upgraded_to_fedora19/</guid><description>seteuid0's blog /posts/zz_fedora18_upgraded_to_fedora19/ -&lt;p>升级fedora 18到fedora 19猫终于发布了，之前看过gnome 3.8的介绍视频，感觉比3.6比起来要好太多了，所以很期待，全新安装也太麻烦，所以准备升级安装。fedora提供有升级工具fedup，升级起来还是比较方便的。下面结合官方文档和自己升级的经验说说升级流程。1、准备工作首先把系统彻底的更新一遍sudo yum -y upgrade安装fedupsudo yum -y install fedup2、开始升级这里要分两部，首先下载更新需要的包，有三个途径可以选择，网络，本地镜像，或者做好的启动光、U盘，这里我用网络更新，这也是官方推荐的更新方式，因为这样可以直接更新到目前最新的包sudo fedup &amp;ndash;network 19下载完毕后会提示你结果，正常的话就会提示你让你重启reboot接下来就比较漫长了，一切都不用管，以为内fedup会在你的grub.cfg里添加一个入口，不管你之前默认的是那个，只要你不在reboot前更新你的grub.cfg，那就可以放手喝杯茶静静的等了，开始升级的时候就是一个fedora蓝水滴呼吸闪烁下方一个进度条，进度条滚完再等一会，然后可能会重启，之后就能进入fedora 19了。但是这里要注意的是，如果你装了闭源驱动的话，我是nvidia的闭源驱动，在进度条滚完后可能会卡死，这里没什么，等一会，没反映强制关机就好了，关机时候不会听到硬盘急停的声音，说明进度条滚完确实要重启的，只不过我们因为驱动被卡在重启那里不动了。。不过要记得重启后赶快重装驱动，省得一些不比要的麻烦。3、清理工作这里比较恶心的就是fedup可能在更新完后不能正确清理，只能手动来清理了sudo fedup  &amp;ndash;resetbootloadersudo fedup &amp;ndash;clean这样grub.cfg和升级后的一些临时文件就能清理掉一些，接着sudo yum clean allsudo yum distro-sync来把包都更成最新的，然后要清理fedora 18的残留内核，因为是版本升级，所以18的内核就都没用了，都要清掉，命令如下:sudo package-cleanup &amp;ndash;oldkernels &amp;ndash;count 1成功后升级你的配置文件，如果不失败，估计是你装得什么东西还对内核有依赖，yum删掉后再清除内核，然后更新grub2配置文件sudo grub2-mkconfig -o /boot/grub2/grub.cfg更新你的grub2配置文件,重启reboot如果发现grub2变得很丑的话，进入系统后sudo yum -y reinstall gurb2*sudo grub2-mkconfig -o /boot/grub2/grub/cfg这样就能解决问题然后再更新一边你的配置文件sudo grub2-mkconfig -o /boot/grub2/grub/cfg重启看看，是不是一切都回到原样了～哈哈到这里升级就搞定了。值得说的是gnome 3.8里面im-chooser依然是不能用的。我是升级安装，不知到这个玩意在19的liveCD里还有没有。但是顶部状态栏现在即使只有一个输入源的情况下依然显示输入法图标，为输入和设置添加不少方便。启动器可以通过dconf-tool来自己创建app folder，不过名字却要是那几个给定的名字，我只能一个个的试，现在可用的有DeveloperTools,Office,Accessories,总之和win Eng里的名字都差不多，自己慢慢去搞吧，这里就说这么多了，和猫玩去咯～&lt;/p>
- /posts/zz_fedora18_upgraded_to_fedora19/ - This is a customized copyright.</description></item><item><title>selinux支持动态客体类添加</title><link>/posts/adding_support_for_dynamic_object_class_selinux/</link><pubDate>Wed, 06 Nov 2013 13:06:00 +0000</pubDate><guid>/posts/adding_support_for_dynamic_object_class_selinux/</guid><description>seteuid0's blog /posts/adding_support_for_dynamic_object_class_selinux/ -&lt;p>现在linux内核大概从2.6.33开始支持动态客体了的添加，即可以不重新编译内核，直接编译selinux策略即可添加客体类，这样做有什么好处呢？如过开发一个selnux aware的应用程序，且该程序引入了一个或多个客体类，则可以直接修改策略，即可以使用。所以现在核外的很多应用都针对的进行了修改，核外请求客体类和操作集的时候应该都是用名字，即“class”和&amp;quot;perm&amp;quot;来传递到内核进行判断，如果是传递flask.h或av_permissions.h中的值，则可能会导致请求的客体类和内核所设定的客体类不匹配的问题。所以核外应该使用selinux_set_mapping或者selinux_access_check来进行检查，而不知直接使用avc_has_perm.&lt;/p>
- /posts/adding_support_for_dynamic_object_class_selinux/ - This is a customized copyright.</description></item><item><title>[zz]cgit安装部署</title><link>/posts/zz_cgit_installation_and_deployment/</link><pubDate>Wed, 30 Oct 2013 16:05:00 +0000</pubDate><guid>/posts/zz_cgit_installation_and_deployment/</guid><description>seteuid0's blog /posts/zz_cgit_installation_and_deployment/ -&lt;p> [how to] 如何在ubuntu上安装cgit分类： git2010-07-03 16:38 1688人阅读 评论(0) 收藏 举报ubuntuapachedeb工具gitcss   cgit 是一种git 代码浏览工具，类似gitweb ，但是更快速，openembedded ,freedeskop 等项目都在采用cgit。我就尝试在我的ubuntu 10.04安装了cgit，感觉不错。步骤如下:安装cgit两种选择:1 直接用deb二进制包安装，点击这里 去下载                  2 编译源代码,参考官方readme安装apache2假设你的DocumentRoot 是/var/www$ sudo mkdir /var/www/cgit$ sudo cp /usr/share/cgit/cgit.css /var/www/cgit$ sudo cp /usr/share/cgit/cgit.pnf /var/www/cgit建立一个cgit配置文件在/etc/apache2/conf.d/目录下面[cpp] view plaincopyalias /cgit /var/www/cgit    &amp;lt;Directory &amp;ldquo;/var/www/cgit/&amp;quot;&amp;gt;        AllowOverride None        Options ExecCGI        DirectoryIndex /cgi-bin/cgit.cgi        Order allow,deny        Allow from all    &lt;!-- raw HTML omitted -->   cgit 配置文件cgitrc在/etc下面[c-sharp] view plaincopycss=/cgit/cgit.css  logo=/cgit/cgit.png  repo.url=cgit.git  repo.path=/home/lynn/cgit.git  repo.desc=demo  repo.owner=lynn  重启apache2然后打开  http://localhost/cgit 就可以了&lt;/p>
- /posts/zz_cgit_installation_and_deployment/ - This is a customized copyright.</description></item></channel></rss>